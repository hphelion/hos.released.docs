./commercial/GA1/1.1commcerical.install-TLS.dita:<p>If the deployer does not wish to generate the key/cert pair, the installer software will generate this pair and place the generated key and certificate at /root/eca.key and /root/eca.crt, respectively, on the seed.</p>
./commercial/GA1/1.1commcerical.install-TLS.dita:<p>If the deployer wishes to provide an intermediary CA cert/key pair, they should be placed on the seed before deployment at /root/eca.key and /root/eca.crt by running the following copy commands:</p>
./commercial/GA1/1.1commcerical.install-TLS.dita:<p>It is generally recommended that the deployer provide an intermediary CA key and certificate generated from a well-known certificate authority during the installation process, so trust can be established using the certificate chain. This can be either a specific certificate/key generated for this deployment, a general certificate/key that is used for test deployments by that organization, or a delegated signing certificate from another PKI to enable the use of existing trust relationships between users and that PKI. Either way, the deployer must provide the CA certificate to the Helion users, to enable secure TLS and prevent certificate errors and warnings.</p>
./commercial/GA1/1.1commcerical.install-TLS.dita:<p>If the deployer has not provided a key/cert pair, the self-signed certificate created during the installation process must be retrieved from the seed at /root/eca.crt after deployment. This certificate can then be used to authenticate the TLS connection when connecting to any of the overcloud OpenStack services in the HPE Helion OpenStack cloud. This can be retrieved using the following command:</p>
./commercial/GA1/1.1commercial.install-GA-overview.dita:<p>Users and client software must be able to verify the TLS certificates used on the Helion APIs and web interface, so the deployer must make the CA certificate available to users. For more information see <xref href="../../commercial/GA1/1.1commcerical.install-TLS.dita" >HPE Helion OpenStack TLS Support</xref>.</p>
./helion/administration/thirdparty_driver_support.dita:        third-party plugins or drivers. This document provides an overview of deployer-side
./helion/administration/thirdparty_driver_support.dita:                deployer-side Virtual Environment Editing</xref></li>
./helion/administration/thirdparty_driver_support.dita:    <section id="venv_editing"><title>Note about deployer-side Virtual Environment Editing</title>
./helion/administration/thirdparty_driver_support.dita:      <p>At this point, a deployment (or an upgrade) can take place as normal because the deployer
./helion/architecture/alternative/alternative_configurations.dita:                <li><xref keyref="standalone_deployer">Using a Standalone Lifecycle-Manager Node</xref>
./helion/architecture/alternative/standalone_deployer.dita:<topic id="standalone_deployer">
./helion/architecture/examples/entryscale_kvm_vsa.dita:            deployer or lifecycle manager, is also used as one of the controller nodes. This model
./helion/architecture/example_configurations.dita:        <li><xref keyref="standalone_deployer">Using a Standalone Lifecycle-Manager Node</xref></li>
./helion/bura/disable_bura_before_deployment.dita:#    - include: roles/freezer-jobs/tasks/_manage_job.yml template_name=deployer_backup_swift.json.j2
./helion/bura/disable_bura_before_deployment.dita:#    - include: roles/freezer-jobs/tasks/_manage_job.yml template_name=deployer_restore_swift.json.j2
./helion/bura/disable_bura_before_deployment.dita:#    - include: roles/freezer-jobs/tasks/_manage_job.yml template_name=deployer_backup_ssh.json.j2
./helion/bura/disable_bura_before_deployment.dita:#    - include: roles/freezer-jobs/tasks/_manage_job.yml template_name=deployer_restore_ssh.json.j2
./helion/bura/disable_bura_before_deployment.dita:    - include: roles/freezer-jobs/tasks/_manage_job.yml template_name=deployer_backup_swift.json.j2
./helion/bura/disable_bura_before_deployment.dita:    - include: roles/freezer-jobs/tasks/_manage_job.yml template_name=deployer_restore_swift.json.j2
./helion/bura/disable_bura_before_deployment.dita:    - include: roles/freezer-jobs/tasks/_manage_job.yml template_name=deployer_backup_ssh.json.j2
./helion/bura/disable_bura_before_deployment.dita:    - include: roles/freezer-jobs/tasks/_manage_job.yml template_name=deployer_restore_ssh.json.j2
./helion/bura/disable_bura_before_deployment.dita:    - include: roles/freezer-jobs/tasks/_manage_job.yml template_name=deployer_backup_swift.json.j2
./helion/bura/disable_bura_before_deployment.dita:    - include: roles/freezer-jobs/tasks/_manage_job.yml template_name=deployer_restore_swift.json.j2
./helion/bura/disable_bura_before_deployment.dita:    - include: roles/freezer-jobs/tasks/_manage_job.yml template_name=deployer_backup_ssh.json.j2
./helion/bura/disable_bura_before_deployment.dita:    - include: roles/freezer-jobs/tasks/_manage_job.yml template_name=deployer_restore_ssh.json.j2
./helion/bura/disable_bura_before_deployment.dita:#    - include: roles/freezer-jobs/tasks/_manage_job.yml template_name=deployer_backup_swift.json.j2
./helion/bura/disable_bura_before_deployment.dita:#    - include: roles/freezer-jobs/tasks/_manage_job.yml template_name=deployer_restore_swift.json.j2
./helion/bura/disable_bura_before_deployment.dita:     - include: roles/freezer-jobs/tasks/_manage_job.yml template_name=deployer_backup_ssh.json.j2
./helion/bura/disable_bura_before_deployment.dita:     - include: roles/freezer-jobs/tasks/_manage_job.yml template_name=deployer_restore_ssh.json.j2
./helion/bura/restore_shared_controller.dita:        href="../installation/install_entryscale_kvm.dita#install_kvm/setup_deployer"
./helion/bura/restore_shared_controller.dita:        scale_kvm.html#install_kvm__setup_deployer</xref></section>
./helion/bura/restore_shared_controller.dita:    <section> Deployer disaster recovery -<xref
./helion/bura/restore_shared_controller.dita:        >http://docs.hpcloud.com/helion/bura/cloud_control_plane_recovery.html#topic_tb4_lqy_qt__deployer</xref>
./helion/bura/restore_shared_controller.dita:        <li> Then you will want to restore your data using the Deployer Disaster Recovery
./helion/bura/restore_shared_controller.dita:        <li> Manually copy the /etc/group file from a backup of the old deployer. Note, currently
./helion/bura/restore_shared_controller.dita:          Freezer does not back up /etc/group file, so it won't get restored when freezer deployer
./helion/bura/restore_shared_controller.dita:      <p><b>Deployer Disaster Recovery Options</b></p>
./helion/bura/restore_shared_controller.dita:          <codeblock>cd ~/helion/hos/ansible/ansible-playbook -i hosts/localhost _deployer_restore_helper.yml -e '{ "old_deployer_hostname": "&lt;here put the hostname of the server that was your deployer>" }'</codeblock>
./helion/bura/restore_shared_controller.dita:      <b>Shared Deployer/Controller Replacement Procedure</b><p/> Thursday, February 04, 2016 10:32
./helion/bura/restore_shared_controller.dita:      PM HOS 3.0 Page 1 Question: When deployer is down, we can't access either compute or
./helion/bura/restore_shared_controller.dita:          <codeblock>hostname &lt;here put the hostname of the server that was your deployer></codeblock>
./helion/bura/restore_shared_controller.dita:          deployer name which modified in above step iii. </li>
./helion/bura/restore_shared_controller.dita:          your deployer and update /etc/hosts file according On the lifecycle manager: Become root
./helion/bura/restore_shared_controller.dita:        <li>When deployer is reinstalled it won't have details of the HOSTNAME of the VIP in the
./helion/bura/restore_shared_controller.dita:        <li>We need to add to the document to edit the /etc/hosts file of the deployer and add the
./helion/bura/restore_shared_controller.dita:        <li>Get the id of the job corresponding to "HLM Default: Deployer restore from Swift </li>
./helion/bura/restore_shared_controller.dita:        <li>If it is present, also stop the deployer's ssh backup </li>
./helion/bura/restore_shared_controller.dita:        <li>Get the id of the job corresponding to "HLM Default: deployer restore from Swift"#
./helion/bura/restore_shared_controller.dita:ansible-playbook -i hosts/localhost _deployer_restore_helper.yml -e '{ "old_deployer_hostname": "&lt;here put the hostname of the server that was your deployer>"}'</codeblock>
./helion/bura/restore_shared_controller.dita:          <codeblock>hostname &lt;here put the hostname of the server that was your deployer></codeblock></li>
./helion/bura/restore_shared_controller.dita:          deployer name which modified in above step iii. Change the hostname of the server so it
./helion/bura/restore_shared_controller.dita:          points to the hostname of the server that was your deployer and update /etc/hosts file
./helion/bura/restore_shared_controller.dita:cd /root/deployer_restore_helper/</codeblock>
./helion/bura/restore_shared_controller.dita:              of the VIP address. When deployer is reinstalled it won't have details of
./helion/bura/restore_shared_controller.dita:              document to edit the /etc/hosts file of the deployer and add the VIP hostname/IP
./helion/bura/restore_shared_controller.dita:        <li>execute the restore. <codeblock>/deployer_restore_script.sh</codeblock>
./helion/conceptual_overviews/high_availability.dita:          <li><xref href="#HP3.0HA/deployer">Deployer</xref></li>
./helion/conceptual_overviews/high_availability.dita:        <p id="deployer"><b>Lifecycle Manager</b></p>
./helion/esx/eon_service.dita:      "deployer_network": {
./helion/esx/eon_service.dita:        "deployer_cidr": "172.170.2.0/24",
./helion/esx/eon_service.dita:        "deployer_gateway_ip": "172.170.2.1",
./helion/esx/eon_service.dita:        "deployer_node_ip": "172.170.1.10",
./helion/esx/eon_service.dita:        "deployer_pg_name": "hlm-Deployer-PG",
./helion/esx/eon_service.dita:        "deployer_vlan": "1702",
./helion/esx/eon_service.dita:        "enable_deployer_dhcp": "no"
./helion/esx/eon_service.dita:      "deployer_network": {
./helion/esx/eon_service.dita:        "deployer_cidr": "172.170.2.0/24",
./helion/esx/eon_service.dita:        "deployer_gateway_ip": "172.170.2.1",
./helion/esx/eon_service.dita:        "deployer_node_ip": "172.170.1.10",
./helion/esx/eon_service.dita:        "deployer_pg_name": "hlm-Deployer-PG",
./helion/esx/eon_service.dita:        "deployer_vlan": "1702",
./helion/esx/eon_service.dita:        "enable_deployer_dhcp": "no"
./helion/esx/eon_service.dita:      "deployer_network": {
./helion/esx/eon_service.dita:        "deployer_cidr": "172.170.2.0/24",
./helion/esx/eon_service.dita:        "deployer_gateway_ip": "172.170.2.1",
./helion/esx/eon_service.dita:        "deployer_node_ip": "172.170.1.10",
./helion/esx/eon_service.dita:        "deployer_pg_name": "hlm-Deployer-PG",
./helion/esx/eon_service.dita:        "deployer_vlan": "1702",
./helion/esx/eon_service.dita:        "enable_deployer_dhcp": "no"
./helion/esx/eon_service.dita:      "deployer_network": {
./helion/esx/eon_service.dita:        "deployer_cidr": "172.170.2.0/24",
./helion/esx/eon_service.dita:        "deployer_gateway_ip": "172.170.2.1",
./helion/esx/eon_service.dita:        "deployer_node_ip": "172.170.1.10",
./helion/esx/eon_service.dita:        "deployer_pg_name": "hlm-Deployer-PG",
./helion/esx/eon_service.dita:        "deployer_vlan": "1702",
./helion/esx/eon_service.dita:        "enable_deployer_dhcp": "no"
./helion/hardware.dita:            <row id="row_deployer">
./helion/hardware.dita:<!--        <row conref="#min_hardware/row_deployer"
./helion/hardware.dita:            <row conkeyref="hardware/row_deployer"
./helion/identity/keystone_to_federation.dita:          in your deployer, for example /tmp.
./helion/identity/keystone_to_federation.dita:          in your deployer, for example /tmp.
./helion/installation/blockstorageconfig_troubleshooting.dita:            /opt/HP/StoreVirtual/UI/UI.jar</codeph> command from the lifecycle manager/deployer
./helion/installation/blockstorageconfig_troubleshooting.dita:      deployer.install_vsa()
./helion/installation/blockstorageconfig_troubleshooting.dita:   File "/opt/stack/venv/storevirtual-installer-20151022T080854Z/lib/python2.7/site-packages/storevirtual_installer/deployer.py", line 88, in install_vsa
./helion/installation/blockstorageconfig_troubleshooting.dita:   File "/opt/stack/venv/storevirtual-installer-20151022T080854Z/lib/python2.7/site-packages/storevirtual_installer/deployer.py", line 479, in _roll_back_installation
./helion/installation/blockstorageconfig_troubleshooting.dita:   File "/opt/stack/venv/storevirtual-installer-20151022T080854Z/lib/python2.7/site-packages/storevirtual_installer/deployer.py", line 493, in _vsa_network_destroy
./helion/installation/configure_ceph.dita:    <section id="deployer"><title outputclass="headerH">Set Up the Lifecycle Manager as a Ceph
./helion/installation/configure_ceph.dita:          access to the Ceph cluster. Use the <codeph>ceph-setup-deployer-as-client.yml</codeph>
./helion/installation/configure_ceph.dita:ansible-playbook -i hosts/verb_hosts ceph-setup-deployer-as-client.yml</codeblock>
./helion/installation/installation_troubleshooting.dita:            href="installation_troubleshooting.dita#troubleshooting_installation/deployer_setup"
./helion/installation/installation_troubleshooting.dita:    <section id="deployer_setup"><title>Issues during Lifecycle-manager Setup</title>
./helion/installation/install_entryscale_esx.dita:    <section conref="install_entryscale_kvm.dita#install_kvm/setup_deployer"/>
./helion/installation/install_entryscale_esx.dita:        <!--The configuration files for editing are available at <codeph>~/helion/my_cloud/definition/</codeph>. Refer to the <b><xref href="input_model.dita">Helion OpenStack 2.0 Input Model</xref></b> document for assistance with the configuration files. <note type="important">If you chose to use your first controller node as your deployer, ensure that your <codeph>servers.yml</codeph> file contains the <codeph>is-deployer: true</codeph> notation in your controller options. If you are using a dedicated deployer node you can omit this. Here is an example snippet of a <codeph>servers.yml</codeph> file where a user is using their first controller node as their deployer: <codeblock># Controllers
./helion/installation/install_entryscale_esx.dita:  <b>is_deployer: true</b></codeblock></note>-->
./helion/installation/install_entryscale_esx.dita:        # Deployer Network details
./helion/installation/install_entryscale_esx.dita:        # This network should be reachable from the Deployer node
./helion/installation/install_entryscale_esx.dita:        "deployer_network": {
./helion/installation/install_entryscale_esx.dita:            #Deployer Portgroup Name. Will create if not exist.
./helion/installation/install_entryscale_esx.dita:            "deployer_pg_name": "CONF-PG",
./helion/installation/install_entryscale_esx.dita:            #Single VLAN id for CONF/Deployer network
./helion/installation/install_entryscale_esx.dita:            "deployer_vlan": "33",
./helion/installation/install_entryscale_esx.dita:            #DHCP setting for deployer network
./helion/installation/install_entryscale_esx.dita:            "enable_deployer_dhcp": "false",
./helion/installation/install_entryscale_esx.dita:            #CIDR and gateway for deployer network only when "enable_deployer_dhcp" is "no"
./helion/installation/install_entryscale_esx.dita:            "deployer_cidr": "10.20.18.0/23",
./helion/installation/install_entryscale_esx.dita:            "deployer_gateway_ip": "10.20.18.1",
./helion/installation/install_entryscale_esx.dita:            #Deployer Node's PXE IP Address
./helion/installation/install_entryscale_esx.dita:            "deployer_node_ip": "10.20.16.2"
./helion/installation/install_entryscale_esx.dita:            # We support only single DVS for Mgmt and Deployer.
./helion/installation/install_entryscale_esx.dita:            # The management_network NIC Teaming configs, will be applied to deployer_network as well.
./helion/installation/install_entryscale_esx.dita:            # Make sure you have exact same NIC teaming configurations for both deployer_network and management_network.
./helion/installation/install_entryscale_esx.dita:        "ssh_key": "&lt;deployer-ssh-pub-key-contents&gt;"
./helion/installation/install_entryscale_kvm.dita:        <li><xref href="install_entryscale_kvm.dita#install_kvm/setup_deployer">Set up the
./helion/installation/install_entryscale_kvm.dita:        <li id="notes-deployer">You may see the terms deployer and lifecycle manager used interchangeably. These are
./helion/installation/install_entryscale_kvm.dita:    <section id="setup_deployer">
./helion/installation/install_entryscale_kvm.dita:          href="installation_troubleshooting.dita#troubleshooting_installation/deployer_setup"
./helion/installation/install_entryscale_swift.dita:    <section conref="install_entryscale_kvm.dita#install_kvm/setup_deployer"/>
./helion/installation/install_entryscale_swift.dita:              <codeph>servers.yml</codeph> file contains the <codeph>is-deployer: true</codeph>
./helion/installation/install_entryscale_swift.dita:    <b>is-deployer: true</b></codeblock></p> -->
./helion/installation/ironic/install_entryscale_ironic.dita:        <section conkeyref="install_entryscale_kvm/setup_deployer"/>
./helion/installation/ironic/ironic_provisioning.dita:            the following commands on the deployer node:
./helion/installation/postinstall_tasks.dita:            deployer:</p>
./helion/installation/preinstall_checklist.dita:                <entry>Deployer O/S</entry>
./helion/installation/preinstall_checklist.dita:    <section id="deployer"><title>Lifecycle Manager</title>
./helion/installation/preinstall_checklist.dita:                <entry><xref href="install_entryscale_kvm.dita#install_kvm/setup_deployer">Set up
./helion/installation/preinstall_checklist.dita:                    the Deployer using the hLinux ISO</xref></entry>
./helion/installation/using_git.dita:          <codeph>hlm-init-deployer</codeph> script automatically - this calls
./helion/installation/using_git.dita:      <p>When you are ready to deploy a new deployer image, you must merge any configuration changes
./helion/installation/using_git.dita:      <p>Behind the scenes, the deployer provisioning runs the following playbooks: <ol>
./helion/installation/using_git.dita:          <li>deployer-init.yml ansible-playbook</li>
./helion/installation/using_git.dita:        you will notice a new commit on the 'hos' branch with the latest upstream deployer content
./helion/installation/using_git.dita:        it on the 'site' branch in ~/helion repository. Note that the deployer simply copies a
./helion/networking/using_ipam.dita:    <section>The file you must edit is neutron.conf.j2 on the deployer in the directory
./helion/operations/alarms.dita:                <p>Then, on the deployer, run the <codeph>_swift-configure.yml</codeph> playbook.
./helion/operations/audit_logs_checklist.dita:        <li>To securely log in to lifecycle manager (deployer node), run:
./helion/operations/audit_logs_enable.dita:    <li>To securely log in to lifecycle manager (deployer node), run:
./helion/operations/recovering_controller_nodes.dita:            the id corresponding to the job "HLM Default: Deployer restore from swift."<p/> Stop the
./helion/operations/recovering_controller_nodes.dita:            job "HLM Default: Deployer restore from SSH."</li>
./helion/operations/recovering_controller_nodes.dita:      <sectiondiv outputclass="insideSection" id="deployer">
./helion/operations/recovering_controller_nodes.dita:            href="../installation/install_entryscale_kvm.dita#install_kvm/setup_deployer"
./helion/operations/recovering_controller_nodes.dita:ansible-playbook -i hosts/localhost _deployer_restore_helper.yml</codeblock>
./helion/operations/recovering_controller_nodes.dita:            job corresponding to "HLM Default: Deployer restore from Swift." Stop that job so the
./helion/operations/recovering_controller_nodes.dita:            the job corresponding to "HLM Default: deployer restore from Swift" and launch that job:
./helion/operations/recovering_controller_nodes.dita:            _deployer_restore_helper.yml:
./helion/operations/recovering_controller_nodes.dita:ansible-playbook -i hosts/localhost _deployer_restore_helper.yml</codeblock>Perform
./helion/operations/recovering_controller_nodes.dita:cd /root/deployer_restore_helper/</codeblock>Then, stop
./helion/operations/recovering_controller_nodes.dita:            restore job: <codeblock>./deployer_restore_script.sh</codeblock>Start the Dayzero UI
./helion/operations/recovering_controller_nodes.dita:            and run _deployer_restore_helper.yml:
./helion/operations/recovering_controller_nodes.dita:ansible-playbook -i hosts/localhost _deployer_restore_helper.yml</codeblock>Run
./helion/operations/recovering_controller_nodes.dita:cd /root/deployer_restore_helper/</codeblock>Stop the Dayzero UI
./helion/operations/recovering_controller_nodes.dita:            <codeblock>./deployer_restore_script.sh</codeblock>Start the Dayzero UI
./helion/operations/recovering_controller_nodes.dita:            the deployer run:
./helion/operations/recovering_controller_nodes.dita:              the SWF-PRX[0] is<b> not </b>deployed, from the deployer
./helion/operations/recovering_controller_nodes.dita:          <li>From the deployer run hlm-deploy.yml:
./helion/operations/replace_controller.dita:                  href="../installation/install_entryscale_kvm.dita#install_kvm/setup_deployer">Set
./helion/operations/replace_controller.dita:              href="recovering_controller_nodes.dita#topic_tb4_lqy_qt/deployer">Lifecycle
./helion/overview.dita:        deployer and lifecycle manager interchangeably throughout the <keyword
./helion/security/barbican.dita:      enabled by following these steps on deployer node. <ol>
./helion/security/generate_own_certs.dita:      <codeblock>stack@deployerincloud-ccp-c0-m1-mgmt:~/helion/my_cloud$ ls info/cert_reqs/ 
./helion/security/generate_own_certs.dita:      <codeblock>stack@deployerincloud-ccp-c0-m1-mgmt:~/helion/my_cloud$ cat info/cert_reqs/example-internal-cert</codeblock>Then
./helion/security/generate_own_certs.dita:DNS.1 = "deployerincloud-ccp-c0-m1-mgmt"
./helion/security/generate_own_certs.dita:DNS.2 = "deployerincloud-ccp-vip-CEI-API-mgmt"
./helion/security/generate_own_certs.dita:DNS.3 = "deployerincloud-ccp-vip-CND-API-mgmt"
./helion/security/generate_own_certs.dita:DNS.4 = "deployerincloud-ccp-vip-DES-API-mgmt"
./helion/security/generate_own_certs.dita:DNS.5 = "deployerincloud-ccp-vip-FND-MDB-mgmt"
./helion/security/generate_own_certs.dita:DNS.6 = "deployerincloud-ccp-vip-FND-RMQ-mgmt"
./helion/security/generate_own_certs.dita:DNS.7 = "deployerincloud-ccp-vip-FND-VDB-mgmt"
./helion/security/generate_own_certs.dita:DNS.8 = "deployerincloud-ccp-vip-FRE-API-mgmt"
./helion/security/generate_own_certs.dita:DNS.9 = "deployerincloud-ccp-vip-GLA-API-mgmt"
./helion/security/generate_own_certs.dita:DNS.10 = "deployerincloud-ccp-vip-GLA-REG-mgmt"
./helion/security/generate_own_certs.dita:DNS.11 = "deployerincloud-ccp-vip-HEA-ACF-mgmt"
./helion/security/generate_own_certs.dita:DNS.12 = "deployerincloud-ccp-vip-HEA-ACW-mgmt"
./helion/security/generate_own_certs.dita:DNS.13 = "deployerincloud-ccp-vip-HEA-API-mgmt"
./helion/security/generate_own_certs.dita:DNS.14 = "deployerincloud-ccp-vip-HUX-SVC-mgmt"
./helion/security/generate_own_certs.dita:DNS.15 = "deployerincloud-ccp-vip-HZN-WEB-mgmt"
./helion/security/generate_own_certs.dita:DNS.16 = "deployerincloud-ccp-vip-KEY-API-mgmt"
./helion/security/generate_own_certs.dita:DNS.17 = "deployerincloud-ccp-vip-KEYMGR-API-mgmt"
./helion/security/generate_own_certs.dita:DNS.18 = "deployerincloud-ccp-vip-LOG-API-mgmt"
./helion/security/generate_own_certs.dita:DNS.19 = "deployerincloud-ccp-vip-LOG-SVR-mgmt"
./helion/security/generate_own_certs.dita:DNS.20 = "deployerincloud-ccp-vip-MON-API-mgmt"
./helion/security/generate_own_certs.dita:DNS.21 = "deployerincloud-ccp-vip-NEU-SVR-mgmt"
./helion/security/generate_own_certs.dita:DNS.22 = "deployerincloud-ccp-vip-NOV-API-mgmt"
./helion/security/generate_own_certs.dita:DNS.23 = "deployerincloud-ccp-vip-NOV-MTD-mgmt"
./helion/security/generate_own_certs.dita:DNS.24 = "deployerincloud-ccp-vip-OCT-API-mgmt"
./helion/security/generate_own_certs.dita:DNS.25 = "deployerincloud-ccp-vip-OPS-WEB-mgmt"
./helion/security/generate_own_certs.dita:DNS.26 = "deployerincloud-ccp-vip-SHP-API-mgmt"
./helion/security/generate_own_certs.dita:DNS.27 = "deployerincloud-ccp-vip-SWF-PRX-mgmt"
./helion/security/generate_own_certs.dita:DNS.28 = "deployerincloud-ccp-vip-admin-CEI-API-mgmt"
./helion/security/generate_own_certs.dita:DNS.29 = "deployerincloud-ccp-vip-admin-CND-API-mgmt"
./helion/security/generate_own_certs.dita:DNS.30 = "deployerincloud-ccp-vip-admin-DES-API-mgmt"
./helion/security/generate_own_certs.dita:DNS.31 = "deployerincloud-ccp-vip-admin-FND-MDB-mgmt"
./helion/security/generate_own_certs.dita:DNS.32 = "deployerincloud-ccp-vip-admin-FRE-API-mgmt"
./helion/security/generate_own_certs.dita:DNS.33 = "deployerincloud-ccp-vip-admin-GLA-API-mgmt"
./helion/security/generate_own_certs.dita:DNS.34 = "deployerincloud-ccp-vip-admin-HEA-ACF-mgmt"
./helion/security/generate_own_certs.dita:DNS.35 = "deployerincloud-ccp-vip-admin-HEA-ACW-mgmt"
./helion/security/generate_own_certs.dita:DNS.36 = "deployerincloud-ccp-vip-admin-HEA-API-mgmt"
./helion/security/generate_own_certs.dita:DNS.37 = "deployerincloud-ccp-vip-admin-HUX-SVC-mgmt"
./helion/security/generate_own_certs.dita:DNS.38 = "deployerincloud-ccp-vip-admin-HZN-WEB-mgmt"
./helion/security/generate_own_certs.dita:DNS.39 = "deployerincloud-ccp-vip-admin-KEY-API-mgmt"
./helion/security/generate_own_certs.dita:DNS.40 = "deployerincloud-ccp-vip-admin-KEYMGR-API-mgmt"
./helion/security/generate_own_certs.dita:DNS.41 = "deployerincloud-ccp-vip-admin-MON-API-mgmt"
./helion/security/generate_own_certs.dita:DNS.42 = "deployerincloud-ccp-vip-admin-NEU-SVR-mgmt"
./helion/security/generate_own_certs.dita:DNS.43 = "deployerincloud-ccp-vip-admin-NOV-API-mgmt"
./helion/security/generate_own_certs.dita:DNS.44 = "deployerincloud-ccp-vip-admin-OPS-WEB-mgmt"
./helion/security/generate_own_certs.dita:DNS.45 = "deployerincloud-ccp-vip-admin-SHP-API-mgmt"
./helion/security/generate_own_certs.dita:DNS.46 = "deployerincloud-ccp-vip-admin-SWF-PRX-mgmt"
./helion/security/tls_changes.dita:      <codeblock>stack@deployerincloud-ccp-c0-m1-mgmt:~$ echo | openssl s_client -connect 192.168.245.5:5000 | openssl x509 -fingerprint -noout 
./helion/security/tls_changes.dita:      <codeblock>stack@deployerincloud-ccp-c0-m1-mgmt:~$ echo | openssl s_client -connect 192.168.245.5:3306 | openssl x509 -fingerprint -noout 
./helion/troubleshooting/blockstorage/troubleshooting_ceph.dita:TASK: [_CEP-CMN | configure | Copy "{{ deployer_ceph_dir }}/ceph.client.admin.keyring" to /etc/ceph directory] *** 
./helion/troubleshooting/blockstorage/troubleshooting_ceph.dita:TASK: [ceph-deployer | configure | Generate "/etc/ceph/{{ ceph_cluster }}.conf" file] *** 
./helion/troubleshooting/objectstorage/recovering_builder_file.dita:        <li>Log into the Deployer and run the <codeph>swift-deploy.yml</codeph>
./helion/upgrade/upgrade21to30.dita:          <codeblock>ssh stack@&lt;dnsaas-deployer-ip></codeblock></li>
./helion/upgrade/upgrade21to30.dita:        <li>Run the included initialization script to update the deployer:
./helion/userguide/lbaas.dita:          deployer or a shell with access to the API nodes.</p>
