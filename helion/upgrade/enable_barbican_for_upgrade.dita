<?xml version="1.0" encoding="UTF-8"?>
<!--Edit status: not edited-->
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="barbicanUpgrade">
  <title><ph conkeyref="HOS-conrefs/product-title"/>Enabling Barbican Support When Upgrading</title>
  <body>
    <!--not tested-->
    <p conkeyref="HOS-conrefs/applies-to"/>

    <section><title>Enabling Barbican in previous versions of HPE Helion OpenStack</title> Barbican
      is a new service added in <keyword keyref="kw-hos"/> and is not available in 2.x
      distributions. (Details of the Barbican Key Management Service are discussed in <xref
        href="../security/barbican.dita#barbican"/>.) Because the service is new, if you upgrade to
        <keyword keyref="kw-hos"/> with your existing input model configuration files, you will have
      to include Barbican sections in the relevant input model files <i>after performing the
        upgrade</i>.</section>

    <section id="config">There are three service components (barbican-api, barbican-client,
      barbican-worker) that need to be included in the service-components list. These
      service-components are provided in the control plane configuration file,<codeph>
        control_plane.yml</codeph> at
        <codeph>~/helion/my_cloud/definition/data/control_plane.yml</codeph>. These three Barbican
      components need to be defined for clusters that have a server-role of 'CONTROLLER-ROLE' or
      'CORE-ROLE' in their control plane definitions. Here is an example of the three Barbican
      components added to <codeph>control_plane.yml</codeph> under CONTROLLER-ROLE: <codeblock>  control-planes:
        - name: control-plane-1
        ...
        ...
        clusters:
        - name: cluster1
        ...
        ...
        cluster-prefix: c1
        server-role: CONTROLLER-ROLE
        ...
        ...
        service-components:
        - lifecycle-manager
        - ntp-server
        ...
        ...
        - barbican-api
        - barbican-client
        - barbican-worker
        ...
        ...
        
        ...
        ...</codeblock>
      <p>After making the changes, you must run site.yml:</p>
    </section>
    <section>
      <codeblock>cd ~/scratch/ansible/next/hos/ansible 
ansible-playbook -i hosts/verb_hosts site.yml</codeblock></section>
    
    <section id="tls"><title>TLS configuration </title>In <keyword keyref="kw-hos-phrase"/> internal
      and admin VIP endpoints can be secured behind TLS. In addition, TLS support was extended to
      the Barbican API node/host (which makes it the only service with back-end TLS support in
      <keyword keyref="kw-hos-phrase"/>). Therefore, you will need to make changes in existing
      input model files to add TLS for Barbican traffic beyond the internal load balancer. You must
      enable TLS for Barbican on the load balancer back end and service endpoint by adding
      <codeph>barbican-api</codeph> to the <codeph>tls-component-endpoints:</codeph> section of
      <codeph>network_groups.yml</codeph>, as shown next.</section>
    <section> Go to <codeph>helion/my_cloud/definition/data/</codeph> and edit
        <codeph>network_groups.yml</codeph>><codeblock>cd ~/helion/my_cloud/definition/data/ </codeblock><codeblock>.......
        .....
        tags:
        - neutron.networks.vxlan
        - neutron.networks.vlan:
        provider-physical-network: physnet1
        - nova.compute.iscsi
        
        tls-component-endpoints:
        - barbican-api
        component-endpoints:
        - default
        
        routes:
        - default
        load-balancers:
        - provider: ip-cluster
        load-balancers:
        - provider: ip-cluster
        name: lb
        tls-components:
        - default
        components:
        - vertica
        - rabbitmq
        - mysql
        - nova-metadata
        roles:
        - internal
        - admin
        cert-file: helion-internal-cert </codeblock>
      Commit the changes <codeblock>cd ~/helion
git add -A
git commit -m "My config"</codeblock>
      Then run the following Ansible playbooks:
      <codeblock>$ ansible-playbook -i hosts/localhost config-processor-run.yml -e encrypt="" -e rekey=""
$ ansible-playbook -i hosts/localhost ready-deployment.yml
$ cd ~/scratch/ansible/next/hos/ansible
$ ansible-playbook -i hosts/verb_hosts barbican-reconfigure.yml
$ ansible-playbook -i hosts/verb_hosts hlm-reconfigure.yml</codeblock>
    </section>
    
    
    <section>
      <p>For further information on the Key Management service, see <xref
          href="../security/barbican.dita#barbican"/> and <xref
          href="../security/barbican_admin.dita#barbicanAdmin"/>.</p></section>
  </body>
</topic>
