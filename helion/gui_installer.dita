<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="install_gui">
  <title><ph conkeyref="HOS-conrefs/product-title"/>Installing via the GUI </title>
  <body>
    <!--Needs Edit-->
    <p conkeyref="HOS-conrefs/applies-to"/>
    <section><keyword keyref="kw-hos-phrase"/> comes with a UI installer for installing your cloud
      the first time. Rather than searching through and editing a number of YAML files to input your
      specific configuration data, finding the correct location, and maintaining the format of the
      files, the UI presents fields in which you may enter your information. In addition, this
      latest version allows you to populate server information via a .csv file import.</section>
    <section>Using the installer, the series Cobbler and Ansible scripts that initiate the
      installation of <keyword keyref="kw-hos"/> are run for you behind the scenes. </section>
    <section>While the UI app does more than simply populate the configuration files that the
      configuration processor uses as input to its processes, it does populate them. Therefore you
      can inspect the files whenever you like, or before reconfiguring your cloud. </section>
    <section>Note, however, that if you decide to look at or try to modify configuration files
      during the process, none of your values are actually written to the configuration files until
      you click the Deploy button at the end of the process. However, while using the installer, the
      values are saved across page navigation. But you shouldn't try to change anything in the files
      themselves mid process; Instead, make the changes using the GUI.</section>
    <section>These YAML configuration files are stored in a local git repository as well, as
      explained in <xref href="installation/using_git.dita">Using git for Configuration
        Management</xref>. <p>When installing via the GUI, you begin with a model (or a cloud
        configuration template) and edit the contents to reflect your environment.</p> However, the
      full range of customizations is not possible via the GUI as some configuration items are not
      exposed. Below is the list of what can and cannot be changed: </section>
    <section><b>Changes to the following items may be made:</b><ul id="ul_hsd_bym_tt">
        <li>servers (including Linux for HPE Helion installation configuration) </li>
        <li>networks </li>
        <li>disk models </li>
        <li>interface models </li>
        <li>NIC mappings </li>
        <li>NTP servers </li>
        <li>Name servers</li>
        <li>tags in network groups</li>
      </ul>
      <b>Changes to the following items cannot be made: </b><ul id="ul_b5d_bym_tt">
        <li>server groups</li>
        <li>server roles</li>
        <li>network groups</li>
        <li>firewall rules</li>
        <li>cloudConfig.yml (i.e. DNS, SMTP, firewall settings)</li>
        <li>control planes</li>
      </ul>
    </section>
    <section><title>Before you begin</title> Before you run the GUI installer to install your cloud,
      there are a number of things you need to do: <ol>
        <li>Prepare your servers</li>
        <li>Gather your information <ul>
            <li>Server names </li>
            <li>IP addresses </li>
            <li>Server Roles </li>
            <li>PXE MAC addresses </li>
            <li>PXE IP addresses </li>
            <li>PXE interfaces </li>
            <li>IPMI/iLO IP address, username, password </li>
          </ul></li>
        <li>Choose your <xref href="example_configurations.dita">cloud model/example</xref>
          template. No action other than an understanding of your needs is necessary at this point.
          You will indicate which model you wish to deploy in a GUI screen. Note, however, that the
          only VSA options for the <i>Entry-scale KVM with VSA</i> model is to have 0 or 3 VSA
          nodes. 
          <!-- 0 or 3 VSA nodes  and dedicated node for deployer are these still true ??????????????????/ -->
          
          Note also that you cannot run the deployer/lifecycle manager on a dedicated node
          using the GUI installer; it can only run in the control plane using the models exposed in
          the GUI.</li>
        <li>Before you use the GUI to install your cloud, you may install the operating system,
          Linux for HPE Helion, on your nodes (servers) if you prefer. Otherwise, the installer will
          install it for you. <p>If you are installing the operating system on all your nodes
            yourself, note that you must do so using the Linux for HPE Helion image   <!--  still true ??????????????????/ --> that is included
            in the <keyword keyref="kw-hos-phrase"/> package. You may find the instructions on the
            following pages helpful even when using your own tools to install the operating
            systems:</p>
          <ul>
            <li><xref href="installation/install_entryscale_kvm.dita#install_kvm">Operating system
                install help for KVM-based clouds</xref></li>
            <li><xref href="installation/install_entryscale_esx.dita#install_esx">Operating system
                install help for ESX-based clouds</xref></li>
          </ul>
          <note>When following the guidance for operating system installation on those pages, stop
            before the sections for <b>Running the configuration processor</b>.   <!--  still true ??????????????????/ -->The GUI installer
            will run those steps, and in the case where you have the GUI also install the operating
            systems, it will run all the previous steps (playbooks) as well.</note></li>
      </ol>
    </section>
    <section id="gui_use"><title>Get ready to run the GUI installer</title> There is one final step
      you must take before running the GUI installer, whether you are allowing it to install the
      operating systems on your nodes, or you are performing that task yourself using your own
      tools: <ol>
        <li>   <!-- still true ??????????????????/ -->For ESX installations, at this point you must modify the<b>
            ~/helion/hos/ansible/hlm-deploy.yml</b> to uncomment the line containing eon-deploy.yml.
          You must then comment out the line containing ceph-deploy.yml, vsa-deploy.yml, and
          cmc-deploy.yml. Then if you need to, follow the instructions in <xref
            href="installation/install_entryscale_esx.dita#install_esx/optional-eon">Step 4
            here</xref>. They are optional steps to enable centralized logging for the EON
          service.</li>
      </ol>
    </section>
    <section><title>Run the GUI to install your cloud</title>
      <p>After the OS, HPE Linux for HPE Helion, is installed on all your servers (nodes) if you
        decided to perform those installations yourself, the GUI will perform all deployment tasks
        for you. Optionally it will install the OS. You are now ready to launch it.</p>
      <p>The GUI is found on the lifecycle manager node at: <b>http://&lt;lifecycle
          manager_IP>:79/dayzero</b></p>
      <p>To create a secure tunnel/port forwarding into Apache from the lifecycle manager to be able
        to use the GUI in a browser, SSH tunnel into the lifecycle manager with the
        username/password set up when installing the lifecycle manager. The username and password
        should be what was set in "Set up the Deployer" in the installation instructions. For
        example:</p>
      <codeblock>ssh -v -N -L 8080:&lt;lifecycle manager_IP>:79 &lt;Username>@&lt;lifecycle manager_IP></codeblock>
      <p><!--  what local machine?????  deployer???? --> Then on your local machine, point your web browser to:
        <b>http://localhost:8080/dayzero</b></p> As you proceed through the GUI, you need only
      supply your server names and IP addresses. </section>
    <section>In the Assign network groups: External VM network fields, <b>do not</b> add entries for
      CIDR, Gateway, or IP Range, only VLAN ID. Neutron will assign these.<p>When the installation
        is complete, the Ansible log will be displayed on the final page.</p>
    </section>
    <section>
      <title>Use the installer securely</title>
      <p> The GUI installer is a web-based application that runs on the deployer/lifecycle manager
        node and is implemented in node.js. Currently this application runs behind Apache 2.0 where
        requests are proxied to the node.js Express Web Server. The node.js Express Server runs on
        port 3000 and Apache runs on port 79. </p>
      <p>You should access the installer through Apache and not directly from the Express server. An
        Example URL looks like this: http://&lt;lifecycle manager-host-ip>:79/dayzero When you
        finish installing, the Installer will be disabled via Ansible. It is also disabled once
        deployment is completed following the CLI instructions..</p>
    </section>
    <section>
      <p>The GUI is used only once: during the initial installation of your cloud.</p><p>For VSA
        deployments, once the GUI competes its installation, you must follow the steps outlined in
        the <xref href="installation/configure_vsa.dita">VSA Configuration</xref>page.</p>After
      deployment, you may also continue to <xref href="installation/installation_verification.dita"
        >Verifying Your Installation</xref> and <xref href="installation/postinstall_checklist.dita"
        >Post-Installation Checklist</xref>.<p>To understand a cloud configuration more thoroughly
        and to learn how to make any changes later, visit these documentation pages: <ul
          id="ul_akt_fv2_lt">
          <li><xref href="input_model.dita"><keyword keyref="kw-hos-phrase"/> Input
            Model</xref></li>
          <li><xref href="installation/using_git.dita">Using Git for Configuration
            Management</xref></li>
        </ul>
      </p>
      <note>
        <p>Because the GUI installer is disabled after deployment is complete, whether you installed
          your cloud via the GUI or via the command line, if you want to re-enable the GUI later but
          are not re-installing from scratch, run these commands:</p>
        <codeblock>sudo a2ensite dayzero-apache.conf
sudo systemctl start dayzero.service</codeblock>
      </note>
    </section>
    <section>
      <title>Final Steps</title>
      <ul>
        <li>The public Horizon Dashboard connection is over TLS, thus please use HTTPS:// to
          navigate to Horizon with the IP address the installer presents once install is
          complete.</li>
        <li><xref href="installation/configure_ceph.dita#config_ceph">Visit the Ceph configuration
            page for Ceph post-install steps</xref>.</li>
      </ul>
    </section>
  </body>
</topic>
