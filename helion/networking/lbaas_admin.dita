<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="HP2.0LBaaSAdmin">
  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring Load Balancing as a Service
    (LBaaS)</title>
  <body>
    <p conkeyref="HOS-conrefs/applies-to"/>
    <p><b><keyword keyref="kw-hos-phrase"/> LBaaS Configuration</b></p>
    <p> Load Balancing as a Service (LBaaS) is an advanced networking service that allows load
      balancing of multi-node environments. It provides the ability to spread requests across
      multiple servers thereby reducing the load on any single server.  This document describes the
      installation steps for LBaaS v1 (see prerequisites) and the configuration for LBaaS v1 and
      v2.</p>

    <p><keyword keyref="kw-hos-phrase"/> can support either LBaaS v1 or LBaaS v2 to allow for wide ranging
      customer requirements. If the decision is made to utilize LBaaS v1 it is highly unlikely that
      you will be able to perform an on-line upgrade of the service to v2 after the fact as the
      internal data structures are significantly different. Should you wish to attempt an upgrade
      support will be needed from Helion Professional Services and your chosen load balancer
      partner.</p>
    
    <p>Currently neither version offers a software load balancing solution that supports both a highly available 
      control plane and data plane. However, should an external hardware load balancer be selected the cloud operation 
      can achieve a highly available data plane.</p>
    
    <p><b>LBaaS v1</b></p>
    <p>Reasons to select this version.</p>
    <ol>
      <li>You must be able to configure LBaaS via Horizon.</li>
      <li>Your hardware load balancer vendor does not currently support LBaaS v2.</li>
    </ol>
    <p>Reasons not to select this version.</p>
    <ol>
      <li>No active development is being performed on this API in the OpenStack community. (Security fixes are still being worked upon).</li>
      <li>It does not allow for multiple ports on the same VIP (e.g. support both port 80 and 443 on a single VIP).</li>
      <li>It will never be able to support TLS termination/re-encryption at the load balancer.</li>
      <li>It will never be able to support L7 rules for load balancing.</li>
      <li>LBaaS v1 will likely become officially deprecated by the OpenStack community at the Tokyo
        (October 2015) summit.</li>
    </ol>
    <p><b>LBaaS v2</b></p>
    <p>Reasons to select this version.</p>
    <ol>
      <li>Your vendor already has a driver that supports LBaaS v2. Many hardware load balancer
        vendors already support LBaaS v2 and this list is growing all the time.</li>
      <li>You intend to script your load balancer creation and management so a UI is not important right now (Horizon support will be added in a future release).</li>
      <li>You intend in future releases to support TLS termination at the load balancer.</li>
      <li>You intend in future releases to use the Octavia software load balancer (adding HA and scalability).</li>
      <li>You don’t want to take your load balancers offline in order to perform subsequent LBaaS upgrades.</li>
      <li>You intend in future releases to need L7 load balancing.</li>
    </ol>
    <p>Reasons not to select this version.</p>
    <ol>
      <li>Your LBaaS vendor doesn’t have a v2 driver.</li>
      <li>You must be able to manage your load balancers from Horizon.</li>
      <li>You have legacy software which utilizes the LBaaS v1 API.</li>
    </ol>

    <p>LBaaS v1 requires configuration changes prior to installation and is not recommended. LBaaS
      v2 is installed by default with <keyword keyref="kw-hos"/> and requires minimal configuration to
      start the service.</p>



    <p>  
      <ul id="LBaaSlist">
        <li><xref href="lbaas_admin.dita#HP2.0LBaaSAdmin/Prerequisites">Prerequisites</xref></li>
        <li><xref href="lbaas_admin.dita#HP2.0LBaaSAdmin/Configuration">Configuration</xref></li>
      </ul>
    </p>
    
    <note>Neither LBaaS API currently supports load balancer failover. If a load balancer is deleted
      it will need to be manually recreated. Future releases of the v2 API are targeted include
      automatic failover of a deployed load balancer. This functionality is targeted for the
      OpenStack Mitaka release via the Octavia software driver. More information about this driver
      can be found at: <xref href="https://www.youtube.com/watch?v=8n7FGhtOiXk" format="html"
        scope="external"/></note>
    
    <section id="Prerequisites">
      <title>Prerequisites</title>
      <p><b><keyword keyref="kw-hos"/> LBaaS v1</b></p>
       <p>Installing LBaaS v1</p>
        <note type="important">It is not recommended that LBaaS v1 is used in a production
        environment. It is recommended you use LBaaS v2. If you do deploy LBaaS v1, the upgrade to
        LBaaS v2 is non-trivial and may require the use of professional services.</note>
        <note>If you need to run LBaaS v1 instead of the default LBaaS v2, you should make
          appropriate installation preparations during <keyword keyref="kw-hos"/> installation since LBaaS v2
        is the default. If you have selected to install and use LBaaS v1 you will replace the
        control_plane.yml directories and neutron.conf.j2 file to use version 1. </note>
      
      <p>Before you modify the control_plane.yml and neutron.conf.j2 files, it is recommended that
        you back up the original versions of those files. Once you have backed them up, modify the
        control_plane.yml and neutron.conf.j2 files - please refer to the chapter <xref
          href="../installation/using_git.dita#using_git"><keyword keyref="kw-hos-phrase"/>: 
          Using Git for Configuration Management</xref> for details on how to edit
        those configuration files.</p>
      
      <ol>
        <li>Edit ~/helion/my_cloud/definition/data/control_plane.yml - depending on your installation the control_plane.yml file might be in a different location.</li>
        <li>In the section specifying the compute nodes (resources/compute) replace neutron-lbaasv2-agent with neutron-lbaas-agent - there will only be one occurrence in that file.</li>
        <li>Save the modified file.</li>
        <li>Edit the ~/helion/my_cloud/config/neutron/neutron.conf.j2  - depending on your installation the neutron.conf.j2 file might be in a different location.</li>
        <li>Comment out the LBaaS v2 service_plugin and service_provider lines.   Both lines must be
          commented out in order to avoid deployment failures.</li>
        <li>Uncomment the LBaaS v1 lines.</li>
        <li>Save the file.</li>
        <li>Follow the steps in <xref href="../installation/using_git.dita#using_git"><keyword keyref="kw-hos-phrase"/>: Using Git for Configuration Management</xref> to commit and apply the changes.</li>
      </ol>
      
 
 
      <p><b><keyword keyref="kw-hos"/> LBaaS v2</b></p>
      <ol>
        <li><keyword keyref="kw-hos"/> must be installed for LBaaS v2.</li>
      </ol> 
    </section>
    
    <section id="Configuration">
      <title>Configuration</title>
      <p><keyword keyref="kw-hos-phrase"/> LBaaS Configuration</p>
    
      
      
      <sectiondiv id="CreateExternalNetwork">
        <p><b>Create External Network and Register Image</b></p>
        <p>You will need to create an external network and register an image to test LBaaS functionality.  If you have already created
          an external network and registered and image, this step can be skipped.</p>

         <ol>
          <li>You can run commands from the lifecycle manager or from a shell with access to the API nodes.
            Run the playbook which registers a Cirros image and creates a public network under
            Neutron. <note>Running this step configures 172.16.0.0/16 by default as the external
              network with name <i>ext-net</i> and registers a Cirros image.  You will need to
              change the IP for your external network.</note>
            <codeblock>ansible-playbook -i hosts/verb_hosts hlm-cloud-configure.yml</codeblock></li>
        </ol>
      </sectiondiv>
      
 
    </section>
    
  </body>
</topic>
