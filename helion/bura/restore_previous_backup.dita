<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="previous_backups">
  <title><ph conkeyref="HOS-conrefs/product-title"/>Restore from Previous Backup</title>
  <body>
    <p conkeyref="HOS-conrefs/applies-to-21"/>
   <section>
     
     <p>By default, freezer-agent restores only the latest (most recent) backup. Here is a manual procedure to restore from a list of backups
     </p>
     
     <ol> <li> Obtain list of backups from the Elastic Search database. This command has to be executed on
          the controller nodes on which the Elastic Search database is deployed <codeblock>python -c 'exec """\nimport json\nimport urllib\nimport datetime\n\n\nr = 
              urllib.urlopen("http://127.0.0.1:9200/freezer/backups/_search?size=0")\nnumber = json.loads(r.read())\nnumber = 
              number["hits"]["total"]\n\nr = urllib.urlopen("http://127.0.0.1:9200/freezer/backups/_search?size={}".format(number))\njson_resp = 
              json.loads(r.read())\nbackups = json_resp["hits"]["hits"]\n\nprint "| hostname | backup name | backup date |"\nfor backup in backups:\n    
              backup = backup["_source"]["backup_metadata"]\n    ts = backup["time_stamp"]\n    ts = datetime.datetime.fromtimestamp(ts)\n    
              ts = ts.strftime("%Y-%m-%dT%H:%M:%S")\n    print("| {} | {} | {} |".format(backup["hostname"], backup["backup_name"], str(ts)))\n"""'</codeblock>
          <note>You can copy the command from
          here:</note><codeblock>python -c 'exec """\nimport json\nimport urllib\nimport datetime\n\n\nr = urllib.urlopen("http://127.0.0.1:9200/freezer/backups/_search?size=0")\nnumber = json.loads(r.read())\nnumber = number["hits"]["total"]\n\nr = urllib.urlopen("http://127.0.0.1:9200/freezer/backups/_search?size={}".format(number))\njson_resp = json.loads(r.read())\nbackups = json_resp["hits"]["hits"]\n\nprint "| hostname | backup name | backup date |"\nfor backup in backups:\n    backup = backup["_source"]["backup_metadata"]\n    ts = backup["time_stamp"]\n    ts = datetime.datetime.fromtimestamp(ts)\n    ts = ts.strftime("%Y-%m-%dT%H:%M:%S")\n    print("| {} | {} | {} |".format(backup["hostname"], backup["backup_name"], str(ts)))\n"""'</codeblock>
          Here is an example output
          <codeblock>| hostname | backup name | backup date |
| cloud-cp1-c1-m1-mgmt | freezer_mysql_backup | 2015-12-09T10:28:43 |
| cloud-cp1-c1-m3-mgmt | freezer_mysql_backup | 2015-12-10T10:28:46 |
| cloud-cp1-cluster0-m1-mgmt | test_swift_BURA | 2015-12-10T16:59:50 |</codeblock>
        </li><li> Use the "restore-from-date" option to restore backup based on data/timestamp. The
          restore-from-data is an option available in freezer-agent. When using the parameter
          --restore-from-date freezer searches the available backups and select the nearest older
          backup relative to the provided date. To use this option, the following parameters of the
          backup need to be provided - storage target details (example, target-name,
          container-name), backup_name, hostname. Usually these parameters can be obtained from the
          backup_job. <p> For example, take the following simple backup job:</p>
          <codeblock>[default]
 action = backup
 backup_name = mystuffbackup
 storage = local
 container = /home/me/mystorage
 max_level = 7
     path_to_backup = ~/mydata</codeblock>
          Suppose you schedule that every day and you end up with backups that happened at:
          <codeblock>1) 2015-12-10T02:00:00
     2) 2015-12-11T02:00:00
     3) 2015-12-12T02:00:00
     3) 2015-12-13T02:00:00</codeblock>
          Now, if you restore using the following parameters:
          <codeblock>[default]
     action = restore
     backup_name = mystuffbackup
     storage = local
     container = /home/me/mystorage
     restore_abs_path = ~/mydata_restore_dir
     restore_from_date = 2015-12-11T23:00:00</codeblock>
          The nearest oldest backup will be number 2, taken at 2015-12-11T02:00:00 </li>
     </ol>
     
   </section>
  </body>
</topic>
