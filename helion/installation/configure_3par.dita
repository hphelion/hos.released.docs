<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="config_3par">
  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring for 3PAR Block Storage
    Backend</title>
  <body>
    <p conkeyref="HOS-conrefs/applies-to"/>
    <p>This page describes how to configure your 3PAR backend for the Helion Entry-scale Cloud with
      KVM model.</p>
    <ul>
      <li><xref href="configure_3par.dita#config_3par/prereq">Prerequisites</xref></li>
      <li><xref href="configure_3par.dita#config_3par/config_fc">Configure 3PAR FC as the
          Backend</xref></li>
      <li><xref href="configure_3par.dita#config_3par/config_iscsi">Configure 3PAR iSCSI as the
          Backend</xref></li>
      <li><xref href="configure_3par.dita#config_3par/create_voltype">Create a Volume Type for your
          Volumes</xref></li>
      <li><xref href="configure_3par.dita#config_3par/associate_voltype">Associate the Volume Type
          to the Backend</xref></li>
      <li><xref href="configure_3par.dita#config_3par/extra_specs">Extra Specification
          Options</xref></li>
      <li><xref href="configure_3par.dita#config_3par/post_install">Verifying your 3PAR
          backend</xref></li>
    </ul>
    <section>
      <title id="prereq">Prerequisites</title>
      <p>
        <ul>
          <li>Your HPE Helion Entry-scale KVM Cloud should be up and running. Installation steps can
            be found <xref href="install_entryscale_kvm.dita">here</xref>.</li>
          <li>Your 3PAR Storage Array should be available in the cloud management network or routed
            to the cloud management network and the 3PAR FC and iSCSI ports configured.</li>
          <li>The 3PAR management IP and iSCSI port IPs must have connectivity from the controller
            and compute nodes.</li>
          <li>Please refer to the system requirements for 3PAR in the OpenStack configuration guide,
            which can be found here: <xref
              href="http://docs.openstack.org/kilo/config-reference/content/hp-3par-sys-reqs.html"
              scope="external" format="html">3PAR System Requirements</xref>. <note>If you want to
              enable multipath for Cinder volumes carved from 3PAR FC/iSCSI storage system, please
              go through the <codeph>/home/stack/helion/hos/ansible/roles/multipath/README.md
              </codeph> file on the lifecycle manager. The README.md file contains detailed
              procedures for configuring multipath for 3PAR FC/iSCSI Cinder volumes.</note></li>
        </ul>
      </p>
    </section>
    <section id="config_fc">
      <title>Configure 3PAR FC as a Cinder Backend</title>
      <p>You must modify the <codeph>cinder.conf.j2</codeph> to configure the FC details.</p>
      <p>Perform the following steps to configure 3PAR FC as Cinder backend:<ol id="ol_dj2_qcz_ht">
          <li>Log in to lifecycle manager.</li>
          <li>Make the following changes to the
              <codeph>~/helion/my_cloud/config/cinder/cinder.conf.j2</codeph> file: <ol>
              <li>Add your 3PAR backend to the <codeph>enabled_backends</codeph> section:
                <codeblock># Configure the enabled backends
enabled_backends=3par_FC</codeblock></li>
              <li>Uncomment the <codeph>StoreServ (3par) iscsi cluster</codeph> section and fill the
                values per your cluster information. Here is an example:
                <codeblock>[3par_FC]
san_ip: &#60;3par-san-ipaddr>
san_login: &#60;3par-san-username>
san_password: &#60;3par-san-password>
hp3par_username: &#60;3par-username>
hp3par_password: &#60;hp3par_password>
hp3par_api_url: https://&#60;3par-san-ipaddr>:8080/api/v1
hp3par_cpg: &#60;3par-cpg-name-1>[,&#60;3par-cpg-name-2>, ...]
volume_backend_name: &#60;3par-backend-name>
volume_driver: cinder.volume.drivers.san.hp.hp_3par_fc.HP3PARFCDriver</codeblock></li>
            </ol></li>
          <li>Commit your configuration your local git repositiory:
            <codeblock>cd ~/helion/hos/ansible
git add -A
git commit -m "&lt;commit message>"</codeblock></li>
          <li>Run the configuration processor: <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml</codeblock>
            <p>When you run the configuration processor you will be prompted for two passwords.
              Enter the first password to make the configuration processor encrypt its sensitive
              data, which is comprised of the random inter-service passwords that it generates and
              the Ansible group_vars and host_vars that it produces for subsequent deploy runs. You
              will need this key for subsequent Ansible deploy runs and subsequent Configuration
              Processor runs. If you wish to change an encryption password that you have already
              used when running the configuration processor then enter the new password at the
              second prompt, otherwise just press carriage return.</p><p>For CI purposes you can
              specify the required passwords on the ansible command line. For example, the command
              below will disable encryption by the configuration processor
              <codeblock>ansible-playbook -i hosts/localhost config-processor-run.yml -e encrypt="" -e rekey=""</codeblock>
              If you receive an error during either of these steps then there is an issue with one
              or more of your configuration files. We recommend that you verify that all of the
              information in each of your configuration files is correct for your environment and
              then commit those changes to git using the instructions above.</p></li>
          <li>Run the following command to create a deployment directory.
            <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
          <li>Run the following command to complete the configuration:
            <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts cinder-reconfigure.yml</codeblock></li>
        </ol></p>
    </section>
    <section id="config_iscsi">
      <title>Configure 3PAR iSCSI as Cinder backend</title>
      <p>You must modify the <codeph>cinder.conf.j2</codeph> to configure the iSCSI details.</p>
      <p>Perform the following steps to configure 3PAR iSCSI as Cinder backend:</p>
      <ol id="iSCSI">
        <li>Log in to lifecycle manager.</li>
        <li>Make the following changes to the
            <codeph>~/helion/my_cloud/config/cinder/cinder.conf.j2</codeph> file: <ol>
            <li>Add your 3PAR backend to the <codeph>enabled_backends</codeph> section:
              <codeblock># Configure the enabled backends
enabled_backends=3par_iSCSI</codeblock></li>
            <li>Uncomment the <codeph>StoreServ (3par) iscsi cluster</codeph> section and fill the
              values per your cluster information. Here is an example:
              <codeblock id="3par-iscsi">[3par_iSCSI]
san_ip: &#60;3par-san-ipaddr>
san_login: &#60;3par-san-username>
san_password: &#60;3par-san-password>
hp3par_username: &#60;3par-username>
hp3par_password: &#60;hp3par_password>
hp3par_api_url: https://&#60;3par-san-ipaddr>:8080/api/v1
hp3par_cpg: &#60;3par-cpg-name-1>[,&#60;3par-cpg-name-2>, ...]
volume_backend_name: &#60;3par-backend-name>
volume_driver: cinder.volume.drivers.san.hp.hp_3par_iscsi.HP3PARISCSIDriver
hp3par_iscsi_ips: &#60;3par-ip-address-1>[,&#60;3par-ip-address-2>,&#60;3par-ip-address-3>, ...]
hp3par_iscsi_chap_enabled=true</codeblock></li>
          </ol></li>
        <li>Commit your configuration your local git repositiory:
          <codeblock>cd ~/helion/hos/ansible
git add -A
git commit -m "&lt;commit message>"</codeblock></li>
        <li>Run the configuration processor: <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml</codeblock>
          <p>When you run the configuration processor you will be prompted for two passwords. Enter
            the first password to make the configuration processor encrypt its sensitive data, which
            is comprised of the random inter-service passwords that it generates and the Ansible
            group_vars and host_vars that it produces for subsequent deploy runs. You will need this
            key for subsequent Ansible deploy runs and subsequent configuration processor runs. If
            you wish to change an encryption password that you have already used when running the
            configuration processor then enter the new password at the second prompt, otherwise just
            press carriage return.</p><p>For CI purposes you can specify the required passwords on
            the ansible command line. For example, the command below will disable encryption by the
            configuration processor
            <codeblock>ansible-playbook -i hosts/localhost config-processor-run.yml -e encrypt="" -e rekey=""</codeblock>
            If you receive an error during either of these steps then there is an issue with one or
            more of your configuration files. We recommend that you verify that all of the
            information in each of your configuration files is correct for your environment and then
            commit those changes to git using the instructions above.</p></li>
        <li>Run the following command to create a deployment directory.
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
        <li>Run the following command to complete the configuration:
          <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts cinder-reconfigure.yml</codeblock></li>
      </ol>
    </section>

    <section conref="configure_vsa.dita#config_vsa/create_volumetype" id="create_voltype"/>
    <section conref="configure_vsa.dita#config_vsa/associate_volumetype" id="associate_voltype"/>

    <section id="extra_specs"><title>Extra Specification Options</title>
      <p>3PAR supports volumes creation with additional attributes. These attributes can be
        specified using the extra specs options for your volume type. The administrator is expected
        to define appropriate extra spec for 3PAR volume type as per the guidelines provided at
          <xref
          href="http://docs.openstack.org/kilo/config-reference/content/hp-3par-supported-ops.html"
          format="html" scope="external">here</xref>.</p>
      <p>The following Cinder Volume Type extra-specs options enable control over the 3PAR storage
        provisioning type:</p>
      <p><table frame="all" rowsep="1" colsep="1" id="table_ntq_swv_yt">
          <tgroup cols="3">
            <colspec colname="c1" colnum="1"/>
            <colspec colname="c2" colnum="2"/>
            <colspec colname="c3" colnum="3"/>
            <thead>
              <row>
                <entry>Key</entry>
                <entry>Value</entry>
                <entry>Description</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>volume_backend_name</entry>
                <entry><i>volume backend name</i></entry>
                <entry>The name of the backend to which you want to associate the volume type, which
                  you also specified earlier in the <codeph>cinder.conf.j2</codeph> file.</entry>
              </row>
              <row>
                <entry>hp3par:provisioning (optional)</entry>
                <entry>thin, full, or dedup</entry>
                <entry/>
              </row>
            </tbody>
          </tgroup>
        </table></p>
      <p>See <xref href="http://www8.hp.com/h20195/v2/GetPDF.aspx%2F4AA5-1930ENW.pdf"
          scope="external" format="html">OpenStack HPE 3PAR StoreServ Block Storage Driver
          Configuration Best Practices</xref> for more details.</p>
      <p>Here is what a completed list of extra specs may look like:</p>
      <p><image href="../../media/blockstorage/extraspecs_3par.png"/></p>
    </section>

    <section id="post_install"><title>Verifying your Ceph backend</title>
      <p>After you have configured 3PAR FC and iSCSI as your Block Storage backend, you can verify
        this all completed successfully by creating a new volume.</p>
      <p>See <xref href="installation_verification.dita">Verifying your Installation</xref> for more
        details.</p>
    </section>
  </body>
</topic>
