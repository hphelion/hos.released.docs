<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="configureMTU">
  <title><ph conkeyref="HOS-conrefs/product-title"/>Changing Service Passwords</title>
  <body>    <p conkeyref="HOS-conrefs/applies-to"/>
<section>
  
  



We allow passwords to be changed in <keyword keyref="kw-hos-phrase"/>. The process involved is generally:
<ul>
<li>Indicate to the configuration processor which password(s) you want to change, and optionally include the value of that password
</li><li>Run the configuration processor to generate the new passwords (you do not need to run "git add" before this)
</li><li>Run ready-deployment
</li><li>Check your password name(s) against the tables included below to see which high-level credentials-change playbook(s) you need to run
</li><li>Run the appropriate high-level credentials-change playbook(s)</li>
</ul>
</section>
    <section><title>How to indicate to the configuration processor which password(s) you want to
        change*</title> We have modified the configuration processor to produce metadata about each
      of the passwords (and other variables) that it generates in the file
      ~/helion/my_cloud/info/private_data_metadata.yml. A snippet of this file follows:
      <codeblock>monitor_user_password:
    metadata:
    - clusters:
        - cluster1
        component: vertica
        cp: ccp
    version: '2.0'
mysql_admin_password:
    metadata:
    - clusters:
        - cluster1
        component: nova-api
        consumes: mysql
        cp: ccp
    - clusters:
        - cluster1
        component: neutron-server
        consumes: mysql
        cp: ccp
    - clusters:
        - cluster1
        component: keystone-api
        consumes: mysql
        cp: ccp
    - clusters:
        - cluster1
        component: cinder-api
        consumes: mysql
        cp: ccp
    - clusters:
        - cluster1
        component: glance-api
        consumes: mysql
        cp: ccp
    - clusters:
        - cluster1
        component: horizon
        consumes: mysql
        cp: ccp
    - clusters:
        - cluster1
        component: heat-engine
        consumes: mysql
        cp: ccp
    - clusters:
        - cluster1
        component: ceilometer-common
        consumes: mysql
        cp: ccp
    - clusters:
        - cluster1
        component: sherpa-api
        consumes: mysql
        cp: ccp
    version: '2.0'
mysql_barbican_password:
    metadata:
    - clusters:
        - cluster1
        component: barbican-api
        consumes: mysql
        cp: ccp
    version: '2.0'</codeblock>
      For each variable, there is a metadata entry for each pair of services that use the variable
      including a list of the clusters on which the service component that consumes the variable
      ("component:" above) runs. Note above that the variable mysql_admin_password is used by a
      number of service components, and the service that is consumed in each case is mysql. # To
      change a password, first of all make sure that you have a copy of private_data_metadata. If
      not, to generate one just run the configuration processor:
      <codeblock>stack@padawan-ccp-c0-m1-mgmt:~$ cd helion/hos/ansible
stack@padawan-ccp-c0-m1-mgmt:~/helion/hos/ansible$ ansible-playbook -i hosts/localhost config-processor-run.yml</codeblock>Take
      a copy of the above metadata file (~/helion/my_cloud/info/private_data_metadata.yml), and edit
      it down to contain only those passwords which are of interest to you. <note>It is recommended
        that you change passwords in batches of each category listed below. Then place the edited
        copy in helion/change_credentials.</note> For example the snippet below:
      <codeblock>keystone_backup_password:
    metadata:
    - clusters:
        - cluster0
        - cluster1
        - compute
        component: freezer-agent
        consumes: keystone-api
        cp: ccp
    version: '2.0'
keystone_barbican_password:
    metadata:
    - clusters:
        - cluster1
        component: barbican-api
        consumes: keystone-api
        cp: ccp
    version: '2.0'
keystone_ceilometer_password:
    metadata:
    - clusters:
        - cluster1
        component: ceilometer-common
        consumes: keystone-api
        cp: ccp
        version: '2.0'</codeblock>will
      result in configuration processor generating new random values for keystone_backup_password,
      keystone_barbican_password, and keystone_ceilometer_password. Optionally you can specify a
      value for the password by including a "value:" key and value at the same level as metadata:
      <codeblock>keystone_backup_password:
    value: 'new_password'
    metadata:
    - clusters:
        - cluster0
        - cluster1
        - compute
        component: freezer-agent
        consumes: keystone-api
        cp: ccp
        version: '2.0'</codeblock>You
      can have multiple files in helion/change_credentials. The configuration processor will only
      read files that end in .yml or .yaml. *NOTE* If you've specified a password value in your
      credential change file, you may want to encrypt it using ansible-vault. If you decide to
      encrypt with ansible-vault, make sure that you use the encryption key you've already used when
      running the configuration processor. To encrypt a file using ansible-vault:
      <codeblock>stack@padawan-ccp-c0-m1-mgmt:~/helion/change_credentials$ ansible-vault encrypt &lt;credential change file ending in .yml or .yaml></codeblock>And
      provide the encryption key when prompted. *NOTE* If you've specified the wrong ansible-vault
      password, the configuration-processor will error out with a message like the following:
      <codeblock>################################################## Reading Persistent State ##################################################

################################################################################
# The configuration processor failed.
# PersistentStateCreds: User-supplied creds file test1.yml was not parsed properly
################################################################################</codeblock>
      # The directory helion/change_credentials is not managed by git, so to rerun the configuration
      processor to generate new passwords and prepare for the next deployment just enter the
      following commands:
      <codeblock>stack@padawan-ccp-c0-m1-mgmt:~$ cd helion/hos/ansible
stack@padawan-ccp-c0-m1-mgmt:~/helion/hos/ansible$ ansible-playbook -i hosts/localhost config-processor-run.yml
stack@padawan-ccp-c0-m1-mgmt:~/helion/hos/ansible$ ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock>
      *NOTE* The files that you placed in helion/change_credentials should be removed once you have
      run the configuration processor. The old password values and new password values will be
      stored in the configuration processor's persistent state. Note that if you see output like the
      following from the configuration processor run:
      <codeblock>################################################################################
# The configuration processor completed with warnings.
# PersistentStateCreds: User-supplied password name 'blah' is not valid
################################################################################</codeblock>
      this tells you that the password name you have supplied 'blah' does not exist. A failure to
      correctly parse the credentials change file will result in the configuration processor
      erroring out with a message like the following:
      <codeblock>################################################## Reading Persistent State ##################################################

################################################################################
# The configuration processor failed.
# PersistentStateCreds: User-supplied creds file test1.yml was not parsed properly
################################################################################</codeblock>
      Once you've run the configuration processor to change passwords, an information file
      ~/helion/my_cloud/info/password_change.yml similar to the private_data_metadata.yml is written
      to tell you which passwords have been changed including metadata but not including the values. </section>
    <section><title>Password change playbooks and tables</title> We have grouped the passwords that
      can be changed into six categories. The tables below list the password names that belong in
      each category. The categories: <dl>
        <dlentry>
          <dt/>
          <dd/>
        </dlentry>
        <dlentry>
          <dt>Keystone</dt>
          <dd> Playbook: hlm-keystone-credentials-change.yml</dd>
        </dlentry>
        <dlentry>
          <dt>RabbitMQ</dt>
          <dd> Playbook: hlm-rabbitmq-credentials-change.yml</dd>
        </dlentry>
        <dlentry>
          <dt>MySQL</dt>
          <dd>Playbook: hlm-reconfigure.yml</dd>
        </dlentry>
        <dlentry>
          <dt>Cluster:</dt>
          <dd>Playbook: hlm-cluster-credentials-change.yml</dd>
        </dlentry>
        <dlentry>
          <dt>Monasca:</dt>
          <dd> Playbook: monasca-reconfigure-credentials-change.yml</dd>
        </dlentry>
        <dlentry>
          <dt>Other:</dt>
          <dd> hlm-other-credentials-change.yml</dd>
        </dlentry>
      </dl> We recommend that you change passwords in batches - in other words run through a
      complete password-change for each batch of password - preferably in the above order. Once you
      have used the process indicated above to change password(s), check the names against the
      tables below to see which password change playbook(s) you should run. <p><b>Changing Keystone
          credentials</b></p> The following table lists Keystone credentials you can change.<table
        frame="all" rowsep="1" colsep="1" id="table_f3h_jmw_kv">
        <tgroup cols="1">
          <colspec colname="c1" colnum="1" colwidth="1.0*"/>
          <thead>
            <row>
              <entry>Table 1: Keystone credentials change table</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                <codeblock outputclass="whitebackground"><b>Password name</b>
keystone_admin_pwd
keystone_admin_token
keystone_backup_password
keystone_ceilometer_password
keystone_cinder_password
keystone_cinderinternal_password
keystone_demo_pwd
keystone_designate_password
keystone_eon_password
keystone_freezer_password
keystone_glance_password
keystone_glance_swift_password
keystone_heat_password
keystone_magnum_password
keystone_monasca_agent_password
keystone_monasca_password
keystone_neutron_password
keystone_nova_password
keystone_octavia_password
keystone_swift_dispersion_password
keystone_swift_monitor_password
keystone_swift_password
logging_keystone_password
nova_monasca_password</codeblock>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </table> The palybook to run to change Keystone credentials is
      hlm-keystone-credentials-change.yml. Execute the following commands to make the changes: <codeblock>stack@localhost:~/helion/my_cloud/info$ cd ~/scratch/ansible/next/hos/ansible/
stack@localhost:~/scratch/ansible/next/hos/ansible$ ansible-playbook -i hosts/verb_hosts hlm-keystone-credentials-change.yml</codeblock>
      <p><b>Changing RabbitMQ credentials</b></p> The following table lists the RabbitMQ credentials
      you can change.<table frame="all" rowsep="1" colsep="1" id="table_nzr_z4w_kv">
        <tgroup cols="1">
          <colspec colname="c1" colnum="1" colwidth="1.0*"/>
          <thead>
            <row>
              <entry>Table 2: RabbitMQ credentials change</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                <codeblock outputclass="whitebackground"><b>Password name</b>
ops_mon_rmq_password
rmq_barbican_password
rmq_ceilometer_password
rmq_designate_password
rmq_keystone_password
rmq_magnum_password
rmq_monasca_monitor_password
rmq_nova_password
rmq_octavia_password
rmq_service_password</codeblock>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </table> The playbook to run to change RabbitMQ credentials is
      hlm-rabbitmq-credentials-change.yml. Execute the following commands to make the changes: <codeblock>stack@localhost:~/helion/my_cloud/info$ cd ~/scratch/ansible/next/hos/ansible/
stack@localhost:~/scratch/ansible/next/hos/ansible$ ansible-playbook -i hosts/verb_hosts hlm-rabbitmq-credentials-change.yml</codeblock>
      <p><b>Changing MySQL credentials</b></p> The following table lists the MySQL credentials you
      can change.<table frame="all" rowsep="1" colsep="1" id="table_kds_fpw_kv">
        <tgroup cols="1">
          <colspec colname="c1" colnum="1" colwidth="1.0*"/>
          <thead>
            <row>
              <entry>Table 3: MySQL credentials chang</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                <codeblock outputclass="whitebackground"><b>Password name</b>
mysql_admin_password
mysql_barbican_password
mysql_clustercheck_pwd
mysql_designate_password
mysql_magnum_password
mysql_monasca_api_password
mysql_monasca_notifier_password
mysql_monasca_thresh_password
mysql_octavia_password
mysql_powerdns_password
mysql_root_pwd
mysql_service_pwd
mysql_sst_password
ops_mon_mdb_password</codeblock>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </table> The playbook to run to change MySQL credentials is hlm-reconfigure.yml. To make the
      changes, execute the following commands:<codeblock>stack@localhost:~/helion/my_cloud/info$ cd ~/scratch/ansible/next/hos/ansible/
stack@localhost:~/scratch/ansible/next/hos/ansible$ ansible-playbook -i hosts/verb_hosts hlm-reconfigure.yml</codeblock>
      <p><b>Changing cluster credentials</b></p> The following table lists the cluster credentials
      you can change.<table frame="all" rowsep="1" colsep="1" id="table_wx3_kpw_kv">
        <tgroup cols="1">
          <colspec colname="c1" colnum="1" colwidth="1.0*"/>
          <thead>
            <row>
              <entry>Table 4: cluster credentials change</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                <codeblock outputclass="whitebackground"><b>Password name</b>
haproxy_stats_password
keepalive_vrrp_password</codeblock>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </table> The playbook to run to change cluster credentials is
      hlm-cluster-credentials-change.yml. To make changes, execute the following commands:<codeblock>stack@localhost:~/helion/my_cloud/info$ cd ~/scratch/ansible/next/hos/ansible/
stack@localhost:~/scratch/ansible/next/hos/ansible$ ansible-playbook -i hosts/verb_hosts hlm-cluster-credentials-change.yml</codeblock>
      <p><b>Changing Monasca credentials</b></p> The following table lists the Monasca credentials
      you can change.<table frame="all" rowsep="1" colsep="1" id="table_k2k_4pw_kv">
        <tgroup cols="1">
          <colspec colname="c1" colnum="1" colwidth="1.0*"/>
          <thead>
            <row>
              <entry>Table 5: Monasca credentials change</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                <codeblock outputclass="whitebackground"><b>Password name</b>
influxdb_monasca_api_password
influxdb_monasca_persister_password
monitor_user_password
vertica_monasca_api_password
vertica_monasca_persister_password</codeblock>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </table> The playbook to run to change Monasca credentials is
      monasca-reconfigure-credentials-change.yml. To make the changes, execute the following commands:<codeblock>stack@localhost:~/helion/my_cloud/info$ cd ~/scratch/ansible/next/hos/ansible/
stack@localhost:~/scratch/ansible/next/hos/ansible$ ansible-playbook -i hosts/verb_hosts monasca-reconfigure-credentials-change.yml</codeblock>
      <p><b>Changing other credentials</b></p> The following table lists the Monasca credentials you
      can change. <table frame="all" rowsep="1" colsep="1" id="table_y52_rpw_kv">
        <tgroup cols="1">
          <colspec colname="c1" colnum="1" colwidth="1.0*"/>
          <thead>
            <row>
              <entry>Table 6: Other credentials change</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                <codeblock outputclass="whitebackground"><b>Password name</b>
barbican_admin_password
barbican_service_password
logging_kibana_password</codeblock>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </table> The playbook to run to change these credentials is hlm-other-credentials-change.yml.
      To make the changes, execute the following commands:
      <codeblock>stack@localhost:~/helion/my_cloud/info$ cd ~/scratch/ansible/next/hos/ansible/
stack@localhost:~/scratch/ansible/next/hos/ansible$ ansible-playbook -i hosts/verb_hosts hlm-other-credentials-change.yml</codeblock>
    </section>
      <section><title>Immutable variables</title> The values of certain variables are immutable,
      which means that once they've been generated by the configuration processor they cannot be
      changed. These variables are: <ul>
        <li>swift_hash_path_suffix </li>
        <li>swift_hash_path_prefix </li>
        <li>mysql_cluster_name </li>
        <li>heartbeat_key </li>
        <li>erlang_cookie</li>
      </ul>The configuration processor will not regenerate the values of the above passwords, nor
      will it allow you to specify a value for them. In addition to the above variables, the
      following are immutable in <keyword keyref="kw-hos-phrase"/>: <ul>
        <li>All ssh keys generated by the configuration processor </li>
        <li>All UUIDs generated by the configuration processor</li>
      </ul> 
        <!--The following variables may be allowed in later versions of HPE Helion OpenStack: <ul>
        <li> metadata_proxy_shared_secret </li>
        <li> horizon_secret_key </li>
        <li>ceilometer_metering_secret</li>
      </ul>-->
    </section>
  </body>
</topic>
