<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="barbicanAdmin">
  <title><ph conkeyref="HOS-conrefs/product-title"/>Key Management Service Administration</title>
  <body><!--not tested-->    <p conkeyref="HOS-conrefs/applies-to"/>
    
    
    <section id="post_installation"><title>Post-installation verification and administration</title>
      <p>In a production environment, you can verify your installation of the Barbican key
        management service by running the <codeph>barbican-status.yml</codeph> Ansible playbook on
        the lifecycle manager node.
        <codeblock>ansible-playbook -i hosts/verb_hosts barbican-status.yml</codeblock>In any
        non-production environment, along with the playbook, you may also verify the service by
        storing and retrieving the secret from Barbican, if you like. </p>
      
      <p id="config"><b>Updating the Barbican Key Management Service</b></p><p>Some Barbican features and service configurations can be changed. This is done using the HLM
        reconfigure Ansible playbook. For example, the log level can be changed from INFO to DEBUG
        and vice-versa. If needed, this change can be restricted to a set of nodes via the
        playbook's host limit option. </p>
    </section>
    <section id="updating">
      <p>The following Barbican configuration settings can be changed:</p>
      <ul><li>Anything in the main Barbican configuration file:
          <codeph>/etc/barbican/barbican.conf</codeph></li>
        <li>Anythng in the main Barbican worker configuration file:
            <codeph>/etc/barbican/barbican-worker.conf</codeph></li></ul>
      <p>You can also update the following configuration options and enable the following features.
        For example, you can:</p>
      <ul><li>Change the verbosity of logs written to Barbican log files (<codeph>var/log/barbican/</codeph>). </li><li>Enable and disable auditing of the Barbican Key Management Service</li><li>Edit <codeph>barbican_secret_store</codeph> plug-ins. The two options are:<ul>
            <li><codeph>store_crypto</codeph> used to store the secrets in the database </li>
            <li><codeph>kmip_plugin</codeph> used to store the secrets into KMIP enabled external
              devices like Atalla ESKM</li>
          </ul></li></ul></section>
    <section>
   <title>  Enable or disable auditing of Barbican events</title>
      
      Auditing of Barbican key manager events can be disabled or enabled by following steps on deployer node.
      <ol><li> Edit the file <codeph>~/helion/my_cloud/definition/cloudConfig.yml </codeph><p>All audit
            related configuration is defined under audit-settings section. Note that valid yaml
            syntax is required when specifying values.</p>
          <p>Service name defined under <codeph>enabled-services</codeph> or
              <codeph>disabled-services</codeph> override the default setting (i.e. <codeph>default:
              enabled</codeph> or <codeph>default: disabled</codeph>)</p>
        </li><li>To enable auditing, make sure that the barbican service name is listed in the
            <codeph>enabled-services</codeph> list of <codeph>audit-settings</codeph> section or is
          not listed in the <codeph>disabled-services</codeph>  list when default: is set to
            <codeph>enabled</codeph>.</li><li>To disable auditing for the Barbican service specifically, make sure that barbican service name
          is in <codeph>disabled-services</codeph> list of the<codeph> audit-settings</codeph>
          section or is not present in the <codeph>enabled-services</codeph> list when default: is
          set to <codeph>disabled</codeph>. You should not specify the service name in both lists.
          If it is  specified in both, the enabled-services list takes precedence. </li><li>Commit the change in git repository.
          <codeblock>cd ~/helion/hos/ansible/
ansible-playbook -i hosts/localhost config-processor-run.yml
ansible-playbook -i hosts/localhost ready-deployment.yml
cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts barbican-reconfigure.yml</codeblock>
        </li></ol>
    </section>
      <section>
      <p id="configFile"><b>Updating the Barbican API service configuration file</b></p>
      <ul><li>The Barbican API service configuration file (<codeph>/etc/barbican/barbican.conf</codeph>),
          located on each control plane server (controller node) is generated from the following
          template file located on the lifecycle manager node:
            <codeph>/home/stack/helion/my_cloud/config/barbican/barbican.conf.j2</codeph> Modify
          this template file as appropriate. This is a Jinja2 template, which expects certain
          template variables to be set. Do not change values inside double curly braces: {{ }}. </li><li>Once the template is modified, copy the files to <codeph>~/helion/my_cloud/definition/</codeph>,
          and commit the change to the local git repository:
          <codeblock>cp -r ~/hp-ci/padawan/* ~/helion/my_cloud/definition/
cd ~/helion
git add -A
git commit -m "My config"</codeblock></li>
          
         <li>Then rerun the configuration processor and ready-deployent playbooks:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml
ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock>
        </li>
        <li>Finally, run the barbican-reconfigure playbook in deployment area:
          <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts barbican-reconfigure.yml</codeblock>
        </li></ul>
    </section>
    
  </body>
</topic>
