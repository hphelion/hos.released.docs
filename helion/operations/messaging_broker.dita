<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd" >
<topic xml:lang="en-us" id="messagingservice">
  <title><ph conkeyref="HOS-conrefs/product-title"/>Messaging Broker Operations Guide</title>
  <body>
    <p conkeyref="HOS-conrefs/applies-to"/>
      <ul>
        <li><xref type="section" href="#messagingservice/operations">Operations Guide</xref></li>
        <li><xref type="section" href="#messagingservice/consoleaccess">Management Console Access</xref></li>
        <li><xref type="section" href="#messagingservice/sizing">RabbitMQ Sizing and Usage</xref></li>
        <li><xref type="section" href="#messagingservice/stackato">Access from Helion Stackato</xref></li>
        <li><xref type="section" href="#messagingservice/portmapping">Node/Network/Component/Service/Port mapping</xref></li>
        <li><xref type="section" href="#messagingservice/restrictions">Port Restrictions</xref></li>
        <li><xref type="section" href="#messagingservice/info">For More Information</xref></li>
      </ul>
    
    <section id="operations">
      <title>Messaging Broker Operations Guide</title>
      <p>Users can create RabbitMQ clusters using the Horizon UI or the Cue CLI. 
        Options available include the size of the cluster, node flavor, and the 
        network in which the cluster should reside. The smallest recommended cluster 
        is three nodes.  </p>
      <p>As of this version, RabbitMQ cluster nodes are not guaranteed to be created 
        on separate physical nodes or in separate Availability Zones.</p>
      <p><b>Limitation:</b></p>
      <p>In version 1.0 of Cue we do not support growing the cluster. A user can add a 
        node to a RabbitMQ cluster as detailed here, after booting a VM with the RabbitMQ 
        image.</p>
      <p>As additional resources are required, instances should be added in pairs to keep 
        an odd number in the cluster.  Depending on usage by applications, the cluster may 
        come under memory pressure. Because RabbitMQ clusters are configured for full 
        replication, adding another node of the same size won’t help. A migration process 
        where larger memory instances are added and the original smaller memory instances 
        are removed is recommended.</p>
    </section>
    
    <section id="consoleaccess">
      <title>Management Console Access</title>
      <p>The Management Console for a created RabbitMQ cluster can be exposed and accessed 
        by end user following one of 3 options.</p>
      <ul>
        <li>You can access the rabbitmq management console directly if you are reaching it 
            from the same network. i.e., creating a VM on the same network and opening a browser 
            to URL “http://&lt;ip of rabbitmqnode&gt;:15672”</li>
        <li>Install Haproxy by following instructions at  Setting up Load Balancer for a 
            Messaging Service Cluster. This will also provide you a load balanced rabbitmq 
            endpoint.</li>
        <li>Create a SSH tunnel via another VM.
          <ul>
            <li>Create VM on the same network as rabbitmq cluster.</li>
            <li>Ssh –L 15672:&lt;ip of rabbitmqnode&gt;:15672 user@&lt;ip of created VM&gt;</li>
            <li>Open browser and point to http://localhost:15672</li>
          </ul>
        </li>
      </ul>
    </section>
    
    <section id="sizing">
      <title>RabbitMQ Sizing and Usage</title>
      <p>RabbitMQ clusters configured for full replication will replicate all data to all 
        nodes. Adding more nodes to the cluster increases availability at the expense of 
        communication. For that reason it is recommended to have a 3 node minimum cluster 
        size where each node is sized to accommodate usage requirements.</p>
      <p>Once the cluster is active, users can use the RabbitMQ management console deployed 
        on the cluster itself. Access to RabbitMQ is done with the username and password supplied 
        during cluster creation. If additional users need to be added to a cluster, they can be 
        added from within the RabbitMQ management console. Developers can use native RabbitMQ 
        functionality to create queues and write cloud native applications. To access the 
        console from outside the external-network a floating IP can be assigned to the cluster.</p>
    </section>
    
    <section id="stackato">
      <title>Access from Helion Stackato</title>
      <p>HDP users that have created a Helion Stackato cluster in their tenant space can access 
        Messaging Service managed RabbitMQ instances via User Provided Service Instances.</p>
    </section>
    
    <section id="portmapping">
      <title>Node/Network/Component/Service/Port mapping</title>
        <p>This section shows the services and ports used by the control plane and message broker (RabbitMQ) nodes.</p>
      
        <p>
        <table frame="all" rowsep="1" colsep="1" id="table_qym_35c_w5">
          <title/>
          <tgroup cols="5">
            <colspec colname="c1" colnum="1" colwidth="1.0*"/>
            <colspec colname="c2" colnum="2" colwidth="1.0*"/>
            <colspec colname="c3" colnum="3" colwidth="1.0*"/>
            <colspec colname="c4" colnum="4" colwidth="1.0*"/>
            <colspec colname="c5" colnum="5" colwidth="1.0*"/>
            <thead>
              <row>
                <entry>Node</entry>
                <entry>Network</entry>
                <entry>Component</entry>
                <entry>Service/Protocol</entry>
                <entry>Ports</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry morerows="13">Messaging Control Plane</entry>
                <entry morerows="5">SVC</entry>
                <entry morerows="2">Cue API</entry>
                <entry>Cue</entry>
                <entry>8795 (TCP)</entry>
              </row>
              <row>
                <entry>VRRP/VIP</entry>
                <entry>protocols 51/112</entry>
              </row>
              <row>
                <entry>SSH</entry>
                <entry>22 (TCP)</entry>
              </row>
              <row>
                <entry>Cue Worker</entry>
                <entry>SSH</entry>
                <entry>22 (TCP)</entry>
              </row>
              <row>
                <entry>MySQL</entry>
                <entry>SSH</entry>
                <entry>22 (TCP)</entry>
              </row>
              <row>
                <entry>Zookeeper</entry>
                <entry>SSH</entry>
                <entry>22 (TCP)</entry>
              </row>
              <row>
                <entry morerows="6">Cue Management</entry>
                <entry morerows="4">MySQL</entry>
                <entry>MySQL</entry>
                <entry>3306 (TCP)</entry>
              </row>
              <row>
                <entry>MySQL</entry>
                <entry>4444 (TCP)</entry>
              </row>
              <row>
                <entry>MySQL</entry>
                <entry>4568 (TCP)</entry>
              </row>
              <row>
                <entry>MySQL</entry>
                <entry>9500 (TCP)</entry>
              </row>
              <row>
                <entry>VRRP/VIP</entry>
                <entry>protocols 51/112</entry>
              </row>
              <row>
                <entry morerows="1">Zookeeper</entry>
                <entry>Zookeeper</entry>
                <entry>2181 (TCP)</entry>
              </row>
              <row>
                <entry>Zookeeper</entry>
                <entry>3888 (TCP)</entry>
              </row>
              <row>
                <entry>Cue Broker</entry>
                <entry>N/A</entry>
                <entry>N/A</entry>
                <entry>N/A</entry>
              </row>
              <row>
                <entry morerows="4">Messaging Broker (RabbitMQ)</entry>
                <entry morerows="1">Cue Management</entry>
                <entry morerows="4">Broker nodes</entry>
                <entry>SSH</entry>
                <entry>22 (TCP)</entry>
              </row>
              <row>
                <entry>RabbitMQ</entry>
                <entry>5672 (TCP)</entry>
              </row>
              <row>
                <entry morerows="2">Cue Broker</entry>
                <entry>RabbitMQ</entry>
                <entry>15672 (TCP)</entry>
              </row>
              <row>
                <entry>RabbitMQ</entry>
                <entry>6100 (TCP)</entry>
              </row>
              <row>
                <entry>RabbitMQ</entry>
                <entry>4369 (TCP)</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </p>
      <note>Restrictions on rules not shown in this table (see Port Restrictions table below)</note>
      
    </section>
    
    <section id="restrictions">
      <title>Port Restrictions</title>
      <p>
        <table frame="all" rowsep="1" colsep="1" id="table_l1g_zwc_w5">
          <title/>
          <tgroup cols="3">
            <colspec colname="c1" colnum="1" colwidth="1.0*"/>
            <colspec colname="c2" colnum="2" colwidth="1.0*"/>
            <colspec colname="c3" colnum="3" colwidth="1.0*"/>
            <thead>
              <row>
                <entry>Node</entry>
                <entry>Port</entry>
                <entry>Restriction(s)</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry morerows="6">Messaging Control Plane</entry>
                <entry>22</entry>
                <entry>Access from SVC Network</entry>
              </row>
              <row>
                <entry>3306</entry>
                <entry>Access from Nodes sharing the same security groups (Cue API MSGaaS Management
                  Network Security group and Cue Worker MSGaaS Management Network Security
                  group)</entry>
              </row>
              <row>
                <entry>4444</entry>
                <entry>Access from Nodes sharing the same security group (MySQL MSGaaS Management
                  Network Security group)</entry>
              </row>
              <row>
                <entry>4568</entry>
                <entry>Access from Nodes sharing the same security group (MySQL MSGaaS Management
                  Network Security group)</entry>
              </row>
              <row>
                <entry>9500</entry>
                <entry>Access from Nodes sharing the same security group (MySQL MSGaaS Management
                  Network Security group)</entry>
              </row>
              <row>
                <entry>2181</entry>
                <entry>Access from Nodes sharing the same security groups (Cue API MSGaaS Management
                  Network Security group and Cue Worker MSGaaS Management Network Security
                  group)</entry>
              </row>
              <row>
                <entry>3888</entry>
                <entry>Access from Nodes sharing the same security group (Zookeeper MSGaaS
                  Management Network Security group)</entry>
              </row>
              <row>
                <entry morerows="2">Messaging Broker (RabbitMQ)</entry>
                <entry>22</entry>
                <entry>Access from Cue Management Network</entry>
              </row>
              <row>
                <entry>6100</entry>
                <entry>Access from Cue Management Network</entry>
              </row>
              <row>
                <entry>4369</entry>
                <entry>Access from Cue Management Network</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </p>
  
    
      </section>
    
    
    
    
    <section id="info"><title>For More Information</title>
      <p>For more details on OpenStack Monasca, see <xref href="http://monasca.io/" format="html"
          scope="external">Monasca.io</xref></p>
    </section>
  </body>
</topic>
