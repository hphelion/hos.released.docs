<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="recoverrabbit">
  <title><ph conkeyref="HOS-conrefs/product-title-both"/>Recover RabbitMQ After Outage or Node
    Restart</title>
  <body>
    <p conkeyref="HOS-conrefs/applies-to-all"/>
    <section>
      <p>If you have experienced an outage or otherwise have had to restart nodes and need to
        restart RabbitMQ, follow the steps below.</p>
      <note type="danger">Only run the following stop command for RabbitMQ if it has already stopped
        because you lost power or faced another disaster affecting the nodes on which it
        runs.</note>
      <note>After upgrading to HPE Helion OpenStack 2.1.2, this manual procedure is not necessary or recommended. An Ansible playbook controls the starting and stopping of RabbitMQ</note>
      <p>For each node running RabbitMQ perform the following:</p>
      <codeblock>$ sudo â€“s
$ systemctl stop rabbitmq-server.service
$ rm -rf /var/lib/rabbitmq/mnesia/
$ sudo systemctl start rabbitmq-server.service</codeblock>
      <p>On the lifecycle manager node</p>
      <codeblock>$ cd ~/helion/my_cloud/definition/data
$ vi control_plane.yml</codeblock>
      <p>Look for the name: entry under control-planes.</p>
      <codeblock>$ cd ~/scratch/ansible/next/hos/ansible/group_vars</codeblock>
      <p>You will need to extract the list of RabbitMQ users and passwords from the file whose name
        ends in the control-plane name that you have already recovered. If you have supplied an
        encryption key to the configuration processor you will first need to decrypt the file, for
        example:</p>
      <codeblock>$ ansible-vault decrypt &lt;cloud-name>-&lt;control plane name> (e.g. entry-scale-kvm-vsa-control-plane-1)
Vault password: 
Decryption successful</codeblock>
      <p>The "Vault password" is the encryption key that you supplied to the configuration
        processor. Now extract the set of RabbitMQ users and passwords:</p>
      <codeblock>$ awk '/rmq_.*/ &amp;&amp; $1 ~ /user|password/ &amp;&amp; $1 !~ /service/ {print $1$2}' &lt;cloud-name>-&lt;control plane name> | sort | uniq</codeblock>
      <p>This will supply a set of RabbitMQ users and password. Below is example output:</p>
      <codeblock>ops_mon_rmq_password:Meq9JRKgy5Sj
ops_mon_rmq_user:ops-mon
rmq_nova_password:jt8ndjxm
rmq_nova_user:rmq_nova_user</codeblock>
      <p>If you've had to decrypt the file, remember to re-encrypt it:</p>
      <codeblock>$ ansible-vault encrypt entry-scale-kvm-vsa-control-plane-1
Vault password: 
Confirm Vault password: 
Encryption successful</codeblock>
      <p>Now on the lifecycle manager node run the following from the
        ~/scratch/ansible/next/hos/ansible directory: </p>
      <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts rabbitmq-deploy.yml</codeblock>
      <p>Once this is complete, log into one of the controller nodes and become sudo user: </p>
      <codeblock>sudo -s</codeblock>
      <p>Next, recreate the users and there password gathered above: </p>
      <codeblock>rabbitmqctl add_user &lt;username> &lt;password></codeblock>
      <p>For example, for ops-mod this would be as follows:</p>
      <codeblock>ops_mon_rmq_password:Meq9JRKgy5Sj
ops_mon_rmq_user:ops-mon</codeblock>
      <codeblock>rabbitmqctl add_user ops-mon Meq9JRKgy5Sj</codeblock>
      <p>Now add back the Ceilometer user: </p>
      <codeblock>$ rabbitmqctl add_user ceilometer &lt;password></codeblock>
      <p>Next you must set the user permission for each of the users as follows: </p>
      <codeblock>$ rabbitmqctl set_permissions -p / ops-mon  ".*" ".*" ".*"
$ rabbitmqctl set_permissions -p / rmq_nova_user  ".*" ".*" ".*"
$ rabbitmqctl set_permissions -p / ceilometer  "ceilometer|metering.*|ceilometer-pipe-*" "ceilometer|metering.*|ceilometer-pipe-*" "ceilometer|metering.*|ceilometer-pipe-*"</codeblock>
      <p>For ops-mon you must set this as an administrator user: </p>
      <codeblock>$ rabbitmqctl set_user_tags ops-mon administrator</codeblock>
      <p>To check that you are up and running, run: </p>
      <codeblock>tail -F /var/log/rabbitmq/rabbitmq@&lt;hostname>.log</codeblock>
      <p>If you see an error in your log as follows, repeat the step for the user listed in the
        error: </p>
      <codeblock>=ERROR REPORT==== 8-Dec-2015::11:12:41 ===
closing AMQP connection &lt;0.14219.3> (192.168.245.3:47921 -> 192.168.245.4:5672):
{handshake_error,starting,0,
                 {amqp_error,access_refused,
                             "AMQPLAIN login refused: user 'ops-mon' - invalid credentials",
                             'connection.start_ok'}}</codeblock>
    </section>
  </body>
</topic>
