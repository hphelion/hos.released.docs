<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="replace_swift_node">
  <title><ph conkeyref="HOS-conrefs/product-title"/>Replacing a Swift Node</title>
  <abstract><shortdesc outputclass="hdphidden">Steps for replacing Swift nodes in your
      cloud.</shortdesc>This process is used when you want to replace a failed Swift node in your
    cloud.</abstract>
  <body>
    <!--not tested-->
    <p conkeyref="HOS-conrefs/applies-to"/>
    <p><note type="warning">If it applies to the server, do not skip step 10. If you do, the system will
        overwrite the existing rings with new rings. This will not cause data loss, but,
        potentially, will move most objects in your system to new locations and may make data
        unavailable until the replication process has completed.</note></p>

    <section><title>Replacing a Swift Node</title>
      <ol>
        <li>Log in to the lifecycle manager.</li>
        <li>Update your cloud model with a new MAC address,
          iLO/IPMI user, password, and IP address (iLO) if these have changed. Do not change the
          server's IP address (i.e., <codeph>ip-addr</codeph>).
          
          <p>Path to file:</p>
          <codeblock>~/helion/my_cloud/definition/data/servers.yml</codeblock>
            
            <p>Example showing the fields to edit:</p>
            <codeblock> - id: swobj5
   role: SWOBJ-ROLE
   server-group: rack2
   mac-addr: 8c:dc:d4:b5:cb:bd 
   nic-mapping: HP-DL360-6PORT
   ip-addr: 10.243.131.10
   ilo-ip: 10.1.12.88
   ilo-user: iLOuser
   ilo-password: iLOpass
   ...</codeblock></li>
        <li>Commit the changes to
          Git:<codeblock>cd ~helion
git commit -a -m "replacing a Swift node"</codeblock></li>
        <li>Run the configuration
          processor:<codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml</codeblock></li>
        <li>Update your deployment
          directory:<codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
        <li>Remove the replaced Swift node from Cobbler:<codeblock>sudo cobbler system remove --name &lt;node name></codeblock>
          <p>You can get a list of your systems in Cobbler by using this command:
            <codeblock>sudo cobbler system list</codeblock></p></li>
        <li>Re-run the <codeph>cobbler-deploy.yml</codeph> playbook to re-add the replaced
          node:<codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/localhost cobbler-deploy.yml</codeblock></li>
        <li>Reimage the node using this
          playbook:<codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost bm-reimage.yml -e nodelist=&lt;node name></codeblock></li>
        <li>Configure the operating
            system:<codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts osconfig-run.yml -limit &lt;hostname></codeblock><p>In
            the following example, for <b>swobj5</b>, the hostname is
            <b>helion-cp1-swobj0005</b>:<codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts osconfig-run.yml -limit helion-cp1-swobj0005*</codeblock></p></li>
        <li>If this is the Swift ring builder server, restore the Swift ring builder files to the
            <codeph>/etc/swiftlm/builder_dir</codeph> directory. (For more information and
          instructions, see <xref href="troubleshooting/objectstorage/identify_ring_builder.dita"
            >Identifying the Swift Ring Builder Server</xref> and <xref
            href="troubleshooting/objectstorage/recovering_builder_file.dita">Recovering Swift
            Builder Files</xref>.)</li>
        <li>Configure services on the node using the <codeph>hlm-deploy.yml</codeph> playbook. If
          you have used an encryption password when running the configuration processor, include the
            <codeph>--ask-vault-pass</codeph> argument. <p>If the node being replaced is the Swift
            ring builder server then you only need to use the <codeph>--limit</codeph> switch for
            that node, otherwise you need to specify the hostname of your Swift ring builder server
            and the hostname of the node being replaced.</p>
          <codeblock>ansible-playbook -i hosts/verb_hosts hlm-deploy.yml --ask-vault-pass --limit &lt;hostname></codeblock>
          <p>See <xref href="troubleshooting/objectstorage/identify_ring_builder.dita">Identifying
              the Swift Ring Building Server</xref> for more details.</p></li>
      </ol>
    </section>
  </body>
</topic>
