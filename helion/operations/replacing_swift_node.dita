<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="replace_swift_node">
  <title><ph conkeyref="HOS-conrefs/product-title"/>Replacing a Swift Node</title>
  <abstract><shortdesc outputclass="hdphidden">Steps for replacing Swift nodes in your
      cloud.</shortdesc>To replace a Swift node in a system, do the following:</abstract>
  <body><!--not tested-->
    <p conkeyref="HOS-conrefs/applies-to"/>
    <p><note type="warning">If it applies to the server, do not skip step 11. If you do, the system
        will overwrite the existing rings with new rings. This will not cause data loss, but,
        potentially, will move most objects in your system to new locations and may make data
        unavailable until the replication process has completed.</note></p>
    <section id="expandCollapse">
      <sectiondiv outputclass="expandall">Expand All Sections</sectiondiv>
      <sectiondiv outputclass="collapseall">Collapse All Sections</sectiondiv>
    </section>
    <section><title outputclass="headerH">Replacing a Swift Node</title>
      <sectiondiv outputclass="insideSection">
        <ol>
          <li>Log in to the lifecycle manager.</li>
          <li>Update the cloud model (<codeph>data/servers.yml</codeph> file) with a new MAC
            address, iLO/IPMI user, password, and IP address (iLO) if these have changed. Do not
            change the server's IP address (i.e.,<codeph> ip-add IP</codeph>). For
            example:<codeblock> - id: swobj5
   role: SWOBJ-ROLE
   server-group: rack2
   mac-addr: 8c:dc:d4:b5:cb:bd 
   nic-mapping: HP-DL360-6PORT
   ip-addr: 10.243.131.10
   ilo-ip: 10.1.12.88
   ilo-user: iLOuser
   ilo-password: iLOpass
  ...</codeblock></li>
          <li>Commit the changes to
            Git:<codeblock>cd ~helion
git commit -a -m "&lt;commit message>"</codeblock></li>
          <li>Run the configuration
            processor:<codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml</codeblock></li>
          <li>Create a deployment
            directory:<codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
          <li>Remove the replaced Swift node from Cobbler:<codeblock>sudo cobbler system remove --name &lt;server-id></codeblock>
            <p>You can get a list of your systems in Cobbler by using this command:
              <codeblock>sudo cobbler system list</codeblock></p></li>
          <li>Re-run the <codeph>cobbler-deploy.yml</codeph> playbook to re-add the replaced
            node:<codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/localhost cobbler-deploy.yml</codeblock></li>
          <li>Reimage the node using this
              playbook:<codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost bm-reimage.yml -e nodelist=&lt;server id></codeblock><p>In
              the example below, the server <b>swobj5</b> is
              reimaged.<codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost bm-reimage.yml -e nodelist=swobj5</codeblock></p></li>
          <li>Review the <codeph>~/helion/my_cloud/definition/cloudConfig.yml</codeph> and<codeph>
              ~/helion/my_cloud/definition/data/control_plane.yml</codeph> files to get the host
            prefix (for example, helion) and the control plane name (for example, cp1). This gives
            you the hostname of the node. Configure the operating
              system:<codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts osconfig-run.yml -limit &lt;hostname></codeblock><p>In
              the following example, for <b>swobj5</b>, the hostname is
              <b>helion-cp1-swobj0005</b>:<codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts osconfig-run.yml -limit helion-cp1-swobj0005*</codeblock></p></li>
          <li>If this is the first server running the <codeph>swift-proxy</codeph> service, restore
            the Swift Ring Builder files to the <codeph>/etc/swiftlm/builder_dir</codeph> directory.
            (For more information and instructions, see <xref
              href="troubleshooting/objectstorage/identify_ring_builder.dita">Identifying the
              Swift Ring Builder Server</xref> and <xref
              href="troubleshooting/objectstorage/recovering_builder_file.dita">Recovering Swift
              Builder Files</xref>.)</li>
          <li>Configure services on the node using the <codeph>site.yml</codeph> playbook. If you
            have used an encryption password when running the configuration processor, include the
              <codeph>--ask-vault-pass</codeph> argument. <p>If the node being replaced is the Swift
              ring builder server then you only need to use the <codeph>--limit</codeph> switch for
              that node, otherwise you need to specify the hostname of your Swift ring builder
              server and the hostname of the node being replaced.</p>
            <codeblock>ansible-playbook -i hosts/verb_hosts hlm-deploy.yml --ask-vault-pass --limit &lt;hostname>,&lt;swift-ring-builder-hostname></codeblock>
            <p>See <xref href="troubleshooting/objectstorage/identify_ring_builder.dita"
                >Identifying the Swift Ring Building Server</xref> for more details.</p></li>
        </ol>
      </sectiondiv>
    </section>
  </body>
</topic>
