<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="remove_swift_node">
  <title><ph conkeyref="HOS-conrefs/product-title"/>Removing a Swift Node</title>
  <body>
    <p conkeyref="HOS-conrefs/applies-to"/>
    <section id="about">
      <p>You can use this process when you want to remove one or more Swift nodes permanently.</p>
      <p>This process has three phases:</p>
      <ul>
        <li>Removing the drives from the Swift rings - "draining" the Swift data off the node and
          store it on the remaining nodes. You do this by using the pass-through attribute.</li>
        <li>Disabling Swift on the node - prevent the node from participating in the Swift
          system.</li>
        <li>Removing the node from the input model - the node is removed completely from the
          system.</li>
      </ul>
    </section>

    <section id="passthrough">
      <title>Setting the Pass-through Attributes</title>
      <p>This process will remove the Swift node's drives from the rings and move it to the
        remaining nodes in your cluster.</p>
      <ol>
        <li>Log in to the lifecycle manager.</li>
        <li>Ensure that the weight-step attribute is set. See <xref
            href="../objectstorage/setting_up_weight_attributes_ring_changes.dita"/> for more
          details.</li>
        <li>Edit the <codeph>~/helion/my_cloud/definition/data/servers.yml</codeph> file to add a
          server pass through to indicate that the Swift node is to be removed. <p>Here is an
            example:</p>
          <codeblock>
- id: swobj1
  role: SWOBJ-ROLE
  server-group: RACK1
  mac-addr: "5c:b9:01:89:c6:e0"
  ip-addr: 10.241.17.14
  ilo-ip: 10.1.9.149
  ilo-user: admin
  ilo-password: password
  nic-mapping: HP-DL360-4PORT
  <b>pass-through:
     servers:
        - id: ccn-0001
          data:
             drain: yes</b></codeblock>
          <p>By setting this pass-through attribute, you indicate that the system should reduce the
            weight of the server's drives. The weight reduction is determined by the weight-step
            attribute as described in the previous step. This process is known as "draining", where
            you remove the Swift data from the node in preparation for removing the node.</p></li>
        <li>Commit your configuration to the <xref href="../installation/using_git.dita">local git
            repo</xref>, as follows:
          <codeblock>cd ~/helion/hos/ansible
git add -A
git commit -m "My config or other commit message"</codeblock></li>
        <li>Run the configuration processor:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml</codeblock></li>
        <li>Use the playbook to create a deployment directory:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
        <li>Run the Swift deploy playbook to perform the first ring rebuild. This will remove some
          of the partitions from all drives on the node you are removing:
          <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts swift-deploy.yml</codeblock></li>
        <li>Wait until the replication has completed. For further details, see <xref
            href="../objectstorage/safe_rebalance_deploy_ring.dita"/></li>
        <li>Verify whether all of the partitions have been removed from all drives on the Swift node
          you are removing. You can do this by SSH'ing into the first account server node and using
          these commands: <codeblock>cd /etc/swiftlm/builder_dir/region-&lt;region_name>
sudo swift-ring-builder &lt;ring_name>.builder</codeblock>
          <p>For example, if the node you are removing was part of the object-o ring the command
            would be:</p>
          <codeblock>sudo swift-ring-builder object-0.builder</codeblock>
          <p>Check the output. You will need to know the IP address of the server being drained. In
            the example below, the weight of drives on 192.168.245.3 has reached zero for the
            object-0 ring:</p>
          <codeblock>$ cd /etc/swiftlm/builder_dir/region-region1/
$ sudo swift-ring-builder object-0.builder 
account.builder, build version 6
4096 partitions, 3.000000 replicas, 1 regions, 1 zones, 6 devices, 0.00 balance, 0.00 dispersion
The minimum number of hours before a partition can be reassigned is 16
The overload factor is 0.00% (0.000000)
Devices:    id  region  zone      ip address  port  replication ip  replication port      name weight partitions balance meta
             0       1     1   192.168.245.3  6002   192.168.245.3              6002     disk0  18.63          0   -0.00 padawan-ccp-c1-m1:disk0:/dev/sdc
             1       1     1   192.168.245.3  6002   192.168.245.3              6002     disk1  18.63          0   -0.00 padawan-ccp-c1-m1:disk1:/dev/sdd
             2       1     1   192.168.245.4  6002   192.168.245.4              6002     disk0  18.63          0   -0.00 padawan-ccp-c1-m2:disk0:/dev/sdc
             3       1     1   192.168.245.4  6002   192.168.245.4              6002     disk1  18.63       2048   -0.00 padawan-ccp-c1-m2:disk1:/dev/sdd
             4       1     1   192.168.245.5  6002   192.168.245.5              6002     disk0  18.63       2048   -0.00 padawan-ccp-c1-m3:disk0:/dev/sdc
             5       1     1   192.168.245.5  6002   192.168.245.5              6002     disk1  18.63       2048   -0.00 padawan-ccp-c1-m3:disk1:/dev/sdd</codeblock></li>
        <li>If the weight is zero all rings, you can move to the next step, otherwise continue the
          ring rebalance cycle as described in <xref
            href="../objectstorage/safe_rebalance_deploy_ring.dita"/> until the weight has reached
          zero.</li>
        <li>Once the weight of the drives has reached zero, you can remove the Swift nodes' drives
          all rings. Edit the pass-through data you created in step #3 and set the
            <codeph>remove</codeph> attribute as shown in this example:
          <codeblock>
- id: swobj1
  role: SWOBJ-ROLE
  server-group: RACK1
  mac-addr: "5c:b9:01:89:c6:e0"
  ip-addr: 10.241.17.14
  ilo-ip: 10.1.9.149
  ilo-user: admin
  ilo-password: password
  nic-mapping: HP-DL360-4PORT
  pass-through:
      servers:
         - id: ccn-0001
           data:
             <b>remove: yes</b></codeblock></li>
        <li>Commit your configuration to the <xref href="../installation/using_git.dita">local git
            repo</xref>, as follows:
          <codeblock>cd ~/helion/hos/ansible
git add -A
git commit -m "My config or other commit message"</codeblock></li>
        <li>Run the configuration processor:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml</codeblock></li>
        <li>Use the playbook to create a deployment directory:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
        <li>Run the Swift deploy playbook to perform the first ring rebuild. This will remove some
          of the partitions from all drives on the node you are removing:
          <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts swift-deploy.yml</codeblock></li>
        <li>You will need to rebalance the Swift rings through several cycles as described in <xref
            href="../objectstorage/safe_rebalance_deploy_ring.dita"/></li>
        <li>Through the replication process the Swift data will be moved from the removed node to
          the remaining nodes. You can then proceed to the next phase.</li>
      </ol>
    </section>

    <section>
      <title><b>To Disable Swift on a Node</b></title>
      <p>The next phase in this process will disable the Swift service on the node. In this example,
          <b>swobj4</b> is the node being removed from Swift.<ol id="ol_lty_22g_pt">
          <li>Log in to the lifecycle manager.</li>
          <li>Stop Swift services on the node using the <codeph>swift-stop.yml</codeph>
              playbook:<codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts swift-stop.yml --limit <b>&lt;hostname></b></codeblock><p>The
              following example uses the <codeph>swift-stop.yml</codeph> playbook to stop Swift
              services on
              <b>helion-cp1-swobj0004</b>:<codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts swift-stop.yml --limit <b>helion-cp1-swobj0004</b></codeblock></p><note>When
              using the <codeph>--limit</codeph> argument, <!--with ansible-playbooks-->you must
              specify the full hostname (for example: <b>helion-cp1-swobj0004</b>) or use the wild
              card * (for example: <b>*swobj4*</b>).</note></li>
          <li>Remove the configuration
              files.<codeblock>ssh helion-cp1-swobj4-mgmt sudo rm -R /etc/swift</codeblock><note>Do
              not run any other playbooks until you have finished the process described in <b>To
                Remove a Node from the Input Model</b>. Otherwise, these playbooks may recreate
                <codeph>/etc/swift</codeph> and restart Swift on <b>swobj4</b>. If you accidentally
              run a playbook, simply repeat the process in <b>To Disable Swift on a
            Node</b>.</note></li>
        </ol></p>
    </section>
    <section>
      <title><b>To Remove a Node from the Input Model</b></title>
      <p>Use the following steps to finish the process of removing the Swift node.<ol
          id="ol_afc_m2g_pt">
          <li>Log in to the lifecycle manager.</li>
          <li>Edit the <codeph>~/helion/my_cloud/definition/data/servers.yml</codeph> file and
            remove the entry for the node (<b>swobj4</b> in this example).</li>
          <li>If this was a SWPAC node, reduce the member-count attribute by 1 in the
              <codeph>~/helion/my_cloud/definition/data/control_plane.yml</codeph> file. For SWOBJ
            nodes, no such action is needed.</li>
          <li>Commit the changes to
            Git:<codeblock>cd ~helion
git commit -a -m "&lt;commit message>"</codeblock></li>
          <li>Run the configuration processor:<codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml</codeblock>
            <p>You may want to use the <codeph>remove_deleted_servers</codeph> and
                <codeph>free_unused_addresses</codeph> switches to free up the resources when
              running the configuration processor. See <xref
                href="../input_model.dita#input_model/persisteddata">Persisted Data</xref> for more
              details.</p>
            <codeblock>ansible-playbook -i hosts/localhost config-processor-run.yml -e remove_deleted_servers="y" -e free_unused_addresses="y"</codeblock></li>
          <li>Create a deployment
            directory:<codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
          <li>Validate the changes you've made to the configuration files using the playbook below
            before proceeding further: <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts _swift-validate-input-model.yml --limit SWF*</codeblock>
            <p>If any errors occur, correct them in your configuration files and repeat steps 3-5
              again until no more errors occur before going to the next step.</p>
            <p>For more details on how to interpret and resolve errors, see <xref
                href="../troubleshooting/objectstorage/interpreting_swift_validate_input_model.dita"
                >Interpreting Swift Input Model Validation Errors</xref></p></li>
          <li>Remove the node from
            Cobbler:<codeblock>sudo cobbler system remove --name=swobj4</codeblock></li>
          <li>Run the Cobbler deploy playbook:
            <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost cobbler-deploy.yml</codeblock></li>
          <li>The final step will depend on what type of Swift node you are removing. <p>If the node
              was a SWPAC node, run the <codeph>hlm-deploy.yml</codeph> playbook:</p>
            <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts hlm-deploy.yml</codeblock>
            <p>If the node was a SWOBJ node, run the <codeph>swift-deploy.yml</codeph> playbook:</p>
            <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts swift-deploy.yml</codeblock>
          </li>
          <li>Wait until replication has finished. For more details, see <xref
              href="../objectstorage/safe_rebalance_deploy_ring.dita"/>.</li>
          <li>You may need to continue to rebalance the rings. For instructions, see <b>Final
              Rebalance Phase </b> at <xref
              href="../objectstorage/input_model_change_existing_rings.dita#topic_vyp_cft_4t"
            />.</li>
        </ol></p>
    </section>
  </body>
</topic>
