<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="stopStartSvcs">
  <title><ph conkeyref="HOS-conrefs/product-title"/>Starting and Stopping Services</title>
  <body>
    <p conkeyref="HOS-conrefs/applies-to"/>
    <section id="NovaCompute">
      <title>Nova compute</title>
      <p>You can stop API requests going to a service using the Nova stop script, or start a service
        that has died or was in a bad state with the Nova start script.</p>
      <p>To stop the Nova compute service, you must run the playbook associated with the
        service:</p>
      <p><b>Stopping the nova-compute Service</b></p>
      <p>If you have access to the lifecycle manager, you can use the ansible playbook instructions
        below. Using this method has the added benefit of modifying the monitoring (Monasca) service
        to remove the alarms for the effected nodes. If you do not have access to the lifecycle
        manager then you will need to skip down to the next section.</p>
      <ol>
        <li>Log in to the lifecycle manager.</li>
        <li>Stop the nova-compute service: <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts nova-stop.yml --limit &lt;hostname></codeblock>
          <p>If you need to determine what the hostname is for your Compute node you can use
              <codeph>nova host-list</codeph> to get a full list:
            <codeblock>source ~/service.osrc
nova host-list</codeblock></p></li>
        <li>You can then confirm it has stopped by using the <codeph>nova service-list</codeph>
          command:
          <codeblock>source ~/service.osrc
nova service-list
+----+------------------+--------------------------+----------+---------+-------+----------------------------+-----------------+
| Id | Binary           | Host                     | Zone     | Status  | State | Updated_at                 | Disabled Reason |
+----+------------------+--------------------------+----------+---------+-------+----------------------------+-----------------+
| 1  | nova-conductor   | helion-cp1-c1-m1-mgmt    | internal | enabled | up    | 2016-01-15T16:30:50.000000 | -               |
| 7  | nova-scheduler   | helion-cp1-c1-m1-mgmt    | internal | enabled | up    | 2016-01-15T16:30:50.000000 | -               |
| 10 | nova-conductor   | helion-cp1-c1-m3-mgmt    | internal | enabled | up    | 2016-01-15T16:30:51.000000 | -               |
| 19 | nova-conductor   | helion-cp1-c1-m2-mgmt    | internal | enabled | up    | 2016-01-15T16:30:53.000000 | -               |
| 22 | nova-consoleauth | helion-cp1-c1-m1-mgmt    | internal | enabled | up    | 2016-01-15T16:30:53.000000 | -               |
| 25 | nova-scheduler   | helion-cp1-c1-m2-mgmt    | internal | enabled | up    | 2016-01-15T16:30:50.000000 | -               |
| 28 | nova-scheduler   | helion-cp1-c1-m3-mgmt    | internal | enabled | up    | 2016-01-15T16:30:52.000000 | -               |
<b>| 31 | nova-compute     | helion-cp1-comp0001-mgmt | nova     | enabled | down  | 2016-01-15T16:30:47.000000 | -               |</b>
+----+------------------+--------------------------+----------+---------+-------+----------------------------+-----------------+</codeblock></li>
      </ol>
      <p>If you do not have access to the lifecycle manager, use these steps. You will need to
        modify the monitoring service manually if you wish to remove alarms related to the Compute
        nodes.</p>
      <ol>
        <li>SSH to the Compute host you want to stop the nova-compute service on.</li>
        <li>Use this command to stop the service:
          <codeblock>systemctl stop nova-compute</codeblock></li>
      </ol>
      <p><b>Starting the nova-compute Service</b></p>
      <p>If you have access to the lifecycle manager, you can use the ansible playbook instructions
        below. Using this method has the added benefit of modifying the monitoring (Monasca) service
        to add the alarms for the effected nodes. If you do not have access to the lifecycle manager
        then you will need to skip down to the next section.</p>
      <ol>
        <li>Log in to the lifecycle manager.</li>
        <li>Start the nova-compute service: <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts nova-start.yml --limit &lt;hostname></codeblock>
          <p>If you need to determine what the hostname is for your Compute node you can use
              <codeph>nova host-list</codeph> to get a full list:
            <codeblock>source ~/service.osrc
nova host-list</codeblock></p></li>
        <li>You can then confirm it is back up by using the <codeph>nova service-list</codeph>
          command:
          <codeblock>source ~/service.osrc
nova service-list
+----+------------------+--------------------------+----------+---------+-------+----------------------------+-----------------+
| Id | Binary           | Host                     | Zone     | Status  | State | Updated_at                 | Disabled Reason |
+----+------------------+--------------------------+----------+---------+-------+----------------------------+-----------------+
| 1  | nova-conductor   | helion-cp1-c1-m1-mgmt    | internal | enabled | up    | 2016-01-15T16:30:50.000000 | -               |
| 7  | nova-scheduler   | helion-cp1-c1-m1-mgmt    | internal | enabled | up    | 2016-01-15T16:30:50.000000 | -               |
| 10 | nova-conductor   | helion-cp1-c1-m3-mgmt    | internal | enabled | up    | 2016-01-15T16:30:51.000000 | -               |
| 19 | nova-conductor   | helion-cp1-c1-m2-mgmt    | internal | enabled | up    | 2016-01-15T16:30:53.000000 | -               |
| 22 | nova-consoleauth | helion-cp1-c1-m1-mgmt    | internal | enabled | up    | 2016-01-15T16:30:53.000000 | -               |
| 25 | nova-scheduler   | helion-cp1-c1-m2-mgmt    | internal | enabled | up    | 2016-01-15T16:30:50.000000 | -               |
| 28 | nova-scheduler   | helion-cp1-c1-m3-mgmt    | internal | enabled | up    | 2016-01-15T16:30:52.000000 | -               |
<b>| 31 | nova-compute     | helion-cp1-comp0001-mgmt | nova     | enabled | up    | 2016-01-15T16:30:47.000000 | -               |</b>
+----+------------------+--------------------------+----------+---------+-------+----------------------------+-----------------+</codeblock></li>
      </ol>
      <p>If you do not have access to the lifecycle manager, use these steps. You will need to
        modify the monitoring service manually if you wish to add alarms related to the Compute
        nodes.</p>
      <ol>
        <li>SSH to the Compute host you want to start the nova-compute service on.</li>
        <li>Use this command to start the service:
          <codeblock>systemctl start nova-compute</codeblock></li>
      </ol>
    </section>


    <p><b>Starting and stopping Freezer</b></p>
    <section conref="../bura/start_stop_freezer_services.dita#topic_dsm_fbs_st/main"/>
    <section conref="../bura/start_stop_freezer_services.dita#topic_dsm_fbs_st/manual"/>

    <section id="Logging">
      <title>Logging</title>
      <p>These playbooks must be run from the lifecycle manager.</p>
      <p><b>To stop Logging:</b></p>
      <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts logging-stop.yml</codeblock>
      <p><b>To start Logging:</b></p>
      <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts logging-start.yml</codeblock>
      <note>The above steps only impact centralized logging. Logrotate is an essential feature (to
        keep the service log files from filling the disk) and will not be affected.</note>
    </section>
  </body>
</topic>
