<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_sym_ms4_xv">
  <title><keyword keyref="kw-hos-phrase-21"/>: Deploying Updated TLS Certs to Change Public
    Endpoints</title>
  <body>
    <p>If you have deployed your <keyword keyref="kw-hos-phrase-21"/> cloud and you have fixed IP
      addresses for your public endpoints which are specified in your corresponding TLS
      certificates, this document will show you how to update your public endpoints and TLS certs to
      use a domain name.</p>

    <section id="prereq"><title>Prerequisites</title>
      <p>You should obtain a TLS certificate that specifics
          <codeph>subjectAltName=&lt;DNS:&lt;dns_name></codeph></p>
    </section>

    <section id="steps"><title>How to add your updated TLS certificate and deploy it in your
        environment</title>
      <ol>
        <li>Log in to the lifecycle manager.</li>
        <li>Save the details of your public endpoints as they currently exist before you begin
          making changes: <ol>
            <li>Source the keystone admin credentials:
              <codeblock>source ~/keystone.osrc</codeblock></li>
            <li>This command will list the details of your public endpoints and save them in a file
              with path <codeph>~/public_endpoints.orig</codeph>:
              <codeblock>openstack endpoint list --interface public | tail -n +4 | head -n -1 | tee ~/public_endpoints.orig</codeblock></li>
          </ol>
        </li>
        <li>Copy your certificate and then update your cloud configuration to specify the new cert: <ol>
            <li>Place your TLS certificate in this directory:
              <codeblock>~/helion/my_cloud/config/tls/certs</codeblock></li>
            <li>Edit your <codeph>network_groups.yml</codeph> file to specify your certificate.
                <p>Path to file:</p>
              <codeblock>~/helion/my_cloud/definition/data/network_groups.yml</codeblock>
              <p>Edit the <codeph>cert-file</codeph> line to specify the path to your cert, bolded
                example below:</p>
              <codeblock>tls-components
  - default
roles
  - public
<b>cert-file: &lt;path_to_cert></b></codeblock></li>
            <li>Commit the changes to git:
              <codeblock>git add -A
git commit -a -m "updating TLS cert"</codeblock></li>
          </ol>
        </li>
        <li>Deploy your updated certificate to your cloud environment: <ol>
            <li>Run the configuration processor:
              <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml</codeblock></li>
            <li>Update your deployment directory:
              <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
            <li>Run this playbook, which will push the certificate to your hosts and
              reconfigure/restart HAProxy:
              <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts FND-CLU-deploy.yml</codeblock></li>
            <li>Deploy the CA chain, if necessary:
              <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts horizon-deploy.yml</codeblock></li>
          </ol>
        </li>
        <li>Delete your existing public endpoints. This command will use the file you created
          earlier in step #2. Once this step is complete, any attempts to access the old endpoints
          will generate certificate
          errors.<codeblock>awk '{ print "openstack endpoint delete " $2}' ~/public_endpoints.orig | tee ~/delete_endpoints</codeblock></li>
        <li>Create new public endpoints. <ol>
            <li>Copy your original public endpoints to a new file which you will use to create your
              new endpoints:
              <codeblock>cp ~/public_endpoints.orig ~/public_endpoints.new</codeblock></li>
            <li>Edit the <codeph>~/public_endpoints.new</codeph> file to replace the old IP address
              with the FQDN from your cert. You can automate this by using this command, altering
              the old IP address and FQDN to fit your environment:
              <codeblock>sed -i "s/&lt;old_IP_address>/&lt;FQDN>/g" ~/public_endpoints.new</codeblock></li>
            <li>Recreate the public endpoints:
              <codeblock>awk '{ print "openstack endpoint create --region " $4 " " $6 " public \42" $14 "\42"}'~/public_endpoints.new| tee ~/create_endpoints</codeblock></li>
            <li>Confirm that the new endpoints look correct:
              <codeblock>cat ~/create_endpoints</codeblock></li>
          </ol></li>
        <li>Complete the deployment by reconfiguring the compute service:
          <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts nova-reconfigure.yml</codeblock></li>
      </ol>
    </section>
  </body>
</topic>
