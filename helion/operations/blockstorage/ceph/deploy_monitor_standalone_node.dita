<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_ah5_4yx_qt">
    <title><ph conkeyref="HOS-conrefs/product-title"/>Deploying Ceph Monitor Services on Dedicated
        Resource Nodes</title>
  <body>
      <p conkeyref="HOS-conrefs/applies-to"/>
      <p>In <keyword keyref="kw-hos-phrase"/>, the Ceph monitor service is installed on the
            controller nodes by default. But you can install the service on one or more dedicated
            resource nodes by modifying the cloud input model. <note type="attention">If you want to
                deploy the monitor service as a dedicated resource node, then you must decide prior
                to the deployment of Ceph. <keyword keyref="kw-hos-phrase"/> does not support
                deployment transition. Once Ceph is deployed, you cannot migrate the monitor service
                from controller to dedicated resource nodes. </note></p>
    <section>
            <title>Prerequisite</title>
            <p>The lifecycle manager must be set up before starting Ceph deployment.
                For more details on the installation of the lifecycle manager, see
                    <xref href="../../../installation/install_entryscale_kvm.dita#install_kvm"/>.</p>
        </section>
    <p><b>To Install the Ceph Monitor Service on Dedicated Resource Nodes</b></p>
    <p>Perform the following procedure to install the Ceph monitor on dedicated nodes. Note that
            Ceph requires at least 3 monitoring servers to form a majority in case of node
                failure.<ol id="ol_thh_pxn_rt">
                <li>Login to the lifecycle manager.</li>
                <li>Ensure that your cloud definition
                        (<codeph>~/helion/examples/entry-scale-kvm-ceph/*</codeph>) is placed in the
                        <codeph>~/helion/my_cloud/definition/</codeph> directory . </li>
                <li>Remove the line <codeph>- ceph-monitor</codeph> from <b>server-role:
                        CONTROLLER-ROLE</b> in the
                        <codeph>~/helion/my_cloud/definition/data/control_plane.yml</codeph>
                    file.</li>
                <li>Edit the <codeph>~/helion/my_cloud/definition/data/control_plane.yml</codeph>
                    file to add monitor
                        nodes:<codeblock>- name: mon
  resource-prefix: ceph
  server-role: MON-ROLE
  allocation-policy: strict
  min-count:3
  service-components:
  - ntp-client
  - ceph-monitor</codeblock><note>Ensure
                        that the section is correctly indented.</note></li>
                <li>Define the monitor resource. For instructions, see <xref
                        href="defining_monitor_resource.dita#topic_owr_kf4_rt"/>.</li>
                <li>Edit the <codeph>~/helion/my_cloud/definition/data/servers.yml</codeph> file to
                    define all the monitor nodes in the cloud. You must repeat this for each monitor
                        node:<codeblock>- id: mon4
  ip-addr: 192.168.10.11
  role: MON-ROLE
  server-group: RACK3
  nic-mapping: MY-2PORT-SERVER
  mac-addr: 8b:f6:9e:ca:3b:7a
  ilo-ip: 192.168.9.11
  ilo-password: password
  ilo-user: admin</codeblock><note>
                        Substitute the values in above sample, as per your environment, for each of
                        the monitor nodes being added.</note></li>
                <li>Commit your
                    configuration:<codeblock>cd ~/helion/hos/ansible
git add -A
git commit -m "&lt;commit message>"</codeblock></li>
                <li>Run the following
                    command:<codeblock>cd ~/helion/hos/ansible/
ansible-playbook -i hosts/localhost cobbler-deploy.yml</codeblock></li>
                <li>To reimage all the nodes using PXE, run the following
                    command:<codeblock>ansible-playbook -i hosts/localhost bm-reimage.yml</codeblock></li>
                <li>Run the configuration
                    processor:<codeblock>ansible-playbook -i hosts/localhost config-processor-run.yml</codeblock></li>
                <li>Use the playbook below to create a deployment directory:
                    <codeblock>ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
                <li>Run the following playbook: <p>
                        <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts site.yml</codeblock>
                    </p></li>
            </ol></p>
  </body>
</topic>
