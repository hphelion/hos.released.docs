<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd" >
<topic xml:lang="en-us" id="central_log_configure_services">
  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring Settings for Other Services</title>
  <body>
    <section id="Clog_config_services">
      
      <p>When you configure settings for the Centralized Logging Service, those changes impact all
        services that are enabled for centralized logging. However, if you only need to change the
        logging configuration for one specific service, you will want to modify the service's files
        instead of changing the settings for the entire Centralized Logging service. This topic
        helps you complete the following tasks:</p>
      <ul>
        <li><xref href="#central_log_configure_services/CL_log_level_srv">How Do I Set Logging Levels for Services?</xref></li>
        <li><xref href="#central_log_configure_services/CL_config_log_rotate">How Do I Change the Length of Time Log Files Are Retained?</xref></li>
        <li><xref href="#central_log_configure_services/CL_kibana_config">How Do I Configure Kibana for Centralized Logging?</xref></li>
        <li><xref href="#central_log_configure_services/CL_elasticsearch_config">How Do I Configure Elasticsearch for Centralized Logging?</xref></li>
      </ul>
    </section>
<lines>
  
</lines>
    <section id="CL_log_level_srv">
      <title>How Do I Set Logging Levels For Services?</title>
      <p>When it is necessary to increase the logging level for a specific service to troubleshoot
        an issue, or to decrease logging levels to save disk space, you can edit the service's
        config file and then reconfigure logging. All changes will be made to the service's files
        and not to the Centralized Logging service files.</p>
<p>Messages only appear in the log files if they are the same as or more severe than the log level you set. The DEBUG level logs everything. Most services default to the INFO logging level, which lists informational events, plus warnings, errors, and critical errors. Some services provide other logging options which will narrow the focus to help you debug an issue, receive a warning if an operation fails, or if there is a serious issue with the cloud.
      </p>
      <table frame="all" rowsep="1" colsep="1" id="table_log_levels">
        <tgroup cols="3">
          <colspec colname="c1" colnum="1" colwidth="1*"/>
          <colspec colname="c2" colnum="2" colwidth="3.11*"/>
          <colspec colname="c3" colnum="3" colwidth="2.7*"/>
          <thead>
            <row>
              <entry>Level</entry>
              <entry>Associated Task(s)</entry>
              <entry>Description</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>DEBUG</entry>
              <entry>
                <ul>
                  <li>To review very detailed output for diagnostic purposes.</li>
                  <li>If a developer needs copious details to understand what is going on with the
                    service.</li>
                </ul>
              </entry>
              <entry>Every message is logged including those that are only for debugging. Provides
                detailed information, typically of interest only when diagnosing problems. The
                information can be used to diagnose problems by developers, IT, and system
                administrators.</entry>
            </row>
            <row>
              <entry>INFO</entry>
              <entry>
                <ul>
                  <li>To confirm that things are working as expected, if you want to report events
                    that occur during the normal operation of a program.</li>
                  <li>For example: status monitoring or fault investigation.</li>
                </ul>
              </entry>
              <entry>This is the default log level. It includes main events. For example, this
                includes information about when the service starts and stops, and service
                configuration assumptions.</entry>
            </row>
            <row>
              <entry>WARN</entry>
              <entry>
                <ul>
                  <li>To confirm that things are working as expected, if you want to report events
                    that occur during the normal operation of a program.</li>
                  <li>For example: status monitoring or fault investigation.</li>
                </ul>
              </entry>
              <entry>This is the default log level. It includes main events. For example, this
                includes information about when the service starts and stops, and service
                configuration assumptions.</entry>
            </row>
            <row>
              <entry>ERROR</entry>
              <entry>
                <ul>
                  <li>To force a user to respond. For example, if a connection string is
                    incorrect.</li>
                  <li>To immediately notify an administrator by email or pager when there is a
                    serious issue with the cloud.</li>
                  <li>To report suppression of an error without raising an exception. For example,
                    an error handler in a long-running server process.</li>
                </ul>
              </entry>
              <entry>Indicates that due to a more serious problem, the software has not been able to
                perform some function. Entries include any error which is fatal to the operation but
                not the service or application. Examples: Can't open a required file, or missing
                data.</entry>
            </row>
            <row>
              <entry>CRITICAL</entry>
              <entry>To be alerted when a critical error occurs that can lead to service
                interruption or degradation.</entry>
              <entry>Identifies an unrecoverable error with a service. Entries indicate a serious
                error where the program itself may be unable to continue running.</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </section>
    <section id="Loglvl_intro">
      <title>To configure the logging level for a specific service:</title>
        <p>If you want to increase or decrease the amount of details that are logged by a service,
        you can change the current logging level in the configuration files. Most services support,
        at a minimum, the DEBUG and INFO logging levels. For more information about what levels are
        supported by a service, check the documentation or Website for the specific service.</p>
    </section>


      <section id="Loglvl_barb">
        <title>Barbican</title>
        <p>
          <table frame="all" rowsep="1" colsep="1" id="loglvl_tbl__barb">
            <tgroup cols="3">
              <colspec colname="c1" colnum="1"/>
              <colspec colname="c2" colnum="2"/>
              <colspec colname="c3" colnum="3"/>
              <thead>
                <row>
                  <entry>Service</entry>
                  <entry>Sub-component</entry>
                  <entry>Supported Logging Levels</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry>Barbican</entry>
                  <entry>barbican-api</entry>
                  <entry>INFO (default)<p>DEBUG</p></entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </p>
        
      <p>To change the Barbican logging level:</p>
<ol>
  <li>Log in to the lifecycle manager (deployer).</li>
  <li>Open the following file:
          <codeblock>~/helion/my_cloud/config/barbican/barbican_deploy_config.yml</codeblock></li>
  <li>To change the logging level, use ALL CAPS to set the desired level in the following
          lines:<codeblock>barbican_loglevel:  {{helion_loglevel | default('INFO')}}
barbican_logstash_loglevel:  {{helion_loglevel | default('INFO')}}</codeblock></li>
  <li>Save the changes to the file. </li>
  <li>To commit the changes to your local git repository:
          <codeblock>cd ~/helion/hos/ansible
git add -A git 
commit -m "My config or other commit message"</codeblock></li>
  <li>To run the configuration processor:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml</codeblock></li>
  <li>To create a deployment directory:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
  <li>To run the reconfigure playbook:
          <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts barbican-reconfigure.yml</codeblock></li>
</ol>        
    </section>
    
    
    <section id="Loglvl_ceilo">
      <title>Ceilometer</title>
      <p>
        <table frame="all" rowsep="1" colsep="1" id="loglvl_tbl__ceilo">
          <tgroup cols="3">
            <colspec colname="c1" colnum="1"/>
            <colspec colname="c2" colnum="2"/>
            <colspec colname="c3" colnum="3"/>
            <thead>
              <row>
                <entry>Service</entry>
                <entry>Sub-component</entry>
                <entry>Supported Logging Levels</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>Ceilometer</entry>
                <entry>ceilometer-api
                    <p>ceilometer-collector</p><p>ceilometer-agent-notification</p><p>ceilometer-agent-central</p><p>ceilometer-expirer</p></entry>
                <entry>INFO (default)<p>DEBUG</p></entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </p>
      
      <p>To change the Ceilometer logging level:</p>
      <ol>
        <li>Log in to the lifecycle manager (deployer).</li>
        <li>Open the following file: <codeblock>~/roles/_CEI-CMN/defaults/main.yml</codeblock><note type="note">You can also change the log level for individual Ceilometer components by changing
            one or more of the files below:
            <codeblock>~/helion/hos/ansible/roles/CEI-API/templates/api-logging.conf.j2
~/helion/hos/ansible/roles/CEI-COL/templates/collector-logging.conf.j2
~/helion/hos/ansible/roles/CEI-NAG/templates/agent-notification-logging.conf.j2
~/helion/hos/ansible/roles/CEI-CAG/templates/agent-central-logging.conf.j2
~/helion/hos/ansible/roles/CEI-EXP/templates/expirer-logging.conf.j2</codeblock></note></li>
<li>To change the logging level, use ALL CAPS to set the desired level in the following lines::
          <codeblock>ceilometer_loglevel:  INFO
ceilometer_logstash_loglevel:  INFO</codeblock></li>   
        <li>Save the changes to the file. </li>
        <li>To commit the changes to your local git repository:
          <codeblock>cd ~/helion/hos/ansible
git add -A git 
commit -m "My config or other commit message"</codeblock></li>
        <li>To run the configuration processor:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml</codeblock></li>
        <li>To create a deployment directory:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
        <li>To run the reconfigure playbook:
          <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts ceilometer-reconfigure.yml</codeblock></li>
      </ol>        
    </section>
    
    
    <section id="Loglvl_Ceph">
      <title>Ceph</title>
      <p>
        <table frame="all" rowsep="1" colsep="1" id="loglvl_tbl__ceph">
          <tgroup cols="3">
            <colspec colname="c1" colnum="1"/>
            <colspec colname="c2" colnum="2"/>
            <colspec colname="c3" colnum="3"/>
            <thead>
              <row>
                <entry>Service</entry>
                <entry>Sub-component</entry>
                <entry>Supported Logging Levels</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>Ceph</entry>
                <entry>ceph-mon<p>ceph-osd</p></entry>
                <entry>INFO: 15/20<p>DEBUG: 20/20</p><p>WARN: 10/15</p><p>ERROR: 5/10</p><p>CRITICAL: 1/5</p></entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </p>
      
      <p>To change the Ceph logging level:</p>
      <ol>
        <li>Log in to the lifecycle manager (deployer).</li>
        <li>Open the following file:
          <codeblock>~/helion/hos/ansible/roles/_CEP-CMN/defaults/main.yml</codeblock></li>
        <li>To change the logging level, use ALL CAPS to set the desired level in the following
          lines:
          <codeblock>ceph_mon_log_level: "{{helion_loglevel | default('CRITICAL') }}"
ceph_osd_log_level: "{{helion_loglevel | default('CRITICAL') }}"
ceph_rgw_log_level: "{{helion_loglevel | default('CRITICAL') }}"
          </codeblock></li> 
        <li>To commit the changes to your local git repository:
          <codeblock>cd ~/helion/hos/ansible
git add -A git 
commit -m "My config or other commit message"</codeblock></li>
        <li>To run the configuration processor:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml</codeblock></li>
        <li>To create a deployment directory:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
        <li>To run the reconfigure playbook:
          <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts ceph-reconfigure.yml</codeblock></li>
      </ol>        
    </section>
    
    
    <section id="Loglvl_Cinder">
      <title>Block Storage (Cinder)</title>
      <p>
        <table frame="all" rowsep="1" colsep="1" id="loglvl_tbl_cinder">
          <tgroup cols="3">
            <colspec colname="c1" colnum="1"/>
            <colspec colname="c2" colnum="2"/>
            <colspec colname="c3" colnum="3"/>
            <thead>
              <row>
                <entry>Service</entry>
                <entry>Sub-component</entry>
                <entry>Supported Logging Levels</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>Cinder</entry>
                <entry>cinder-local
                <p>cinder-logstash</p></entry>
                <entry>INFO<p>DEBUG (default)</p></entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </p>
      
      <p>To change the Cinder logging level:</p>
      <ol>
        <li>Log in to the lifecycle manager (deployer).</li>
        <li>Open the following file:
          <codeblock>~/helion/hos/ansible/roles/_CND-CMN/defaults/main.yml</codeblock></li>
        <li>To change the logging level, use ALL CAPS to set the desired level in the following
          lines:
            <codeblock>cinder_default_log_level: DEBUG
cinder_logstash_log_level: INFO </codeblock><note
            type="attention">The recommended settings are for Cinder to use DEBUG and for Logstash
            to use INFO.</note></li>
        <li>To commit the changes to your local git repository:
          <codeblock>cd ~/helion/hos/ansible
git add -A git 
commit -m "My config or other commit message"</codeblock></li>
        <li>To run the configuration processor:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml</codeblock></li>
        <li>To create a deployment directory:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
        <li>To run the reconfigure playbook:
          <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts cinder-reconfigure.yml</codeblock></li>
      </ol>        
    </section>
    
    
    <section id="Loglvl_Designate">
      <title>Designate</title>
      <p>
        <table frame="all" rowsep="1" colsep="1" id="loglvl_tbl_designate">
          <tgroup cols="3">
            <colspec colname="c1" colnum="1"/>
            <colspec colname="c2" colnum="2"/>
            <colspec colname="c3" colnum="3"/>
            <thead>
              <row>
                <entry>Service</entry>
                <entry>Sub-component</entry>
                <entry>Supported Logging Levels</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>Designate</entry>
                <entry>designate-api
                    <p>designate-central</p><p>designate-mdns</p><p>designate-pool-manager</p><p>designate-zone-manager</p><p>designate-api-json</p><p>designate-central-json</p><p>designate-mdns-json</p><p>designate-pool-manager-json</p><p>designate-zone-manager-json</p></entry>
                <entry>INFO (default)<p>DEBUG</p></entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </p>
      
      <p>To change the Designate logging level:</p>
      <ol>
        <li>Log in to the lifecycle manager (deployer).</li>
        <li>The Designate service component logging can be changed by modifying the following files:
          <codeblock>designate-api.log
designate-api-json.log
designate-central.log
designate-central-json.log
designate-mdns.log
designate-mdns-json.log
designate-pool-manager.log
designate-pool-manager-json.log
designate-zone-manager.log
designate-zone-manager-json.log</codeblock></li> 
        <li>To change the logging level, use ALL CAPS to set the desired level in
          the following line: 
          <codeblock>designate_loglevel:  {{helion_loglevel | default('INFO')}}</codeblock></li>
        <li>Save the changes to the file. </li>
        <li>To commit the changes to your local git repository:
          <codeblock>cd ~/helion/hos/ansible
git add -A git 
commit -m "My config or other commit message"</codeblock></li>
        <li>To run the configuration processor:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml</codeblock></li>
        <li>To create a deployment directory:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
        <li>To run the reconfigure playbook:
          <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts designate-reconfigure.yml</codeblock></li>
      </ol>        
    </section>
    
    
    <section id="Loglvl_esx">
      <title>ESX (EON)</title>
      <p>
        <table frame="all" rowsep="1" colsep="1" id="loglvl_tbl_esx">
          <tgroup cols="3">
            <colspec colname="c1" colnum="1"/>
            <colspec colname="c2" colnum="2"/>
            <colspec colname="c3" colnum="3"/>
            <thead>
              <row>
                <entry>Service</entry>
                <entry>Sub-component</entry>
                <entry>Supported Logging Levels</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>EON</entry>
                <entry/>
                <entry/>
              </row>
            </tbody>
          </tgroup>
        </table>
      </p>
      
      <p>To change the EON logging level:</p>
      <ol>
        <li>See <xref href="../esx/eon_logging.dita">Enable EON Logging</xref> for more details.</li>
      </ol>        
    </section>
    
    <section id="Loglvl_freezer">
      <title>Freezer</title>
      <p>
        <table frame="all" rowsep="1" colsep="1" id="loglvl_tbl_frz">
          <tgroup cols="3">
            <colspec colname="c1" colnum="1"/>
            <colspec colname="c2" colnum="2"/>
            <colspec colname="c3" colnum="3"/>
            <thead>
              <row>
                <entry>Service</entry>
                <entry>Sub-component</entry>
                <entry>Supported Logging Levels</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>Freezer</entry>
                <entry>freezer-agent <p>freezer-api</p><p>freezer-scheduler</p></entry>
                <entry>INFO (default)</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </p>
      
      <p>To change the Freezer logging level:</p>
      <ol>
        <li>Currently the freezer service does not support any level other than INFO.</li>
      </ol>        
    </section>
    
    
    <section id="Loglvl_glance">
      <title>Image (Glance)</title>
      <p>
        <table frame="all" rowsep="1" colsep="1" id="loglvl_tbl_glance">
          <tgroup cols="3">
            <colspec colname="c1" colnum="1"/>
            <colspec colname="c2" colnum="2"/>
            <colspec colname="c3" colnum="3"/>
            <thead>
              <row>
                <entry>Service</entry>
                <entry>Sub-component</entry>
                <entry>Supported Logging Levels</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>Glance</entry>
                <entry>glance-api
                  <p>glance-registry</p></entry>
                <entry>INFO (default)<p>DEBUG</p></entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </p>
      
      <p>To change the Glance logging level:</p>
      <ol>
        <li>Log in to the lifecycle manager (deployer).</li>
        <li>Open the following file:
          <codeblock>~/helion/my_cloud/config/glance/glance-[api,registry]-logging.conf</codeblock></li> 
        <li>To change the logging level, use ALL CAPS to set the desired level in
          the following line: 
          <codeblock>level: INFO</codeblock></li>
        <li>Save the changes to the file. </li>
        <li>To commit the changes to your local git repository:
          <codeblock>cd ~/helion/hos/ansible
git add -A git 
commit -m "My config or other commit message"</codeblock></li>
        <li>To run the configuration processor:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml</codeblock></li>
        <li>To create a deployment directory:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
        <li>To run the reconfigure playbook:
          <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts glance-reconfigure.yml</codeblock></li>
      </ol>        
    </section>
    
    
    <section id="Loglvl_hlm-ux-services">
      <title>HLM-UX-Services</title>
      <p>
        <table frame="all" rowsep="1" colsep="1" id="loglvl_tbl_hlmuxs">
          <tgroup cols="3">
            <colspec colname="c1" colnum="1"/>
            <colspec colname="c2" colnum="2"/>
            <colspec colname="c3" colnum="3"/>
            <thead>
              <row>
                <entry>Service</entry>
                <entry>Sub-component</entry>
                <entry>Supported Logging Levels</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>HLM-UX-Services</entry>
                <entry/>
                <entry>INFO (default)<p>DEBUG</p></entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </p>
      
      <p>To change the HLM-UX-Services logging level:</p>
      <ol>
        <li>Log in to the lifecycle manager (deployer).</li>
        <li>Open the following file:
          <codeblock>~/helion/hos/ansible/roles/HUX-SVC/defaults/main.yml</codeblock></li> 
        <li>To change the logging level, use ALL CAPS to set the desired level in
          the following line: 
          <codeblock>hux_svc_default_log_level: INFO</codeblock></li>
        <li>Save the changes to the file. </li>
        <li>To commit the changes to your local git repository:
          <codeblock>cd ~/helion/hos/ansible
git add -A git 
commit -m "My config or other commit message"</codeblock></li>
        <li>To run the configuration processor:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml</codeblock></li>
        <li>To create a deployment directory:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
        <li>To run the reconfigure playbook:
          <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts hlm-ux-services-reconfigure.yml</codeblock></li>
      </ol>        
    </section>
    
    
    <section id="Loglvl_heat">
      <title>Orchestration (Heat)</title>
      <p>
        <table frame="all" rowsep="1" colsep="1" id="loglvl_tbl_heat">
          <tgroup cols="3">
            <colspec colname="c1" colnum="1"/>
            <colspec colname="c2" colnum="2"/>
            <colspec colname="c3" colnum="3"/>
            <thead>
              <row>
                <entry>Service</entry>
                <entry>Sub-component</entry>
                <entry>Supported Logging Levels</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>heat</entry>
                <entry>api-cfn <p>api-cloudwatch</p><p>api-logging</p><p>engine</p></entry>
                <entry>INFO (default)<p>DEBUG</p></entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </p>
      
      <p>To change the Heat logging level:</p>
      <ol>
        <li>Log in to the lifecycle manager (deployer).</li>
        <li>Open the following file:
          <codeblock>~/helion/my_cloud/config/heat/*-logging.conf.j2</codeblock></li> 
        <li>To change the logging level, use ALL CAPS to set the desired level in
          the following line:
          <codeblock>level: INFO</codeblock></li>
        <li>Save the changes to the file. </li>
        <li>To commit the changes to your local git repository:
          <codeblock>cd ~/helion/hos/ansible
git add -A git 
commit -m "My config or other commit message"</codeblock></li>
        <li>To run the configuration processor:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml</codeblock></li>
        <li>To create a deployment directory:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
        <li>To run the reconfigure playbook:
          <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts heat-reconfigure.yml</codeblock></li>
      </ol>        
    </section> 
    
    <section id="Loglvl_hlinux">
      <title>HLinux</title>
      <p>
        <table frame="all" rowsep="1" colsep="1" id="loglvl_tbl_hlinux">
          <tgroup cols="3">
            <colspec colname="c1" colnum="1"/>
            <colspec colname="c2" colnum="2"/>
            <colspec colname="c3" colnum="3"/>
            <thead>
              <row>
                <entry>Service</entry>
                <entry>Sub-component</entry>
                <entry>Supported Logging Levels</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>hlinux</entry>
                <entry/>
                <entry>INFO (default)<p>DEBUG</p></entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </p>
      
      <p>To change the HLinux logging level:</p>
      <ol>
        <li>Log in to the lifecycle manager (deployer).</li>
        <li>Open the following file:
          <codeblock>~/helion/my_cloud/ansible/roles/HUX-SVC/defaults/main.yml</codeblock></li> 
        <li>To change the logging level, use ALL CAPS to set the desired level in
          the following line: 
          <codeblock>hux_svc_default_log_level: INFO</codeblock></li>
        <li>Save the changes to the file. </li>
        <li>To commit the changes to your local git repository:
          <codeblock>cd ~/helion/hos/ansible
git add -A git 
commit -m "My config or other commit message"</codeblock></li>
        <li>To run the configuration processor:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml</codeblock></li>
        <li>To create a deployment directory:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
        <li>To run the reconfigure playbook:
          <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts hux-svc-reconfigure.yml</codeblock></li>
      </ol>        
    </section> 
    
    <section id="Loglvl_ironic">
      <title>Ironic</title>
      <p>
        <table frame="all" rowsep="1" colsep="1" id="loglvl_tbl_ironic">
          <tgroup cols="3">
            <colspec colname="c1" colnum="1"/>
            <colspec colname="c2" colnum="2"/>
            <colspec colname="c3" colnum="3"/>
            <thead>
              <row>
                <entry>Service</entry>
                <entry>Sub-component</entry>
                <entry>Supported Logging Levels</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>ironic</entry>
                <entry>ironic-api-logging.conf.j2  
                  <p>ironic-conductor-logging.conf.j2</p></entry>
                <entry>INFO (default)<p>DEBUG</p></entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </p>
      
      <p>To change the Ironic logging level:</p>
      <ol>
        <li>Log in to the lifecycle manager (deployer).</li>
        <li>Change to the following directory:
          <codeblock>~/helion/my_cloud/config/ironic</codeblock></li> 
        <li>To change the logging for one of the sub-components, open one of the following files:
          <codeblock>ironic-api-logging.conf.j2  
ironic-conductor-logging.conf.j2</codeblock></li>
        <li>To change the logging level, use ALL CAPS to set the desired level in
          the following line:
          <codeblock>level: INFO</codeblock></li>
        <li>Save the changes to the file. </li>
        <li>To commit the changes to your local git repository:
          <codeblock>cd ~/helion/hos/ansible
git add -A git 
commit -m "My config or other commit message"</codeblock></li>
        <li>To run the configuration processor:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml</codeblock></li>
        <li>To create a deployment directory:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
        <li>To run the reconfigure playbook:
          <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts ironic-reconfigure.yml</codeblock></li>
      </ol>        
    </section>
    
    <section id="Loglvl_keystone">
      <title>Identity(Keystone)</title>
      <p>
        <table frame="all" rowsep="1" colsep="1" id="loglvl_tbl_keystone">
          <tgroup cols="3">
            <colspec colname="c1" colnum="1"/>
            <colspec colname="c2" colnum="2"/>
            <colspec colname="c3" colnum="3"/>
            <thead>
              <row>
                <entry>Service</entry>
                <entry>Sub-component</entry>
                <entry>Supported Logging Levels</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>Keystone</entry>
                <entry>key-api</entry>
                <entry>INFO (default)
                <p>DEBUG</p>
                <p>WARN</p>
                <p>ERROR</p></entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </p>
      
      <p>To change the Keystone logging level:</p>
      <ol>
        <li>Log in to the lifecycle manager (deployer).</li>
        <li>Open the following file:
          <codeblock>~/helion/my_cloud/config/keystone/keystone_deploy_config.yml</codeblock></li>
        <li>To change the logging level, use ALL CAPS to set the desired level in the following
          lines:
          <codeblock>keystone_loglevel: INFO
keystone_logstash_loglevel: INFO</codeblock></li>
        <li>Save the changes to the file. </li>
        <li>To commit the changes to your local git repository:
          <codeblock>cd ~/helion/hos/ansible
git add -A git 
commit -m "My config or other commit message"</codeblock></li>
        <li>To run the configuration processor:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml</codeblock></li>
        <li>To create a deployment directory:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
        <li>To run the reconfigure playbook:
          <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts keystone-reconfigure.yml</codeblock></li>
      </ol>           
    </section>
    
    <section id="Loglvl_monasca">
      <title>Monitoring (Monasca)</title>
      <p>
        <table frame="all" rowsep="1" colsep="1" id="loglvl_tbl_monasca">
          <tgroup cols="3">
            <colspec colname="c1" colnum="1"/>
            <colspec colname="c2" colnum="2"/>
            <colspec colname="c3" colnum="3"/>
            <thead>
              <row>
                <entry>Service</entry>
                <entry>Sub-component</entry>
                <entry>Supported Logging Levels</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>monasca</entry>
                <entry>monasca-persister
                    <p>zookeeper</p><p>storm</p><p>monasca-notification</p><p>monasca-api</p><p>kafka</p><p>monasca-agent</p></entry>
                <entry>WARN (default)<p>INFO</p></entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </p>
      
      <note type="note"> All Monasca logging is defaulted to WARN. This should provide enough information in the log files to pinpoint any issues. If you want to provide more details, you can change the logging level to INFO. It is recommended to avoid using the DEBUG level as that will put high stress on the controller nodes and could overload the system.</note>
      
      <p>To change the Monasca logging level:</p>
      <ol>
        <li>Log in to the lifecycle manager (deployer).</li>
        <li>Monitoring service component logging can be changed by modifying the following files:
          <codeblock>~/helion/hos/ansible/roles/monasca-persister/defaults/main.yml
~/helion/hos/ansible/roles/zookeeper/defaults/main.yml
~/helion/hos/ansible/roles/storm/defaults/main.yml
~/helion/hos/ansible/roles/monasca-notification/defaults/main.yml
~/helion/hos/ansible/roles/monasca-api/defaults/main.yml
~/helion/hos/ansible/roles/kafka/defaults/main.yml
~/helion/hos/ansible/roles/monasca-agent/defaults/main.yml (For this file, you will need to add the variable)</codeblock></li>
        <li>To change the logging level, use ALL CAPS to set the desired level in
          the following line:
  <codeblock>monasca_log_level: WARN</codeblock></li>
        <li>Save the changes to the file. </li>
        <li>To commit the changes to your local git repository:
          <codeblock>cd ~/helion/hos/ansible
git add -A git 
commit -m "My config or other commit message"</codeblock></li>
        <li>To run the configuration processor:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml</codeblock></li>
        <li>To create a deployment directory:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
        <li>To run the reconfigure playbook:
          <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts monasca-reconfigure.yml</codeblock></li>
      </ol>        
    </section>
    
    
    <section id="Loglvl_neutron">
      <title>Networking (Neutron)</title>
      <p>
        <table frame="all" rowsep="1" colsep="1" id="loglvl_tbl_neutron">
          <tgroup cols="3">
            <colspec colname="c1" colnum="1"/>
            <colspec colname="c2" colnum="2"/>
            <colspec colname="c3" colnum="3"/>
            <thead>
              <row>
                <entry>Service</entry>
                <entry>Sub-component</entry>
                <entry>Supported Logging Levels</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>neutron</entry>
                <entry>neutron-server
                    <p>dhcp-agent</p><p>l3-agent</p><p>lbaas-agent</p><p>metadata-agent</p><p>openvswitch-agent</p><p>vpn-agent</p></entry>
                <entry>INFO (default)<p>DEBUG</p></entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </p>

      
      <p>To change the Neutron logging level:</p>
      <ol>
        <li>Log in to the lifecycle manager.</li>
        <li>The Neutron service component logging can be changed by modifying the following files:
          <codeblock>dhcp-agent-logging.conf.j2
l3-agent-logging.conf.j2
lbaas-agent-logging.conf.j2
metadata-agent-logging.conf.j2
openvswitch-agent-logging.conf.j2
vpn-agent-logging.conf.j2</codeblock></li>
        <li>To change the logging level, use ALL CAPS to set the desired level in
          the following line: 
          <codeblock>level: INFO</codeblock></li>   
        <li>Save the changes to the file. </li>
        <li>To commit the changes to your local git repository:
          <codeblock>cd ~/helion/hos/ansible
git add -A git 
commit -m "My config or other commit message"</codeblock></li>
        <li>To run the configuration processor:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml</codeblock></li>
        <li>To create a deployment directory:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
        <li>To run the reconfigure playbook:
          <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts neutron-reconfigure.yml</codeblock></li>
      </ol>        
    </section>
    
    <section id="Loglvl_nova">
      <title>Compute (Nova)</title>
      <p>
        <table frame="all" rowsep="1" colsep="1" id="loglvl_tbl_nova">
          <tgroup cols="3">
            <colspec colname="c1" colnum="1"/>
            <colspec colname="c2" colnum="2"/>
            <colspec colname="c3" colnum="3"/>
            <thead>
              <row>
                <entry>Service</entry>
                <entry>Sub-component</entry>
                <entry>Supported Logging Levels</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>nova</entry>
                <entry/>
                <entry>INFO (default)<p>DEBUG</p></entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </p>
      
      
      <p>To change the Nova logging level:</p>
      <ol>
        <li>Log in to the lifecycle manager.</li>
        <li>The Neutron service component logging can be changed by modifying the following files:
            <codeblock>~/helion/my_cloud/config/nova/novncproxy-logging.conf.j2
~/helion/my_cloud/config/nova/api-logging.conf.j2
~/helion/my_cloud/config/nova/compute-logging.conf.j2
~/helion/my_cloud/config/nova/conductor-logging.conf.j2
~/helion/my_cloud/config/nova/consoleauth-logging.conf.j2
~/helion/my_cloud/config/nova/scheduler-logging.conf.j2</codeblock></li>
        <li>To change the logging level, use ALL CAPS to set the desired level in
          the following line: 
          <codeblock>level: INFO</codeblock></li>
        <li>Save the changes to the file. </li>
        <li>To commit the changes to your local git repository:
          <codeblock>cd ~/helion/hos/ansible
git add -A git 
commit -m "My config or other commit message"</codeblock></li>
        <li>To run the configuration processor:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml</codeblock></li>
        <li>To create a deployment directory:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
        <li>To run the reconfigure playbook:
          <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts nova-reconfigure.yml</codeblock></li>
      </ol>        
    </section>
    
    
    <section id="Loglvl_octavia">
      <title>Octavia</title>
      <p>
        <table frame="all" rowsep="1" colsep="1" id="loglvl_tbl_octavia">
          <tgroup cols="3">
            <colspec colname="c1" colnum="1"/>
            <colspec colname="c2" colnum="2"/>
            <colspec colname="c3" colnum="3"/>
            <thead>
              <row>
                <entry>Service</entry>
                <entry>Sub-component</entry>
                <entry>Supported Logging Levels</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>octavia</entry>
                <entry>Octavia-api <p>Octavia-worker</p><p>Octavia-hk</p><p>Octavia-hm</p></entry>
                <entry>INFO (default)<p>DEBUG</p></entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </p>
      
      
      <p>To change the Octavia logging level:</p>
      <ol>
        <li>Log in to the lifecycle manager.</li>
        <li>The Octavia service component logging can be changed by modifying the following files:
          <codeblock>~/helion/my_cloud/config/octavia/octavia-api.conf.j2
~/helion/my_cloud/config/octavia/octavia-worker.conf.j2
~/helion/my_cloud/config/octavia/octavia-hk-logging.conf.j2
~/helion/my_cloud/config/octavia/Octavia-hm-logging.conf.j2</codeblock></li>
        <li>To change the logging level, use ALL CAPS to set the desired level in
          the following line: 
          <codeblock>octavia_default_log_level: INFO</codeblock></li>
        <li>Save the changes to the file. </li>
        <li>To commit the changes to your local git repository:
          <codeblock>cd ~/helion/hos/ansible
git add -A git 
commit -m "My config or other commit message"</codeblock></li>
        <li>To run the configuration processor:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml</codeblock></li>
        <li>To create a deployment directory:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
        <li>To run the reconfigure playbook:
          <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts octavia-reconfigure.yml</codeblock></li>
      </ol>        
    </section>
    
    <section id="Loglvl_opsconsole">
      <title>Operations Console</title>
      <p>
        <table frame="all" rowsep="1" colsep="1" id="loglvl_tbl_opsconsole">
          <tgroup cols="3">
            <colspec colname="c1" colnum="1"/>
            <colspec colname="c2" colnum="2"/>
            <colspec colname="c3" colnum="3"/>
            <thead>
              <row>
                <entry>Service</entry>
                <entry>Sub-component</entry>
                <entry>Supported Logging Levels</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>opsconsole</entry>
                <entry>ops-web <p>ops-mon</p></entry>
                <entry>INFO (default)<p>DEBUG</p></entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </p>
      
      
      <p>To change the Ops Console logging level:</p>
      <ol>
        <li>Log in to the lifecycle manager.</li>
        <li>Open the following file:
          <codeblock>~/helion/ hos/ansible/roles/ops-common/defaults/main.yml</codeblock></li>
        <li>To change the logging level, use ALL CAPS to set the desired level in
          the following line:
        <codeblock>Ops_console_loglevel: "{{ helion_loglevel | default('INFO') }}"</codeblock></li>
        <li>To commit the changes to your local git repository:
          <codeblock>cd ~/helion/hos/ansible
git add -A git 
commit -m "My config or other commit message"</codeblock></li>
        <li>To run the configuration processor:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml</codeblock></li>
        <li>To create a deployment directory:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
        <li>To run the reconfigure playbook:
          <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts ops-console-reconfigure.yml</codeblock></li>
      </ol>        
    </section>  
    
    <section id="Loglvl_swift">
      <title>Object Storage (Swift)</title>
      <p>
        <table frame="all" rowsep="1" colsep="1" id="loglvl_tbl_swift">
          <tgroup cols="3">
            <colspec colname="c1" colnum="1"/>
            <colspec colname="c2" colnum="2"/>
            <colspec colname="c3" colnum="3"/>
            <thead>
              <row>
                <entry>Service</entry>
                <entry>Sub-component</entry>
                <entry>Supported Logging Levels</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>swift</entry>
                <entry/>
                <entry>INFO (default)<p>DEBUG</p></entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </p>
      
      <p>To change the Freezer logging level:</p>
      <ol>
        <li>Currently it is not recommended to log at any level other than INFO.</li>
      </ol>  
    </section>   
    
    
    <section id="Loglvl_vsa">
      <title>VSA</title>
      <p>
        <table frame="all" rowsep="1" colsep="1" id="loglvl_tbl_vsa">
          <tgroup cols="3">
            <colspec colname="c1" colnum="1"/>
            <colspec colname="c2" colnum="2"/>
            <colspec colname="c3" colnum="3"/>
            <thead>
              <row>
                <entry>Service</entry>
                <entry>Sub-component</entry>
                <entry>Supported Logging Levels</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>VSA</entry>
                <entry>vsa-installer</entry>
                <entry>INFO (default)<p>DEBUG</p></entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </p>
      
      
      <p>To change the VSA logging level:</p>
      <ol>
        <li>Log in to the lifecycle manager.</li>
        <li>Open the following file:
        <codeblock>~/helion/hos/ansible/roles/VSA-DEP/defaults/main.yml</codeblock></li>
        <li>To change the logging level, use ALL CAPS to set the desired level in
          the following line:
        <codeblock>vsa_installer_log_level: "{{ helion_loglevel | default ('INFO') }}"</codeblock></li>
        <li>Save the changes to the file. </li>
        <li>To commit the changes to your local git repository:
          <codeblock>cd ~/helion/hos/ansible
git add -A git 
commit -m "My config or other commit message"</codeblock></li>
        <li>To run the configuration processor:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml</codeblock></li>
        <li>To create a deployment directory:
          <codeblock>cd ~/helion/hos/ansible ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
        <li>To run the reconfigure playbook:
          <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts vsa-reconfigure.yml</codeblock></li>
      </ol>        
    </section>  
    
    
   
    
    
    
<lines>
  
</lines>
    <section id="CL_config_log_rotate">
      <title>How Do I Change the Length of Time Log Files Are Retained?</title>
      <p>As you use each service, you might need change the default configuration settings such as: <ul>
          <li>which files are rotated</li>
          <li>how often they are rotated</li>
          <li>how large they can grow before being rotated</li>
        </ul>These changes are all made in the Helion Openstack Centralized Logging files, and not in the service files.
        Helion uses the cron process which in turn calls <codeph>logrotate</codeph>
        to provide rotation, compression, and removal of log files. Each log file can be checked
        hourly, daily, weekly, or monthly. If no rotation period is set then the log file will only
        be rotated when it grows too large.</p>
      <p>You can find the configuration files for each service in the following directory:
        <codeblock>.../logging-ansible/logging-common/vars</codeblock> Only files that have
        centralized logging enabled are copied to Elasticsearch.</p>
      <p>All of the variables for the logrotate process are found in the following file:
        <codeblock>../logging-ansible/logging-common/defaults/main.yml          </codeblock></p>
      <p>All of the variables for logging are found in the following file:
        <codeblock>.../logging-ansible/logging-common/defaults/main.yml</codeblock>
      </p>
      <note type="attention">After making any changes to the Centralized Logging service, such as log rotation settings, you must use the <b>kronos-reconfigure.yml</b> file to reconfigure the Helion logging service.</note>
      
      <p><b>To change log rotation settings for a service:</b></p>
      <ol>
        <li>Log in to the lifecycle manager.</li>
        <li>Change to the following directory:
          <codeblock>.../logging-ansible/logging-common/vars</codeblock></li>
       <li>Open the *.yml file for the service or sub-component that you want to modify.
         <p>Using BURA as an example: 
           <codeblock>.../logging-ansible/logging-common/vars/freezer-agent-clr.yml</codeblock></p></li>
        <li>Verify logging is enabled by locating the following line:
            <codeblock>---
- centralized_logging:      
enabled: true</codeblock><p>Using BURA as an
            example:
            <codeblock>---
         sub_service:
         name: freezer-agent
         service: freezer
         logging_options:
         - centralized_logging:
         enabled: true</codeblock></p></li>
        <li>To change the frequency, which is the timing of when the logs are rotated, change the
          following line: <codeblock>log_rotate:
      - daily </codeblock><note type="note">Options
            include: Hourly, Daily, Weekly, Monthly</note></li>
        <li>To rotate a file based on its size, set the maximum size the log file can be before it is rotated out:
       <codeblock>- maxsize 80M</codeblock></li>
        <li>To change the number of log files that are rotated, change the following line:
        <codeblock>rotate 14</codeblock></li>
        <li>Save the changes to the file. </li>
        <li>To commit the changes to your local git repository:
          <codeblock>cd ~/helion/hos/ansible
git add -A git 
commit -m "My config or other commit message"</codeblock></li>
        <li>To run the configuration processor:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml</codeblock></li>
        <li>To create a deployment directory:
          <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
        <li>To run the logging reconfigure playbook:
          <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts kronos-reconfigure.yml</codeblock></li>
      </ol>        
     
     <p>Using BURA as an example, I want to change the log rotation settings to the following:
      <ul>
        <li>the freezer-agent service to create log entries</li>
        <li>the log files to be created on a daily basis</li>
        <li>the maximum size the file can grow before it is rotated out to be 80MB.</li>
        <li>the number of updated copies of an original log file that are kept locally on the server and will continue to be rotated to be 14 files. </li>        
        <li>the files to be indexed by Elasticsearch and available for searching</li>
      </ul></p>
       <p>
         To create this scenario I would use the following steps:
         <ol>
           <li>Log in to the lifecycle manager.</li>
             <li>Change to the directory:
               <codeblock>.../logging-ansible/logging-common/vars</codeblock></li>
             <li>Open the following file: 
                 <codeblock>.../logging-ansible/logging-common/vars/freezer-agent-clr.yml</codeblock></li>
           <li>Enable logging by editing the following line to <b>true</b>:
            <codeblock>---
- centralized_logging:      
enabled: false</codeblock></li>
             <li>Configure the frequency by changing the following line:
               <codeblock>log_rotate:
      - daily</codeblock></li>
             <li>Set the maximum size the log file can be before it is rotated out:
               <codeblock>- maxsize 80M</codeblock></li>
             <li>Change the number of log files that are rotated to 14:
               <codeblock>rotate 14</codeblock></li>
             <li>Save the changes to the file. </li>
             <li>To commit the changes to your local git repository:
            <codeblock>cd ~/helion/hos/ansible
git add -A git 
commit -m "My config or other commit message"</codeblock></li>
             <li>To run the configuration processor:
            <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost config-processor-run.yml</codeblock></li>
             <li>To create a deployment directory:
            <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
             <li>To run the logging reconfigure playbook:
            <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts kronos-reconfigure.yml</codeblock></li>
         </ol>
       </p>

<p>Sample file created by the above steps:</p>
      <codeblock>---
sub_service:
  name: freezer-agent
service: freezer
logging_options:
- centralized_logging:
enabled: false
format: json
files:
      - /var/log/freezer-agent/freezer-agent.log
      log_rotate:
      - daily
      - compress
      - missingok
      - notifempty
      - copytruncate
      - maxsize 80M
      - rotate 14</codeblock>
    </section>
  <lines>
    
  </lines>  
    <section id="CL_kibana_config">
      <title>How Do I Configure Kibana for Centralized Logging?</title>
      <p>You can use the Kibana dashboards to view log data. Kibana is a tool developed to create
        charts, graphs, tables, and histograms based on logs send to Elasticsearch by logstash.</p>
      <p>While creating Kibana dashboards is beyond the scope of this document, it is important to
        know that you can use the default Kibana dashboards or create custom dashboards. The
        dashboards are JSON files that you can modify or create new dashboards based on existing
        dashboards.</p>
      <note>Kibana is client-side software. To operate properly, the browser must be able to access
        port 5601 on the control plane.</note>
      <p>The access information for Kibana is defined in the
          <codeph>~/helion/my_cloud/config/logging/main.yml</codeph> file and implemented in the
        Kibana configuration file
          <codeph>~/helion/my_cloud/config/logging/kibana-apache2.conf.j2</codeph>.</p>
      <table frame="all" rowsep="1" colsep="1" id="table_spl_rg5_st">
        <tgroup cols="3">
          <colspec colname="c1" colnum="1"/>
          <colspec colname="c2" colnum="2"/>
          <colspec colname="c3" colnum="3"/>
          <thead>
            <row>
              <entry>Ansible Variable</entry>
              <entry>Default Value</entry>
              <entry>Description</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>kibana_user</entry>
              <entry>kibana</entry>
              <entry>Username that will be required for logging into the Kibana UI.</entry>
            </row>
            <row>
              <entry>kibana_pass</entry>
              <entry>random password is generated</entry>
              <entry>Password generated during installation that is used to login to the Kibana
                UI.</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
      <p><b>Logging into Kibana</b></p>
      <p>To log into Kibana to view data, you must either access Kibana through Operations Console
        or using a direct link. Then make sure you have the correct login credentials.</p>
      <p><b>To log into Kibana:</b></p>
      <ol>
        <li>Access Kibana using the Operations Console or through a direct link.</li>
        <li>Verify login credentials.</li>
      </ol>
      <p><b>To use Operations Console:</b></p>
      <ol>
        <li>Access <xref href="monitoring_service.dita#monitoring/working" type="section">Operations
            Console</xref>.</li>
        <li>From the menu, choose <b>Logging Dashboard</b>.</li>
      </ol>
      <p><b>To use a direct link:</b></p>
      <p>This section helps you verify the Horizon virtual IP (VIP) address for Kibana that you
        should use.</p>
      <ol>
        <li>Navigate to and open in a text editor the following file:
          <codeblock>network_groups.yml </codeblock></li>
        <li>Find the following entry: <codeblock><codeph>external-name</codeph></codeblock></li>
        <li>If your administrator set a hostname value in the <b>external-name</b> field during the
          configuration process for your cloud, then Kibana will be accessed over port 5601 on that
          hostname.</li>
        <li>If your administrator did not set a hostname value, then to determine which IP address
          to use, from your lifecycle manager, run:
            <codeblock>grep vip-HZN-WEB /etc/hosts</codeblock><p>The output of that command will
            show you the virtual IP address for Kibana that you should use. Access to Kibana will be
            over port 5601 of that virtual IP address.
          Example:</p><codeblock>http://&lt;VIP&gt;:5601</codeblock>
        </li>
      </ol>
      <p><b>Login Credentials</b></p>
      <p>During the installation of Kibana, a password is automatically set and it is randomized.
        Therefore, unless an administrator has already changed it, you need to retreive the default
        password from a file on the control plane node.</p>
      <p>The default settings for Kibana are:</p>
      <dl>
        <dlentry>
          <dt>username</dt>
          <dd>kibana</dd>
        </dlentry>
        <dlentry>
          <dt>password</dt>
          <dd>(randomized)</dd>
        </dlentry>
      </dl>
      <p><b>To find the randomized password:</b></p>
      <ol>
        <li>On your lifecycle manager, navigate to the following directory:
          <codeblock>~/scratch/ansible/next/hos/ansible/group_vars/*</codeblock></li>
        <li>To GREP for the <codeph>logging_kibana_password</codeph>, run:
          <codeblock>grep logging_kibana_password &lt;name-of-control-plane&gt;</codeblock></li>
      </ol>
      <note type="note">For example, if you are using the Entry-scale KVM with VSA model and you
        kept the default naming scheme in the example files then your command would look similar to
        this:
        <codeblock>grep logging_kibana_password entry-scale-kvm-vsa-control-plane-1</codeblock>
      </note>
    </section>

    <lines>
      
    </lines> 
   

    <section id="CL_elasticsearch_config">
      <title>How Do I Configure Elasticsearch for Centralized Logging?</title>
      <p>Elasticsearch includes some tunable options exposed in its configuration. Helion uses these
        options in Elasticsearch to prioritize indexing speed over search speed. Helion also
        configures Elasticsearch for optimal performance in low RAM environments. The options that
        Helion modifies are listed below along with an explanation about why they were modified.</p>
      <p>These configurations are defined in the
          <codeph>~/helion/my_cloud/config/logging/main.yml</codeph> file and are implemented in the
        Elasticsearch configuration file
          <codeph>~/helion/my_cloud/config/logging/elasticsearch.yml.j2</codeph>.</p>
      <table frame="all" rowsep="1" colsep="1" id="table_qsd_3h5_st">
        <tgroup cols="5">
          <colspec colname="c1" colnum="1" colwidth="2.54*"/>
          <colspec colname="c2" colnum="2" colwidth="1.93*"/>
          <colspec colname="c3" colnum="3" colwidth="1*"/>
          <colspec colname="c4" colnum="4" colwidth="1*"/>
          <colspec colname="c5" colnum="5" colwidth="1*"/>
          <thead>
            <row>
              <entry>Ansible Variable</entry>
              <entry>Configuration Parameter</entry>
              <entry>Default Value</entry>
              <entry>Elasticsearch Default Value</entry>
              <entry>Comments</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>elasticsearch_cluster_name</entry>
              <entry>cluster name</entry>
              <entry>elasticsearch</entry>
              <entry>elasticsearch</entry>
              <entry>Name of the Elasticsearch cluster. This variable cannot be changed after the
                initial deployment. Doing so will reset all Elasticsearch indices.</entry>
            </row>
            <row>
              <entry>elasticsearch_indices_fielddata_cache_size</entry>
              <entry>indices.fielddata.cache.size</entry>
              <entry>15%</entry>
              <entry>unbounded</entry>
              <entry>By default, this setting is <b>unbounded</b>—Elasticsearch will never evict
                data from fielddata, which is less than ideal when trying to conserve on memory
                usage.</entry>
            </row>
            <row>
              <entry>elasticsearch_indices_breaker_fielddata_limit</entry>
              <entry>indices.breaker.fielddata.limit</entry>
              <entry>25%</entry>
              <entry>60%</entry>
              <entry>The field data circuit breaker enables Elasticsearch to estimate the amount of
                memory a field will require to be loaded into memory. This value must be greater
                than <b>cache.size</b> to evict data properly.</entry>
            </row>
            <row>
              <entry>elasticsearch_indices_ttl_bulk_size</entry>
              <entry>indices.ttl.bulk_size</entry>
              <entry>100000</entry>
              <entry>10000</entry>
              <entry>The number of expired docs to delete at once.</entry>
            </row>
            <row>
              <entry>elasticsearch_indices_cache_filter_size</entry>
              <entry>indices.cache.filter.expire</entry>
              <entry>6h</entry>
              <entry>-1</entry>
              <entry>By default, this setting is -1 (i.e., never expires).</entry>
            </row>
            <row>
              <entry>elasticsearch_indices_memory_index_buffer_size</entry>
              <entry>indices.memory.index_buffer_size</entry>
              <entry>50%</entry>
              <entry>10%</entry>
              <entry>Slanting performance in favor of heavier indexing usage over search
                usage.</entry>
            </row>
            <row>
              <entry>elasticsearch_indices_memory_min_index_buffer_size</entry>
              <entry>indices.memory.min_index_buffer_size</entry>
              <entry>200 MB</entry>
              <entry>48 MB</entry>
              <entry>Slanting performance in favor of heavier indexing usage over search
                usage.</entry>
            </row>
            <row>
              <entry>elasticsearch_indices_memory_min_shard_index_buffer_size</entry>
              <entry>indices.memory.min_shard_index_buffer_size</entry>
              <entry>12 MB</entry>
              <entry>4 MB</entry>
              <entry>Slanting performance in favor of heavier indexing usage over search
                usage.</entry>
            </row>
            <row>
              <entry>elasticsearch_indices_store_throttle_type</entry>
              <entry>indices.store.throttle.type</entry>
              <entry>merge</entry>
              <entry>merge</entry>
              <entry>Configures store module throttle for merges.</entry>
            </row>
            <row>
              <entry>elasticsearch_indices_store_throttle_max_bytes_per_sec</entry>
              <entry>indices.store.throttle.max_bytes_per_sec</entry>
              <entry>80 MB</entry>
              <entry>20 MB</entry>
              <entry>Slanting performance in favor of heavier indexing usage over search
                usage.</entry>
            </row>
            <row>
              <entry>elasticsearch_index_refresh_interval</entry>
              <entry>index.refresh_interval</entry>
              <entry>30s</entry>
              <entry>1s</entry>
              <entry>Increasing refresh interval reduces overhead.</entry>
            </row>
            <row>
              <entry>elasticsearch_index_merge_scheduler_max_thread_count</entry>
              <entry>index.merge.scheduler.max_thread_count</entry>
              <entry>1</entry>
              <entry>cores/2</entry>
              <entry>Elasticsearch recommends 1 if using spinning disks.</entry>
            </row>
            <row>
              <entry>elasticsearch_index_translog_flush_threashhold_ops</entry>
              <entry>index.translog.flush_threshhold_ops</entry>
              <entry>150000</entry>
              <entry>unlimited</entry>
              <entry>Each shard has a transaction log or write ahead log associated with it. This
                setting controls when commits occur.</entry>
            </row>
            <row>
              <entry>elasticsearch_index_translog_flush_threashhold_size</entry>
              <entry>index.translog.flush_threshhold_size</entry>
              <entry>1 GB</entry>
              <entry>512 MB</entry>
              <entry>Increasing this setting decreases fsync.</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </section>
  </body>
</topic>
