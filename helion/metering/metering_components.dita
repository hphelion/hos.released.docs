<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd" >
<topic xml:lang="en-us" id="topic4362">
  <title><ph conkeyref="HOS-conrefs/product-title"/>Ceilometer Metering Service
    Components</title>
  <prolog>
    <metadata>
      <othermeta name="layout" content="default"/>
      <othermeta name="product-version" content="HPE Helion Openstack"/>
      <othermeta name="product-version" content="HPE Helion Openstack 1.1"/>
      <othermeta name="product-version1" content="HPE Helion Openstack"/>
      <othermeta name="product-version2" content="HPE Helion Openstack 1.1"/>
    </metadata>
  </prolog>
  <body><!--not tested--><!--Needs Edit-->
    <p conkeyref="HOS-conrefs/applies-to"/>
    <p>
      <!--PUBLISHED-->
      <!--./commercial/GA1/ceilometer/1.1commerical.services-reporting-components.md-->
      <!--permalink: /helion/openstack/1.1/services/reporting/components/--></p>
    <p>The Metering service is installed during the <keyword keyref="kw-hos"/> installation process. During
      installation, the Metering service is automatically configured to collect data from the Nova,
      Cinder, Glance and Neutron services.</p>
    <p>Each of the metering processes has a configuration file.</p>
    <p>The installation creates several management nodes running different metering components.</p>
   <!-- <p>
      <image href="../../media/metering/ceil_overallarchi.png" id="image_mbd_c5t_ct"
        placement="break"/></p> -->
    <section id="controller1_components">
      <title>Ceilometer Components on Controller nodes</title>
      <p>This controller node is the first of the High Available (HA) cluster. In this node there is
        an instance of the Ceilometer API running under the HA Proxy Virtual IP address. </p>
      <p>
        <b>Note</b>: When a configuration change is made to an API running under the HA Proxy, that
        change needs to be replicated in <b>all</b> controllers.</p>
      <p>The ceilometer-api are now running as part of the Apache2 service together with Horizon and
        Keystone. To remove them from the active list so that changes can be made and then
        re-instate them, use the following commands.</p>
      <ol>
        <li>Disable the Ceilometer API on the active
          sites.<codeblock>sudo a2dissite ceilometer_modwsgi.conf</codeblock></li>
        <li>Perform all necessary changes. The Ceilometer API will not be served until it is
          re-enabled.</li>
        <li>Re-enable the Ceilometer API on the active
          sites.<codeblock>sudo a2ensite ceilometer_modwsgi.conf</codeblock></li>
        <li>The new changes need to be picked up by Apache2. If possible, force a reload rather than
          a restart. Unlike a restart, the reload waits for currently active sessions to gracefully
          terminate or complete.<codeblock>sudo  /etc/init.d/apache2 force-reload</codeblock></li>
      </ol>
    </section>
    <section id="ceilometer-sample-polling">
      <title>Ceilometer Sample Polling</title>
      <p>The Sample Polling is part of the Central Agent. Once sent to the RabbitMQ service, they
        are consumed by the Collector and stored in the database. The Collector is also responsible
        for consuming and storing notifications. Here there is a high level picture of the overall
        polling/collecting cycle.</p>
     <!-- <p><image href="../../media/metering/ceil_collectorandagents.png" id="image_u42_fvt_ct"/></p>-->
    </section>
    <section id="centralagent">
      <title>Ceilometer Central Agent</title>
      <p>The Central Agent is responsible for coordinating the polling activity. It parses the
          <b>pipeline.yml</b> configuration file and identifies all the sources that need to be
        polled from. The sources are then evaluated using a discovery mechanism and all the sources
        are translated to resources where a dedicated pollster can retrieve and publish data. At
        each identified interval the discovery mechanism is triggered, the resource list is
        composed, and the data is polled and sent to the queue.</p>
      <p>Metering processes should normally be operating at all times. Upstart will continually
        attempt to restart stopped processes even if the process was deliberately stopped manually.
        In order to avoid this conflict, stop or start processes using the following commands.</p>
      <ol>
        <li>Determine whether the process is
          running:<codeblock>sudo service ceilometer-agent-central status 
ceilometer-agent-central start/running, process 27989</codeblock></li>
        <li>Start or stop the process as
          needed:<codeblock>sudo service ceilometer-agent-central stop</codeblock>or<codeblock>sudo service ceilometer-agent-central start</codeblock></li>
      </ol>
    </section>
    <section id="collector">
      <title>Ceilometer Collector</title>
      <p>The collector is responsible for getting the samples/events from the RabbitMQ service and
        storing it in the main database.</p>
      <p>Metering processes should normally be operating at all times. Upstart will continually
        attempt to restart stopped processes even if the process was deliberately stopped manually.
        In order to avoid this conflict, stop or start processes using the following commands.</p>
      <ol>
        <li>Determine whether the process is
          running:<codeblock>sudo service ceilometer-collector status 
ceilometer-collector start/running, process 27455</codeblock></li>
        <li>Start or stop the process as
          needed:<codeblock>sudo service ceilometer-collector stop</codeblock>or
          <codeblock>sudo service ceilometer-collector start</codeblock></li>
      </ol>
    </section>
  </body>
</topic>
