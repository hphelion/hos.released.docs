<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="configure_logging">
  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring the Centralized Logging
    Service</title>
  <body>
    <p conkeyref="HOS-conrefs/applies-to"/>
    <section id="config">
      <p>In <keyword keyref="kw-hos-phrase"/>, you have the option to configure the Centralized
        Logging service for your specific needs. This topic covers the following:</p>
      <ul>
        <li><xref href="#configure_logging/config_files">Main Configuration Files</xref></li>
        <li><xref href="#configure_logging/general_config">General Configuration</xref></li>
        <li><xref href="#configure_logging/kibana_config">Kibana Configuration</xref></li>
        <li><xref href="#configure_logging/elasticsearch_config">Elasticsearch
          Configuration</xref></li>
        <li><xref href="#configure_logging/service_config">Service Logging Level
            Configuration</xref></li>
      </ul>
    </section>
    <section id="config_files"><title>Main Configuration Files</title>
      <p>Centralized Logging can be configured via the configuration files in the
          <codeph>~/helion/my_cloud/config/logging/</codeph> directory on the lifecycle manager.
        These files and their use are described below:</p>
      <table frame="all" rowsep="1" colsep="1" id="table_wtv_rc5_st">
        <tgroup cols="2">
          <colspec colname="c1" colnum="1"/>
          <colspec colname="c2" colnum="2"/>
          <thead>
            <row>
              <entry>File</entry>
              <entry>Description</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>main.yml</entry>
              <entry>Main configuration file for all centralized logging components.</entry>
            </row>
            <row>
              <entry>elasticsearch.yml.j2</entry>
              <entry>Main configuration file for Elasticsearch.</entry>
            </row>
            <row>
              <entry>elasticsearch-default.j2</entry>
              <entry>Default overrides for the Elasticsearch init script.</entry>
            </row>
            <row>
              <entry>kibana.yml.j2</entry>
              <entry>Main configuration file for Kibana.</entry>
            </row>
            <row>
              <entry>kibana-apache2.conf.j2</entry>
              <entry>Apache configuration file for Kibana.</entry>
            </row>
            <row>
              <entry>logstash.conf.j2</entry>
              <entry>Logstash inputs/outputs configuration.</entry>
            </row>
            <row>
              <entry>logstash-default.j2</entry>
              <entry>Default overrides for the Logstash init script.</entry>
            </row>
            <row>
              <entry>beaver.conf.j2</entry>
              <entry>Main configuration file for Beaver.</entry>
            </row>
            <row>
              <entry>vars</entry>
              <entry>Path to logrotate configuration files.</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </section>
    <section id="general_config">
      <title>General Configuration</title>
      <p>The Centralized Logging service needs to have enough resources available to it to perform
        adequately for different scale environments. The base logging levels are tuned during
        installation according to the amount of RAM allocated to your control plane nodes to ensure
        optimum performance.</p>
      <table frame="all" rowsep="1" colsep="1" id="table_grx_2f5_st">
        <tgroup cols="7">
          <colspec colname="c1" colnum="1"/>
          <colspec colname="c2" colnum="2"/>
          <colspec colname="c3" colnum="3"/>
          <colspec colname="c4" colnum="4"/>
          <colspec colname="c5" colnum="5"/>
          <colspec colname="c6" colnum="6"/>
          <colspec colname="newCol7" colnum="7" colwidth="1*"/>
          <thead>
            <row>
              <entry>Component</entry>
              <entry>Ansible Variable</entry>
              <entry>Demo (&lt;32 GB)</entry>
              <entry>Small (&lt;64 GB)</entry>
              <entry>Medium (&lt;128 GB)</entry>
              <entry>Large (>= 128 GB)</entry>
              <entry>Description</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>Elasticsearch</entry>
              <entry>elasticsearch_heap_size</entry>
              <entry>256 MB</entry>
              <entry>8 GB</entry>
              <entry>16 GB</entry>
              <entry>32 GB</entry>
              <entry>Amount of heap allocated to Elasticsearch.</entry>
            </row>
            <row>
              <entry>Logstash</entry>
              <entry>logstash_heap_size</entry>
              <entry>256 MB</entry>
              <entry>2 GB</entry>
              <entry>4 GB</entry>
              <entry>8 GB</entry>
              <entry>Amount of heap allocated to Logstash.</entry>
            </row>
            <row>
              <entry>Logstash</entry>
              <entry>logstash_num_workers</entry>
              <entry>10 threads</entry>
              <entry>10 threads</entry>
              <entry>20 threads</entry>
              <entry>30 threads</entry>
              <entry>Number of Logstash threads to spawn.</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
      <p>These values can be viewed and changed in the
          <codeph>~/helion/my_cloud/config/logging/main.yml</codeph> file, but you will need to run
        a reconfigure of the Centralized Logging service if changes are made.</p>
      <note type="warning">The total process memory consumption for Elasticsearch will be the above
        allocated heap value plus any Java Virtual Machine (JVM) overhead.</note>
      <p><b>Disk Size Requirements</b></p>
      <p>In the entry-scale models, the disk partition sizes on your controller nodes for the
        logging and elasticsearch data are set as a percentage of your total disk size. You can see
        these in the <codeph>~/helion/my_cloud/definition/data/disks_controller.yml</codeph> file on
        the lifecycle manager.</p>
      <p>Here are snippets:</p>
      <codeblock># Local Log files.
- name: log
  size: 13%
  mount: /var/log
  fstype: ext4
  mkfs-opts: -O large_file

# Data storage for centralized logging. This holds log entries from all
# servers in the cloud and hence can require a lot of disk space.
- name: elasticsearch
  size: 30%
  mount: /var/lib/elasticsearch
  fstype: ext4</codeblock>
      <p>Given these percentages, you will want to ensure your total disk size for your controller
        nodes is enough that you meet the following partition size requirements depending on the
        total scale of your environment:</p>
      <table frame="all" rowsep="1" colsep="1" id="table_xld_n31_t5">
        <tgroup cols="4">
          <colspec colname="c1" colnum="1"/>
          <colspec colname="c2" colnum="2"/>
          <colspec colname="c3" colnum="3"/>
          <colspec colname="c4" colnum="4"/>
          <thead>
            <row>
              <entry>Partition</entry>
              <entry>Small Scale</entry>
              <entry>Medium Scale</entry>
              <entry>Large Scale</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>/var/log</entry>
              <entry>200 GB</entry>
              <entry>400 GB</entry>
              <entry>500 GB</entry>
            </row>
            <row>
              <entry>/var/lib/elasticsearch</entry>
              <entry>1.5 TB</entry>
              <entry>3 TB</entry>
              <entry>6 TB</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </section>
    <section id="kibana_config">
      <title>Kibana Configuration</title>
      <p>The access information for Kibana is defined in the
          <codeph>~/helion/my_cloud/config/logging/main.yml</codeph> file and implemented in the
        Kibana configuration file
          <codeph>~/helion/my_cloud/config/logging/kibana-apache2.conf.j2</codeph>.</p>
      <table frame="all" rowsep="1" colsep="1" id="table_spl_rg5_st">
        <tgroup cols="3">
          <colspec colname="c1" colnum="1"/>
          <colspec colname="c2" colnum="2"/>
          <colspec colname="c3" colnum="3"/>
          <thead>
            <row>
              <entry>Ansible Variable</entry>
              <entry>Default Value</entry>
              <entry>Description</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>kibana_user</entry>
              <entry>kibana</entry>
              <entry>Username that will be required for logging into the Kibana UI.</entry>
            </row>
            <row>
              <entry>kibana_pass</entry>
              <entry>random password is generated</entry>
              <entry>Password generated during installation that is used to login to the Kibana
                UI.</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </section>
    <section id="elasticsearch_config">
      <title>Elasticsearch Configuration</title>
      <p>Elasticsearch has a number of tunable options exposed in its configuration that we have
        utilized to tune Elasticsearch in <keyword keyref="kw-hos"/> so that we favor indexing speed
        over search speed. We have also tuned it for optimal performance in low RAM environments.
        The options that we have modified are listed below along with an explanation as to why they
        were modified.</p>
      <p>These configurations are defined in the
          <codeph>~/helion/my_cloud/config/logging/main.yml</codeph> file and are implemented in the
        Elasticsearch configuration file
          <codeph>~/helion/my_cloud/config/logging/elasticsearch.yml.j2</codeph>.</p>
      <table frame="all" rowsep="1" colsep="1" id="table_qsd_3h5_st">
        <tgroup cols="5">
          <colspec colname="c1" colnum="1"/>
          <colspec colname="c2" colnum="2"/>
          <colspec colname="c3" colnum="3"/>
          <colspec colname="c4" colnum="4"/>
          <colspec colname="c5" colnum="5"/>
          <thead>
            <row>
              <entry>Ansible Variable</entry>
              <entry>Configuration Parameter</entry>
              <entry>Default <keyword keyref="kw-hos"/> Value</entry>
              <entry>Elasticsearch Default Value</entry>
              <entry>Comments</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>elasticsearch_cluster_name</entry>
              <entry>cluster name</entry>
              <entry>elasticsearch</entry>
              <entry>elasticsearch</entry>
              <entry>Name of the Elasticsearch cluster. This variable cannot be changed after the
                initial deployment. Doing so will reset all Elasticsearch indices.</entry>
            </row>
            <row>
              <entry>elasticsearch_indices_fielddata_cache_size</entry>
              <entry>indices.fielddata.cache.size</entry>
              <entry>15%</entry>
              <entry>unbounded</entry>
              <entry>By default, this setting is <b>unbounded</b>—Elasticsearch will never evict
                data from fielddata, which is less than ideal when trying to conserve on memory
                usage.</entry>
            </row>
            <row>
              <entry>elasticsearch_indices_breaker_fielddata_limit</entry>
              <entry>indices.breaker.fielddata.limit</entry>
              <entry>25%</entry>
              <entry>60%</entry>
              <entry>The field data circuit breaker enables Elasticsearch to estimate the amount of
                memory a field will require to be loaded into memory. This value must be greater
                than <b>cache.size</b> to evict data properly.</entry>
            </row>
            <row>
              <entry>elasticsearch_indices_ttl_bulk_size</entry>
              <entry>indices.ttl.bulk_size</entry>
              <entry>100000</entry>
              <entry>10000</entry>
              <entry>The number of expired docs to delete at once.</entry>
            </row>
            <row>
              <entry>elasticsearch_indices_cache_filter_size</entry>
              <entry>indices.cache.filter.expire</entry>
              <entry>6h</entry>
              <entry>-1</entry>
              <entry>By default, this setting is -1 (i.e., never expires).</entry>
            </row>
            <row>
              <entry>elasticsearch_indices_memory_index_buffer_size</entry>
              <entry>indices.memory.index_buffer_size</entry>
              <entry>50%</entry>
              <entry>10%</entry>
              <entry>Slanting performance in favor of heavier indexing usage over search
                usage.</entry>
            </row>
            <row>
              <entry>elasticsearch_indices_memory_min_index_buffer_size</entry>
              <entry>indices.memory.min_index_buffer_size</entry>
              <entry>200 MB</entry>
              <entry>48 MB</entry>
              <entry>Slanting performance in favor of heavier indexing usage over search
                usage.</entry>
            </row>
            <row>
              <entry>elasticsearch_indices_memory_min_shard_index_buffer_size</entry>
              <entry>indices.memory.min_shard_index_buffer_size</entry>
              <entry>12 MB</entry>
              <entry>4 MB</entry>
              <entry>Slanting performance in favor of heavier indexing usage over search
                usage.</entry>
            </row>
            <row>
              <entry>elasticsearch_indices_store_throttle_type</entry>
              <entry>indices.store.throttle.type</entry>
              <entry>merge</entry>
              <entry>merge</entry>
              <entry>Configures store module throttle for merges.</entry>
            </row>
            <row>
              <entry>elasticsearch_indices_store_throttle_max_bytes_per_sec</entry>
              <entry>indices.store.throttle.max_bytes_per_sec</entry>
              <entry>80 MB</entry>
              <entry>20 MB</entry>
              <entry>Slanting performance in favor of heavier indexing usage over search
                usage.</entry>
            </row>
            <row>
              <entry>elasticsearch_index_refresh_interval</entry>
              <entry>index.refresh_interval</entry>
              <entry>30s</entry>
              <entry>1s</entry>
              <entry>Increasing refresh interval reduces overhead.</entry>
            </row>
            <row>
              <entry>elasticsearch_index_merge_scheduler_max_thread_count</entry>
              <entry>index.merge.scheduler.max_thread_count</entry>
              <entry>1</entry>
              <entry>cores/2</entry>
              <entry>Elasticsearch recommends 1 if using spinning disks.</entry>
            </row>
            <row>
              <entry>elasticsearch_index_translog_flush_threashhold_ops</entry>
              <entry>index.translog.flush_threshhold_ops</entry>
              <entry>150000</entry>
              <entry>unlimited</entry>
              <entry>Each shard has a transaction log or write ahead log associated with it. This
                setting controls when commits occur.</entry>
            </row>
            <row>
              <entry>elasticsearch_index_translog_flush_threashhold_size</entry>
              <entry>index.translog.flush_threshhold_size</entry>
              <entry>1 GB</entry>
              <entry>512 MB</entry>
              <entry>Increasing this setting decreases fsync.</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </section>
    <section id="service_config"><title>Service Logging Level Configuration</title>
      <p>To configure the logging level for a specific service follow these steps:</p>
      <p>
        <table frame="all" rowsep="1" colsep="1" id="loglevel_config">
          <tgroup cols="4">
            <colspec colname="c1" colnum="1"/>
            <colspec colname="c2" colnum="2"/>
            <colspec colname="c3" colnum="3"/>
            <colspec colname="c4" colnum="4"/>
            <thead>
              <row>
                <entry>Service</entry>
                <entry>Sub-component(s)</entry>
                <entry>Expected Default Logging Level</entry>
                <entry>Steps to Change Log Level</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry morerows="1"><p>Ceilometer</p></entry>
                <entry><p>ceilometer-api</p>
                  <p>ceilometer-collector</p>
                  <p>ceilometer-agent-notification</p>
                  <p>ceilometer-agent-central</p>
                  <p>ceilometer-expirer</p></entry>
                <entry><p>INFO</p></entry>
                <entry><p>You can change the <codeph>ceilometer_loglevel</codeph> in the file below
                    for all components during deployment or after deployment:</p>
                  <codeblock>~/helion/hos/ansible/roles/_CEI-CMN/defaults/main.yml</codeblock>
                  <p>You can also change the log level for individual Ceilometer components by
                    changing one or more of the files below:</p>
                  <codeblock>~/helion/hos/ansible/roles/CEI-API/templates/api-logging.conf.j2
~/helion/hos/ansible/roles/CEI-COL/templates/collector-logging.conf.j2
~/helion/hos/ansible/roles/CEI-NAG/templates/agent-notification-logging.conf.j2
~/helion/hos/ansible/roles/CEI-CAG/templates/agent-central-logging.conf.j2
~/helion/hos/ansible/roles/CEI-EXP/templates/expirer-logging.conf.j2</codeblock>
                  <p>For post-deployment log level changes, run the following commands to commit
                    your changes to the above files to git and reconfigure the Ceilometer service
                    with the new log levels:
                    <codeblock>cd ~/helion/hos/ansible
git add -A
git commit -m "change Ceilometer log levels"
ansible-playbook -i hosts/localhost config-processor-run.yml
ansible-playbook -i hosts/localhost ready-deployment.yml
cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts ceilometer-reconfigure.yml</codeblock></p></entry>
              </row>
              <row>
                <entry><p>ceilometer-alarm-evaluator-json</p></entry>
                <entry><p>INFO</p></entry>
                <entry><p>This alarm functionality has been disabled.</p></entry>
              </row>
              <row>
                <entry><p>Ceph</p></entry>
                <entry><p>ceph-mon</p>
                  <p>ceph-osd</p></entry>
                <entry><p>INFO</p></entry>
                <entry>
                  <p>Ceph exposes the logging configuration templates on the lifecycle manager in
                    the following file:</p>
                  <codeblock>~/helion/hos/ansible/roles/_CEP-CMN/defaults/main.yml</codeblock>
                  <p>Change the <codeph>INFO</codeph> value to the desired logging level.</p>
                  <p>Example showing how you can change the <codeph>ceph-mon</codeph> logging level
                    to DEBUG:</p>
                  <codeblock>ceph_mon_log_level: "{{ helion_loglevel | default('<b>DEBUG</b>') }}"
ceph_osd_log_level: "{{ helion_loglevel | default('INFO') }}"
ceph_rgw_log_level: "{{ helion_loglevel | default('INFO') }}"</codeblock>
                  <p>After the needed changes are done (for example logging level changes to local
                    or centralized logging), run the following commands, targeting relevant nodes to
                    deploy the configuration change:</p>
                  <codeblock>cd ~/helion/hos/ansible
git add -A
git commit -m "change Ceph log levels"
ansible-playbook -i hosts/localhost config-processor-run.yml
ansible-playbook -i hosts/localhost ready-deployment.yml
cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts ceph-reconfigure.yml</codeblock>
                </entry>
              </row>
              <row>
                <entry><p>Cinder</p></entry>
                <entry>cinder (local)<p>cinder-logstash (centralized logging)</p></entry>
                <entry>DEBUG<p>INFO</p></entry>
                <entry>
                  <p>Cinder exposes the logging configuration templates on the lifecycle manager in
                    the following file:</p>
                  <codeblock>~/helion/hos/ansible/roles/_CND-CMN/defaults/main.yml</codeblock>
                  <p>To change the local logging level for Cinder services, change the value of the
                    line below:</p>
                  <codeblock>cinder_default_loglevel: DEBUG</codeblock>
                  <p>To set the centralized logging level for Cinder services, change the value of
                    the line below:</p>
                  <codeblock>cinder_logstash_default_loglevel: INFO</codeblock>
                  <p>After the needed changes are done (for example logging level changes to local
                    or centralized logging), run the following commands, targeting relevant nodes to
                    deploy the configuration change:</p>
                  <codeblock>cd ~/helion/hos/ansible
git add -A
git commit -m "change Cinder log levels"
ansible-playbook -i hosts/localhost config-processor-run.yml
ansible-playbook -i hosts/localhost ready-deployment.yml
cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts cinder-reconfigure.yml</codeblock>
                </entry>
              </row>
              <row>
                <entry><p>EON</p></entry>
                <entry/>
                <entry/>
                <entry><p>See <xref href="../esx/logging.dita">EON Logging</xref> for more
                    details.</p></entry>
              </row>
              <row>
                <entry><p>Freezer</p></entry>
                <entry><p>freezer-agent</p>
                  <p>freezer-api</p>
                  <p>freezer-scheduler</p></entry>
                <entry><p>INFO</p></entry>
                <entry><p>Currently the freezer service does not support debug logs.</p></entry>
              </row>
              <row>
                <entry><p>Glance</p></entry>
                <entry><p>glance-api</p><p>glance-registry</p></entry>
                <entry><p>INFO</p></entry>
                <entry>
                  <p>Glance exposes the logging configuration templates on the lifecycle manager in
                    the following files:</p>
                  <codeblock>~/helion/my_cloud/config/glance/glance-api-logging.conf.j2
~/helion/my_cloud/config/glance/glance-registry-logging.conf.j2</codeblock>
                  <p>After the needed changes are done (for example logging level changes to local
                    or centralized logging), run the following commands, targeting relevant nodes to
                    deploy the configuration change:</p>
                  <codeblock>cd ~/helion/hos/ansible
git add -A
git commit -m "change Glance log levels"
ansible-playbook -i hosts/localhost config-processor-run.yml
ansible-playbook -i hosts/localhost ready-deployment.yml
cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts glance-reconfigure.yml</codeblock>
                </entry>
              </row>
              <row>
                <entry><p>Heat</p></entry>
                <entry><p>api-cfn</p><p>api-cloudwatch</p><p>api-logging</p><p>engine</p></entry>
                <entry><p>INFO</p></entry>
                <entry><p>Heat exposes the logging configuration templates on the lifecycle manager
                    in the following files:</p>
                  <codeblock>~/helion/my_cloud/config/heat/api-cfn-logging.conf.j2
~/helion/my_cloud/config/heat/api-cloudwatch-logging.conf.j2 
~/helion/my_cloud/config/heat/api-logging.conf.j2
~/helion/my_cloud/config/heat/engine-logging.conf.j2</codeblock>
                  <p>Users can edit these files and set the desired log level for both local as well
                    as centralized logging. After making the changes, run the following commands
                    from the lifecycle manager to apply the changes:</p>
                  <codeblock>cd ~/helion/hos/ansible
git add -A
git commit -m "change Heat log levels"
ansible-playbook -i hosts/localhost config-processor-run.yml
ansible-playbook -i hosts/localhost ready-deployment.yml
cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts heat-reconfigure.yml</codeblock></entry>
              </row>
              <row>
                <entry><p>Keystone</p></entry>
                <entry><p>key-api</p></entry>
                <entry><p>INFO</p></entry>
                <entry><p>To configure logging levels, see <xref
                      href="../identity/identity_reconfigure.dita">Identity Service
                      Reconfigure</xref></p></entry>
              </row>
              <row>
                <entry><p>Monasca</p></entry>
                <entry><p>monasca-persister</p><p>zookeeper</p><p>storm</p><p>monasca-notification</p><p>monasca-api</p><p>kafka</p><p>monasca-agent</p></entry>
                <entry><p>WARN</p></entry>
                <entry>
                  <p>All of the Monasca logging is defaulted to WARN. This should provide enough
                    information in the log files to pinpoint any issues. If you wish to provide more
                    details, you can change the logging level to INFO level. It is recommended to
                    avoid using the DEBUG level as that will put high stress on the controller nodes
                    and could overload the system.</p>
                  <p>To change the level for all of the services run:</p>
                  <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts monasca-reconfigure.yml -e "monasca_log_level=INFO"
ansible-playbook -i hosts/verb_hosts monasca-agent-reconfigure.yml -e "monasca_log_level=INFO"</codeblock>
                  <p>If you want to change the logging level per service, each of the following
                    files have the variable that you can set to the desired level:</p>
                  <codeblock>~/helion/hos/ansible/roles/monasca-persister/defaults/main.yml
~/helion/hos/ansible/roles/zookeeper/defaults/main.yml
~/helion/hos/ansible/roles/storm/defaults/main.yml
~/helion/hos/ansible/roles/monasca-notification/defaults/main.yml
~/helion/hos/ansible/roles/monasca-api/defaults/main.yml
~/helion/hos/ansible/roles/kafka/defaults/main.yml
~/helion/hos/ansible/roles/monasca-agent/defaults/main.yml (For this file, you will need to add the variable)</codeblock>
                  <p>Then run:</p>
                  <codeblock>cd ~/helion/hos/ansible
git add -A
git commit -m "change Monasca log levels"
ansible-playbook -i hosts/localhost config-processor-run.yml
ansible-playbook -i hosts/localhost ready-deployment.yml
cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts monasca-reconfigure.yml
ansible-playbook -i hosts/verb_hosts monasca-agent-reconfigure.yml</codeblock>
                </entry>
              </row>
              <row>
                <entry><p>Neutron</p></entry>
                <entry><p>neutron-server</p><p>dhcp-agent</p><p>l3-agent</p><p>lbaas-agent</p><p>metadata-agent</p><p>openvswitch-agent</p><p>vpn-agent</p></entry>
                <entry><p>INFO</p></entry>
                <entry>
                  <p>Neutron-server component logging can be changed by modifying the following
                    file:</p>
                  <codeblock>~/helion/my_cloud/config/neutron/logging.conf.j2</codeblock>
                  <p>All other Neutron service component log levels are configurable in the
                    following files:</p>
                  <codeblock>~/helion/my_cloud/config/neutron/vpn-agent-logging.conf.j2
~/helion/my_cloud/config/neutron/dhcp-agent-logging.conf.j2
~/helion/my_cloud/config/neutron/lbaas-agent-logging.conf.j2
~/helion/my_cloud/config/neutron/metadata-agent-logging.conf.j2
~/helion/my_cloud/config/neutron/openvswitch-agent-logging.conf.j2
~/helion/my_cloud/config/neutron/l3-agent-logging.conf.j2</codeblock>
                  <p>If you make edits to these files, you will need to run the following commands
                    to commit the changes:</p>
                  <codeblock>cd ~/helion/hos/ansible
git add -A
git commit -m "change Neutron log levels"
ansible-playbook -i hosts/localhost config-processor-run.yml
ansible-playbook -i hosts/localhost ready-deployment.yml
cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts neutron-reconfigure.yml</codeblock></entry>
              </row>
              <row>
                <entry><p>Nova</p></entry>
                <entry><p>All</p></entry>
                <entry><p>INFO</p></entry>
                <entry>
                  <p>Nova service log levels are configurable in the following files:</p>
                  <codeblock>~/helion/my_cloud/config/nova/novncproxy-logging.conf.j2
~/helion/my_cloud/config/nova/api-logging.conf.j2
~/helion/my_cloud/config/nova/compute-logging.conf.j2
~/helion/my_cloud/config/nova/conductor-logging.conf.j2
~/helion/my_cloud/config/nova/consoleauth-logging.conf.j2
~/helion/my_cloud/config/nova/scheduler-logging.conf.j2</codeblock>
                  <p>If you make edits to one or more of these files, then run the
                      <codeph>nova-reconfigure.yml</codeph> playbook after committing the
                    changes:</p>
                  <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts nova-reconfigure.yml</codeblock>
                </entry>
              </row>
              <row>
                <entry><p>Operations Console</p></entry>
                <entry><p>ops-web</p>
                  <p>ops-mon</p></entry>
                <entry><p>INFO</p></entry>
                <entry>
                  <p>You can change the Operations Console logging levels using the playbook below
                    during deployment or after deployment:</p>
                  <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts site.yml -e "ops_console_loglevel=DEBUG"</codeblock>
                </entry>
              </row>
              <row>
                <entry><p>Sherpa</p></entry>
                <entry/>
                <entry><p>INFO</p></entry>
                <entry>
                  <p>The logging level is set in the file below:</p>
                  <codeblock>/etc/sherpa/sherpa.conf</codeblock>
                  <p>To change the logging level, change from INFO to DEBUG in the following line in
                      <codeph>sherpa.conf</codeph>:</p>
                  <codeblock>'sherpa': {'level': 'INFO', 'handlers': ['file', 'json']}</codeblock>
                </entry>
              </row>
              <row>
                <entry><p>Swift</p></entry>
                <entry/>
                <entry><p>INFO</p></entry>
                <entry><p>The Swift service log levels are configurable in the file below:</p>
                  <codeblock>~/helion/my_cloud/config/swift/account-server.conf.j2</codeblock>
                  <p>Add the following line to the <codeph>[DEFAULT]</codeph> section:</p>
                  <codeblock>log_level = DEBUG</codeblock>
                  <p>If you make edits to this file, then run the following commands to commit them
                    to the environment:</p>
                  <codeblock>cd ~/helion/hos/ansible
git add -A
git commit -m "change Swift log level"
ansible-playbook -i hosts/localhost config-processor-run.yml
ansible-playbook -i hosts/localhost ready-deployment.yml
cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts swift-reconfigure.yml</codeblock>
                </entry>
              </row>
              <row>
                <entry><p>VSA</p></entry>
                <entry><p>vsa-installer</p></entry>
                <entry><p>INFO</p></entry>
                <entry>
                  <p>VSA exposes the logging configuration templates on the lifecycle manager in the
                    following file:</p>
                  <codeblock>~/helion/hos/ansible/roles/VSA-DEP/defaults/main.yml</codeblock>
                  <p>Change the <codeph>INFO</codeph> value to the desired logging level.</p>
                  <p>Example showing how you can change the <codeph>vsa-installer</codeph> logging
                    level to DEBUG:</p>
                  <codeblock>vsa_installer_log_level: "{{ helion_loglevel | default('DEBUG') }}"</codeblock>
                  <p>After the needed changes are done (for example logging level changes to local
                    or centralized logging), run the following commands, targeting relevant nodes to
                    deploy the configuration change:</p>
                  <codeblock>cd ~/helion/hos/ansible
git add -A
git commit -m "change Ceph log levels"
ansible-playbook -i hosts/localhost config-processor-run.yml
ansible-playbook -i hosts/localhost ready-deployment.yml
cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts vsa-reconfigure.yml</codeblock>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </p>
    </section>
  </body>
</topic>
