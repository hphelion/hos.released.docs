<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd" ><topic xml:lang="en-us" id="topic2065">
  <title><ph conkeyref="HOS-conrefs/product-title"/>Connecting the Database Service with the Application Lifecycle Service</title>
<prolog>
<metadata>
<othermeta name="layout" content="default"/>
<othermeta name="product-version" content="HPE Helion Development Platform"/>
<othermeta name="product-version" content="HPE Helion Development Platform 2.0"/>
<othermeta name="role" content="Systems Administrator"/>
<othermeta name="role" content="System Engineer"/>
<othermeta name="role" content="Cloud Administrator"/>
<othermeta name="role" content="Network Administrator"/>
<othermeta name="role" content="Application Developer"/>
<othermeta name="role" content="ISV Developer"/>
<othermeta name="role" content="Service Developer"/>
<othermeta name="role" content="Michael Khmelnitsky"/>
</metadata>
</prolog>
<body>
    <p>If you need a more durable or scalable MySQL database service, ensure that your ALS cluster
      is configured to use a database instance or a master-slave pair provided by the Database
      Service. The <uicontrol>MySQL</uicontrol> option is available on the
        <uicontrol>Databases</uicontrol> tab during the cluster creation process.</p>
    <note type="restriction">Clustered MySQL names do not populate in the Horizon web interface.
      Only single instances are displayed.</note>
    <section id="configure">
      <title>Configuration</title>
      <p>The benefits of an unmanaged database service include a lighter footprint (fewer virtual
        machines) and no dependency on a configured and available Database Service. The managed
        service provides capabilities such as lifecycle management and scalability that are not
        found in the unmanaged service.</p>
      <p>If the Database Service is not integrated with the cluster at the time the cluster is
        created, the administrator of the ALS cluster can switch from the unmanaged MySQL service to
        the managed Database Service using the following workflow:</p>
      <ol>
        <li>Enable the <codeph>root</codeph> user on the database instance that you want to add to
          the ALS cluster.</li>
        <li><codeph>ssh</codeph> into each ALS instance that contains the MySQL service and set the
          endpoint details, for
          example:<codeblock>$ kato config set mysql_node mysql/host 198.51.100.0</codeblock><codeblock>$ kato config set mysql_node mysql/port 3306</codeblock><codeblock>$ kato config set mysql_node mysql/user root</codeblock><codeblock>$ kato config set mysql_node mysql/pass myPassword</codeblock></li>
        <li>Increase the timeout settings to allow the <xref
            href="http://code.macournoyer.com/thin/" scope="external" format="html">Thin</xref>
          MySQL gateway to connect reliably to the database instance, for
          example:<codeblock>$ kato config set mysql_node connection_wait_timeout 100</codeblock><codeblock>$ kato config set mysql_node keep_alive_interval 60</codeblock></li>
        <li>Ensure that the MySQL configuration takes effect by running the following command:
          <codeblock>$ kato restart mysql</codeblock></li>
      </ol>
      <note>Application deployment does not change between the managed and unmanaged versions of the
        MySQL service. A developer can connect to and interact with the MySQL database in exactly
        the same way regardless of which service is used.</note>
    </section>
  </body>
</topic>
